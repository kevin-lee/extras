"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9556],{3905:(e,n,a)=>{a.d(n,{Zo:()=>S,kt:()=>C});var r=a(7294);function t(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){t(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,r,t=function(e,n){if(null==e)return{};var a,r,t={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var c=r.createContext({}),g=function(e){var n=r.useContext(c),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},S=function(e){var n=g(e.components);return r.createElement(c.Provider,{value:n},e.children)},_="mdxType",l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},b=r.forwardRef((function(e,n){var a=e.components,t=e.mdxType,i=e.originalType,c=e.parentName,S=o(e,["components","mdxType","originalType","parentName"]),_=g(a),b=t,C=_["".concat(c,".").concat(b)]||_[b]||l[b]||i;return a?r.createElement(C,s(s({ref:n},S),{},{components:a})):r.createElement(C,s({ref:n},S))}));function C(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var i=a.length,s=new Array(i);s[0]=b;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o[_]="string"==typeof e?e:t,s[1]=o;for(var g=2;g<i;g++)s[g]=a[g];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}b.displayName="MDXCreateElement"},1377:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>i,metadata:()=>o,toc:()=>g});var r=a(7462),t=(a(7294),a(3905));const i={sidebar_position:3,id:"cases",title:"cases syntax"},s=void 0,o={unversionedId:"extras-string/cases",id:"extras-string/cases",title:"cases syntax",description:"Import cases syntax",source:"@site/../generated-docs/docs/extras-string/cases.md",sourceDirName:"extras-string",slug:"/extras-string/cases",permalink:"/docs/extras-string/cases",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,id:"cases",title:"cases syntax"},sidebar:"tutorialSidebar",previous:{title:"strings syntax",permalink:"/docs/extras-string/strings"},next:{title:"Getting Started",permalink:"/docs/extras-render/"}},c={},g=[{value:"Import <code>cases</code> syntax",id:"import-cases-syntax",level:2},{value:"Case Change for <code>String</code>",id:"case-change-for-string",level:2},{value:"<code>String</code> to <code>PascalCase</code>",id:"string-to-pascalcase",level:3},{value:"<code>String</code> to one <code>PascalCase</code>",id:"string-to-one-pascalcase",level:3},{value:"<code>String</code> to <code>camelCase</code>",id:"string-to-camelcase",level:3},{value:"<code>String</code> to <code>Snake_Case</code>",id:"string-to-snake_case",level:3},{value:"<code>String</code> to <code>SNAKE_UPPER_CASE</code>",id:"string-to-snake_upper_case",level:3},{value:"<code>String</code> to <code>snake_lower_case</code>",id:"string-to-snake_lower_case",level:3},{value:"<code>String</code> to <code>Kebab-Case</code>",id:"string-to-kebab-case",level:3},{value:"<code>String</code> to <code>KEBAB-UPPER-CASE</code>",id:"string-to-kebab-upper-case",level:3},{value:"<code>String</code> to <code>kebab-lower-case</code>",id:"string-to-kebab-lower-case",level:3},{value:"Case Change for <code>Seq[String]</code>",id:"case-change-for-seqstring",level:2},{value:"<code>Seq[String]</code> to <code>PascalCaseString</code>",id:"seqstring-to-pascalcasestring",level:3},{value:"<code>Seq[String]</code> to <code>camelCaseString</code>",id:"seqstring-to-camelcasestring",level:3},{value:"<code>Seq[String]</code> to <code>Snake_Case_String</code>",id:"seqstring-to-snake_case_string",level:3},{value:"<code>Seq[String]</code> to <code>SNAKE_UPPER_CASE_STRING</code>",id:"seqstring-to-snake_upper_case_string",level:3},{value:"<code>Seq[String]</code> to <code>snake_lower_case_string</code>",id:"seqstring-to-snake_lower_case_string",level:3},{value:"<code>Seq[String]</code> to <code>Kebab-Case-String</code>",id:"seqstring-to-kebab-case-string",level:3},{value:"<code>Seq[String]</code> to <code>KEBAB-UPPER-CASE-STRING</code>",id:"seqstring-to-kebab-upper-case-string",level:3},{value:"<code>Seq[String]</code> to <code>kebab-lower-case-string</code>",id:"seqstring-to-kebab-lower-case-string",level:3},{value:"Split <code>String</code> by <code>PascalCase</code> or <code>cacmelCase</code>",id:"split-string-by-pascalcase-or-cacmelcase",level:2}],S={toc:g},_="wrapper";function l(e){let{components:n,...a}=e;return(0,t.kt)(_,(0,r.Z)({},S,a,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h2",{id:"import-cases-syntax"},"Import ",(0,t.kt)("inlineCode",{parentName:"h2"},"cases")," syntax"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-scala"},"import extras.strings.syntax.cases._\n")),(0,t.kt)("p",null,"Or"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-scala"},"import extras.strings.syntax.all._\n")),(0,t.kt)("h2",{id:"case-change-for-string"},"Case Change for ",(0,t.kt)("inlineCode",{parentName:"h2"},"String")),(0,t.kt)("h3",{id:"string-to-pascalcase"},(0,t.kt)("inlineCode",{parentName:"h3"},"String")," to ",(0,t.kt)("inlineCode",{parentName:"h3"},"PascalCase")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-scala"},'"Abc".toPascalCase\n// res0: String = "Abc"\n\n"AbcDefGhi".toPascalCase\n// res1: String = "AbcDefGhi"\n\n"abcDefGhi".toPascalCase\n// res2: String = "AbcDefGhi"\n\n"abc".toPascalCase\n// res3: String = "Abc"\n\n"ABC".toPascalCase\n// res4: String = "Abc"\n\n"Abc_Def_Ghi".toPascalCase\n// res5: String = "AbcDefGhi"\n\n"abc_def_ghi".toPascalCase\n// res6: String = "AbcDefGhi"\n\n"abc__def__ghi".toPascalCase\n// res7: String = "AbcDefGhi"\n\n"Abc-Def-Ghi".toPascalCase\n// res8: String = "AbcDefGhi"\n\n"abc-def-ghi".toPascalCase\n// res9: String = "AbcDefGhi"\n\n"abc--def--ghi".toPascalCase\n// res10: String = "AbcDefGhi"\n\n"Abc Def Ghi".toPascalCase\n// res11: String = "AbcDefGhi"\n\n"abc def ghi".toPascalCase\n// res12: String = "AbcDefGhi"\n\n"AbcDef_Ghi_jkl-Mno-pqr Stu vwx".toPascalCase\n// res13: String = "AbcDefGhiJklMnoPqrStuVwx"\n\n"AbcDef__Ghi___jkl--Mno---pqr  Stu   vwx".toPascalCase\n// res14: String = "AbcDefGhiJklMnoPqrStuVwx"\n')),(0,t.kt)("h3",{id:"string-to-one-pascalcase"},(0,t.kt)("inlineCode",{parentName:"h3"},"String")," to one ",(0,t.kt)("inlineCode",{parentName:"h3"},"PascalCase")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-scala"},'"Abc".toOnePascalCase\n// res15: String = "Abc"\n\n"AbcDefGhi".toOnePascalCase\n// res16: String = "Abcdefghi"\n\n"abcDefGhi".toOnePascalCase\n// res17: String = "Abcdefghi"\n\n"abc".toOnePascalCase\n// res18: String = "Abc"\n\n"ABC".toOnePascalCase\n// res19: String = "Abc"\n\n"Abc_Def_Ghi".toOnePascalCase\n// res20: String = "Abc_def_ghi"\n\n"abc_def_ghi".toOnePascalCase\n// res21: String = "Abc_def_ghi"\n\n"abc__def__ghi".toOnePascalCase\n// res22: String = "Abc__def__ghi"\n\n"Abc-Def-Ghi".toOnePascalCase\n// res23: String = "Abc-def-ghi"\n\n"abc-def-ghi".toOnePascalCase\n// res24: String = "Abc-def-ghi"\n\n"abc--def--ghi".toOnePascalCase\n// res25: String = "Abc--def--ghi"\n\n"Abc Def Ghi".toOnePascalCase\n// res26: String = "Abc def ghi"\n\n"abc def ghi".toOnePascalCase\n// res27: String = "Abc def ghi"\n\n"AbcDef_Ghi_jkl-Mno-pqr Stu vwx".toOnePascalCase\n// res28: String = "Abcdef_ghi_jkl-mno-pqr stu vwx"\n\n"AbcDef__Ghi___jkl--Mno---pqr  Stu   vwx".toOnePascalCase\n// res29: String = "Abcdef__ghi___jkl--mno---pqr  stu   vwx"\n')),(0,t.kt)("h3",{id:"string-to-camelcase"},(0,t.kt)("inlineCode",{parentName:"h3"},"String")," to ",(0,t.kt)("inlineCode",{parentName:"h3"},"camelCase")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-scala"},'"Abc".toCamelCase\n// res30: String = "abc"\n\n"AbcDefGhi".toCamelCase\n// res31: String = "abcDefGhi"\n\n"abcDefGhi".toCamelCase\n// res32: String = "abcDefGhi"\n\n"abc".toCamelCase\n// res33: String = "abc"\n\n"ABC".toCamelCase\n// res34: String = "abc"\n\n"Abc_Def_Ghi".toCamelCase\n// res35: String = "abcDefGhi"\n\n"abc_def_ghi".toCamelCase\n// res36: String = "abcDefGhi"\n\n"abc__def__ghi".toCamelCase\n// res37: String = "abcDefGhi"\n\n"Abc-Def-Ghi".toCamelCase\n// res38: String = "abcDefGhi"\n\n"abc-def-ghi".toCamelCase\n// res39: String = "abcDefGhi"\n\n"abc--def--ghi".toCamelCase\n// res40: String = "abcDefGhi"\n\n"Abc Def Ghi".toCamelCase\n// res41: String = "abcDefGhi"\n\n"abc def ghi".toCamelCase\n// res42: String = "abcDefGhi"\n\n"AbcDef_Ghi_jkl-Mno-pqr Stu vwx".toCamelCase\n// res43: String = "abcDefGhiJklMnoPqrStuVwx"\n\n"AbcDef__Ghi___jkl--Mno---pqr  Stu   vwx".toCamelCase\n// res44: String = "abcDefGhiJklMnoPqrStuVwx"\n')),(0,t.kt)("h3",{id:"string-to-snake_case"},(0,t.kt)("inlineCode",{parentName:"h3"},"String")," to ",(0,t.kt)("inlineCode",{parentName:"h3"},"Snake_Case")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-scala"},'"Abc".toSnakeCase\n// res45: String = "Abc"\n\n"AbcDefGhi".toSnakeCase\n// res46: String = "Abc_Def_Ghi"\n\n"abcDefGhi".toSnakeCase\n// res47: String = "abc_Def_Ghi"\n\n"abc".toSnakeCase\n// res48: String = "abc"\n\n"ABC".toSnakeCase\n// res49: String = "ABC"\n\n"Abc_Def_Ghi".toSnakeCase\n// res50: String = "Abc_Def_Ghi"\n\n"abc_def_ghi".toSnakeCase\n// res51: String = "abc_def_ghi"\n\n"ABC_DEF_GHI".toSnakeCase\n// res52: String = "ABC_DEF_GHI"\n\n"abc-def-ghi".toSnakeCase\n// res53: String = "abc_def_ghi"\n\n"Abc-Def-Ghi".toSnakeCase\n// res54: String = "Abc_Def_Ghi"\n\n"ABC-DEF-GHI".toSnakeCase\n// res55: String = "ABC_DEF_GHI"\n\n"abc def ghi".toSnakeCase\n// res56: String = "abc_def_ghi"\n\n"Abc Def Ghi".toSnakeCase\n// res57: String = "Abc_Def_Ghi"\n\n"ABC DEF GHI".toSnakeCase\n// res58: String = "ABC_DEF_GHI"\n')),(0,t.kt)("h3",{id:"string-to-snake_upper_case"},(0,t.kt)("inlineCode",{parentName:"h3"},"String")," to ",(0,t.kt)("inlineCode",{parentName:"h3"},"SNAKE_UPPER_CASE")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-scala"},'"Abc".toSnakeUpperCase\n// res59: String = "ABC"\n\n"AbcDefGhi".toSnakeUpperCase\n// res60: String = "ABC_DEF_GHI"\n\n"abcDefGhi".toSnakeUpperCase\n// res61: String = "ABC_DEF_GHI"\n\n"abc".toSnakeUpperCase\n// res62: String = "ABC"\n\n"ABC".toSnakeUpperCase\n// res63: String = "ABC"\n\n"Abc_Def_Ghi".toSnakeUpperCase\n// res64: String = "ABC_DEF_GHI"\n\n"abc_def_ghi".toSnakeUpperCase\n// res65: String = "ABC_DEF_GHI"\n\n"ABC_DEF_GHI".toSnakeUpperCase\n// res66: String = "ABC_DEF_GHI"\n\n"abc-def-ghi".toSnakeUpperCase\n// res67: String = "ABC_DEF_GHI"\n\n"Abc-Def-Ghi".toSnakeUpperCase\n// res68: String = "ABC_DEF_GHI"\n\n"ABC-DEF-GHI".toSnakeUpperCase\n// res69: String = "ABC_DEF_GHI"\n\n"abc def ghi".toSnakeUpperCase\n// res70: String = "ABC_DEF_GHI"\n\n"Abc Def Ghi".toSnakeUpperCase\n// res71: String = "ABC_DEF_GHI"\n\n"ABC DEF GHI".toSnakeUpperCase\n// res72: String = "ABC_DEF_GHI"\n')),(0,t.kt)("h3",{id:"string-to-snake_lower_case"},(0,t.kt)("inlineCode",{parentName:"h3"},"String")," to ",(0,t.kt)("inlineCode",{parentName:"h3"},"snake_lower_case")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-scala"},'"Abc".toSnakeLowerCase\n// res73: String = "abc"\n\n"AbcDefGhi".toSnakeLowerCase\n// res74: String = "abc_def_ghi"\n\n"abcDefGhi".toSnakeLowerCase\n// res75: String = "abc_def_ghi"\n\n"abc".toSnakeLowerCase\n// res76: String = "abc"\n\n"ABC".toSnakeLowerCase\n// res77: String = "abc"\n\n"Abc_Def_Ghi".toSnakeLowerCase\n// res78: String = "abc_def_ghi"\n\n"abc_def_ghi".toSnakeLowerCase\n// res79: String = "abc_def_ghi"\n\n"ABC_DEF_GHI".toSnakeLowerCase\n// res80: String = "abc_def_ghi"\n\n"abc-def-ghi".toSnakeLowerCase\n// res81: String = "abc_def_ghi"\n\n"Abc-Def-Ghi".toSnakeLowerCase\n// res82: String = "abc_def_ghi"\n\n"ABC-DEF-GHI".toSnakeLowerCase\n// res83: String = "abc_def_ghi"\n\n"abc def ghi".toSnakeLowerCase\n// res84: String = "abc_def_ghi"\n\n"Abc Def Ghi".toSnakeLowerCase\n// res85: String = "abc_def_ghi"\n\n"ABC DEF GHI".toSnakeLowerCase\n// res86: String = "abc_def_ghi"\n')),(0,t.kt)("h3",{id:"string-to-kebab-case"},(0,t.kt)("inlineCode",{parentName:"h3"},"String")," to ",(0,t.kt)("inlineCode",{parentName:"h3"},"Kebab-Case")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-scala"},'"Abc".toKebabCase\n// res87: String = "Abc"\n\n"AbcDefGhi".toKebabCase\n// res88: String = "Abc-Def-Ghi"\n\n"abcDefGhi".toKebabCase\n// res89: String = "abc-Def-Ghi"\n\n"abc".toKebabCase\n// res90: String = "abc"\n\n"ABC".toKebabCase\n// res91: String = "ABC"\n\n"Abc_Def_Ghi".toKebabCase\n// res92: String = "Abc-Def-Ghi"\n\n"abc_def_ghi".toKebabCase\n// res93: String = "abc-def-ghi"\n\n"ABC_DEF_GHI".toKebabCase\n// res94: String = "ABC-DEF-GHI"\n\n"abc-def-ghi".toKebabCase\n// res95: String = "abc-def-ghi"\n\n"Abc-Def-Ghi".toKebabCase\n// res96: String = "Abc-Def-Ghi"\n\n"ABC-DEF-GHI".toKebabCase\n// res97: String = "ABC-DEF-GHI"\n\n"abc def ghi".toKebabCase\n// res98: String = "abc-def-ghi"\n\n"Abc Def Ghi".toKebabCase\n// res99: String = "Abc-Def-Ghi"\n\n"ABC DEF GHI".toKebabCase\n// res100: String = "ABC-DEF-GHI"\n')),(0,t.kt)("h3",{id:"string-to-kebab-upper-case"},(0,t.kt)("inlineCode",{parentName:"h3"},"String")," to ",(0,t.kt)("inlineCode",{parentName:"h3"},"KEBAB-UPPER-CASE")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-scala"},'"Abc".toKebabUpperCase\n// res101: String = "ABC"\n\n"AbcDefGhi".toKebabUpperCase\n// res102: String = "ABC-DEF-GHI"\n\n"abcDefGhi".toKebabUpperCase\n// res103: String = "ABC-DEF-GHI"\n\n"abc".toKebabUpperCase\n// res104: String = "ABC"\n\n"ABC".toKebabUpperCase\n// res105: String = "ABC"\n\n"Abc_Def_Ghi".toKebabUpperCase\n// res106: String = "ABC-DEF-GHI"\n\n"abc_def_ghi".toKebabUpperCase\n// res107: String = "ABC-DEF-GHI"\n\n"ABC_DEF_GHI".toKebabUpperCase\n// res108: String = "ABC-DEF-GHI"\n\n"abc-def-ghi".toKebabUpperCase\n// res109: String = "ABC-DEF-GHI"\n\n"Abc-Def-Ghi".toKebabUpperCase\n// res110: String = "ABC-DEF-GHI"\n\n"ABC-DEF-GHI".toKebabUpperCase\n// res111: String = "ABC-DEF-GHI"\n\n"abc def ghi".toKebabUpperCase\n// res112: String = "ABC-DEF-GHI"\n\n"Abc Def Ghi".toKebabUpperCase\n// res113: String = "ABC-DEF-GHI"\n\n"ABC DEF GHI".toKebabUpperCase\n// res114: String = "ABC-DEF-GHI"\n')),(0,t.kt)("h3",{id:"string-to-kebab-lower-case"},(0,t.kt)("inlineCode",{parentName:"h3"},"String")," to ",(0,t.kt)("inlineCode",{parentName:"h3"},"kebab-lower-case")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-scala"},'"Abc".toKebabLowerCase\n// res115: String = "abc"\n\n"AbcDefGhi".toKebabLowerCase\n// res116: String = "abc-def-ghi"\n\n"abcDefGhi".toKebabLowerCase\n// res117: String = "abc-def-ghi"\n\n"abc".toKebabLowerCase\n// res118: String = "abc"\n\n"ABC".toKebabLowerCase\n// res119: String = "abc"\n\n"Abc_Def_Ghi".toKebabLowerCase\n// res120: String = "abc-def-ghi"\n\n"abc_def_ghi".toKebabLowerCase\n// res121: String = "abc-def-ghi"\n\n"ABC_DEF_GHI".toKebabLowerCase\n// res122: String = "abc-def-ghi"\n\n"abc-def-ghi".toKebabLowerCase\n// res123: String = "abc-def-ghi"\n\n"Abc-Def-Ghi".toKebabLowerCase\n// res124: String = "abc-def-ghi"\n\n"ABC-DEF-GHI".toKebabLowerCase\n// res125: String = "abc-def-ghi"\n\n"abc def ghi".toKebabLowerCase\n// res126: String = "abc-def-ghi"\n\n"Abc Def Ghi".toKebabLowerCase\n// res127: String = "abc-def-ghi"\n\n"ABC DEF GHI".toKebabLowerCase\n// res128: String = "abc-def-ghi"\n')),(0,t.kt)("h2",{id:"case-change-for-seqstring"},"Case Change for ",(0,t.kt)("inlineCode",{parentName:"h2"},"Seq[String]")),(0,t.kt)("h3",{id:"seqstring-to-pascalcasestring"},(0,t.kt)("inlineCode",{parentName:"h3"},"Seq[String]")," to ",(0,t.kt)("inlineCode",{parentName:"h3"},"PascalCaseString")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-scala"},'List("Abc", "Def").mkPascalCaseString\n// res129: String = "AbcDef"\n\nList("AbcDef", "Ghi", "jkl", "MnoPqr").mkPascalCaseString\n// res130: String = "AbcDefGhiJklMnoPqr"\n\nList("abcDef", "Ghi", "jkl", "MnoPqr").mkPascalCaseString\n// res131: String = "AbcDefGhiJklMnoPqr"\n\nList("abc").mkPascalCaseString\n// res132: String = "Abc"\n\nList("ABC").mkPascalCaseString\n// res133: String = "Abc"\n\nList("Abc_Def_Ghi", "jkl_mno_Pqr").mkPascalCaseString\n// res134: String = "AbcDefGhiJklMnoPqr"\n\nList("abc_def_ghi", "jkl_mno_pqr", "st_u").mkPascalCaseString\n// res135: String = "AbcDefGhiJklMnoPqrStU"\n\nList("ABC_DEF_GHI", "JKL_MNO_PQR", "ST_U").mkPascalCaseString\n// res136: String = "AbcDefGhiJklMnoPqrStU"\n\nList("Abc-Def-Ghi", "jkl-mno-Pqr").mkPascalCaseString\n// res137: String = "AbcDefGhiJklMnoPqr"\n\nList("abc-def-ghi", "jkl-mno-pqr", "st-u").mkPascalCaseString\n// res138: String = "AbcDefGhiJklMnoPqrStU"\n\nList("ABC-DEF-GHI", "JKL-MNO-PQR", "ST-U").mkPascalCaseString\n// res139: String = "AbcDefGhiJklMnoPqrStU"\n\nList("Abc Def Ghi", "jkl mno Pqr").mkPascalCaseString\n// res140: String = "AbcDefGhiJklMnoPqr"\n\nList("abc def ghi", "jkl mno pqr", "st u").mkPascalCaseString\n// res141: String = "AbcDefGhiJklMnoPqrStU"\n\nList("ABC DEF GHI", "JKL MNO PQR", "ST U").mkPascalCaseString\n// res142: String = "AbcDefGhiJklMnoPqrStU"\n\nList(\n  "starBirdGlow Wave_Leaf-Book Wind-Sand_Rain Fire",\n  "Snow-Moon  Hike__Play--Jump  Calm--__Kind   Warm __-- Cool"\n).mkPascalCaseString\n// res143: String = "StarBirdGlowWaveLeafBookWindSandRainFireSnowMoonHikePlayJumpCalmKindWarmCool"\n')),(0,t.kt)("h3",{id:"seqstring-to-camelcasestring"},(0,t.kt)("inlineCode",{parentName:"h3"},"Seq[String]")," to ",(0,t.kt)("inlineCode",{parentName:"h3"},"camelCaseString")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-scala"},'List("Abc", "Def").mkCamelCaseString\n// res144: String = "abcDef"\n\nList("AbcDef", "Ghi", "jkl", "MnoPqr").mkCamelCaseString\n// res145: String = "abcDefGhiJklMnoPqr"\n\nList("abcDef", "Ghi", "jkl", "MnoPqr").mkCamelCaseString\n// res146: String = "abcDefGhiJklMnoPqr"\n\nList("abc").mkCamelCaseString\n// res147: String = "abc"\n\nList("ABC").mkCamelCaseString\n// res148: String = "abc"\n\nList("Abc_Def_Ghi", "jkl_mno_Pqr").mkCamelCaseString\n// res149: String = "abcDefGhiJklMnoPqr"\n\nList("abc_def_ghi", "jkl_mno_pqr", "st_u").mkCamelCaseString\n// res150: String = "abcDefGhiJklMnoPqrStU"\n\nList("ABC_DEF_GHI", "JKL_MNO_PQR", "ST_U").mkCamelCaseString\n// res151: String = "abcDefGhiJklMnoPqrStU"\n\nList("Abc-Def-Ghi", "jkl-mno-Pqr").mkCamelCaseString\n// res152: String = "abcDefGhiJklMnoPqr"\n\nList("abc-def-ghi", "jkl-mno-pqr", "st-u").mkCamelCaseString\n// res153: String = "abcDefGhiJklMnoPqrStU"\n\nList("ABC-DEF-GHI", "JKL-MNO-PQR", "ST-U").mkCamelCaseString\n// res154: String = "abcDefGhiJklMnoPqrStU"\n\nList("Abc Def Ghi", "jkl mno Pqr").mkCamelCaseString\n// res155: String = "abcDefGhiJklMnoPqr"\n\nList("abc def ghi", "jkl mno pqr", "st u").mkCamelCaseString\n// res156: String = "abcDefGhiJklMnoPqrStU"\n\nList("ABC DEF GHI", "JKL MNO PQR", "ST U").mkCamelCaseString\n// res157: String = "abcDefGhiJklMnoPqrStU"\n\nList(\n  "starBirdGlow Wave_Leaf-Book Wind-Sand_Rain Fire",\n  "Snow-Moon  Hike__Play--Jump  Calm--__Kind   Warm __-- Cool"\n).mkCamelCaseString\n// res158: String = "starBirdGlowWaveLeafBookWindSandRainFireSnowMoonHikePlayJumpCalmKindWarmCool"\n')),(0,t.kt)("h3",{id:"seqstring-to-snake_case_string"},(0,t.kt)("inlineCode",{parentName:"h3"},"Seq[String]")," to ",(0,t.kt)("inlineCode",{parentName:"h3"},"Snake_Case_String")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-scala"},'List("Abc", "Def").mkSnakeCaseString\n// res159: String = "Abc_Def"\n\nList("AbcDef", "Ghi", "jkl", "MnoPqr").mkSnakeCaseString\n// res160: String = "Abc_Def_Ghi_jkl_Mno_Pqr"\n\nList("abcDef", "Ghi", "jkl", "MnoPqr").mkSnakeCaseString\n// res161: String = "abc_Def_Ghi_jkl_Mno_Pqr"\n\nList("abc").mkSnakeCaseString\n// res162: String = "abc"\n\nList("ABC").mkSnakeCaseString\n// res163: String = "ABC"\n\nList("Abc_Def_Ghi", "jkl_mno_Pqr").mkSnakeCaseString\n// res164: String = "Abc_Def_Ghi_jkl_mno_Pqr"\n\nList("abc_def_ghi", "jkl_mno_pqr", "st_u").mkSnakeCaseString\n// res165: String = "abc_def_ghi_jkl_mno_pqr_st_u"\n\nList("ABC_DEF_GHI", "JKL_MNO_PQR", "ST_U").mkSnakeCaseString\n// res166: String = "ABC_DEF_GHI_JKL_MNO_PQR_ST_U"\n\nList("Abc-Def-Ghi", "jkl-mno-Pqr").mkSnakeCaseString\n// res167: String = "Abc_Def_Ghi_jkl_mno_Pqr"\n\nList("abc-def-ghi", "jkl-mno-pqr", "st-u").mkSnakeCaseString\n// res168: String = "abc_def_ghi_jkl_mno_pqr_st_u"\n\nList("ABC-DEF-GHI", "JKL-MNO-PQR", "ST-U").mkSnakeCaseString\n// res169: String = "ABC_DEF_GHI_JKL_MNO_PQR_ST_U"\n\nList("Abc Def Ghi", "jkl mno Pqr").mkSnakeCaseString\n// res170: String = "Abc_Def_Ghi_jkl_mno_Pqr"\n\nList("abc def ghi", "jkl mno pqr", "st u").mkSnakeCaseString\n// res171: String = "abc_def_ghi_jkl_mno_pqr_st_u"\n\nList("ABC DEF GHI", "JKL MNO PQR", "ST U").mkSnakeCaseString\n// res172: String = "ABC_DEF_GHI_JKL_MNO_PQR_ST_U"\n\nList(\n  "starBirdGlow Wave_Leaf-Book Wind-Sand_Rain Fire",\n  "Snow-Moon  Hike__Play--Jump  Calm--__Kind   Warm __-- Cool"\n).mkSnakeCaseString\n// res173: String = "star_Bird_Glow_Wave_Leaf_Book_Wind_Sand_Rain_Fire_Snow_Moon_Hike_Play_Jump_Calm_Kind_Warm_Cool"\n')),(0,t.kt)("h3",{id:"seqstring-to-snake_upper_case_string"},(0,t.kt)("inlineCode",{parentName:"h3"},"Seq[String]")," to ",(0,t.kt)("inlineCode",{parentName:"h3"},"SNAKE_UPPER_CASE_STRING")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-scala"},'List("Abc", "Def").mkSnakeUpperCaseString\n// res174: String = "ABC_DEF"\n\nList("AbcDef", "Ghi", "jkl", "MnoPqr").mkSnakeUpperCaseString\n// res175: String = "ABC_DEF_GHI_JKL_MNO_PQR"\n\nList("abcDef", "Ghi", "jkl", "MnoPqr").mkSnakeUpperCaseString\n// res176: String = "ABC_DEF_GHI_JKL_MNO_PQR"\n\nList("abc").mkSnakeUpperCaseString\n// res177: String = "ABC"\n\nList("ABC").mkSnakeUpperCaseString\n// res178: String = "ABC"\n\nList("Abc_Def_Ghi", "jkl_mno_Pqr").mkSnakeUpperCaseString\n// res179: String = "ABC_DEF_GHI_JKL_MNO_PQR"\n\nList("abc_def_ghi", "jkl_mno_pqr", "st_u").mkSnakeUpperCaseString\n// res180: String = "ABC_DEF_GHI_JKL_MNO_PQR_ST_U"\n\nList("ABC_DEF_GHI", "JKL_MNO_PQR", "ST_U").mkSnakeUpperCaseString\n// res181: String = "ABC_DEF_GHI_JKL_MNO_PQR_ST_U"\n\nList("Abc-Def-Ghi", "jkl-mno-Pqr").mkSnakeUpperCaseString\n// res182: String = "ABC_DEF_GHI_JKL_MNO_PQR"\n\nList("abc-def-ghi", "jkl-mno-pqr", "st-u").mkSnakeUpperCaseString\n// res183: String = "ABC_DEF_GHI_JKL_MNO_PQR_ST_U"\n\nList("ABC-DEF-GHI", "JKL-MNO-PQR", "ST-U").mkSnakeUpperCaseString\n// res184: String = "ABC_DEF_GHI_JKL_MNO_PQR_ST_U"\n\nList("Abc Def Ghi", "jkl mno Pqr").mkSnakeUpperCaseString\n// res185: String = "ABC_DEF_GHI_JKL_MNO_PQR"\n\nList("abc def ghi", "jkl mno pqr", "st u").mkSnakeUpperCaseString\n// res186: String = "ABC_DEF_GHI_JKL_MNO_PQR_ST_U"\n\nList("ABC DEF GHI", "JKL MNO PQR", "ST U").mkSnakeUpperCaseString\n// res187: String = "ABC_DEF_GHI_JKL_MNO_PQR_ST_U"\n\nList(\n  "starBirdGlow Wave_Leaf-Book Wind-Sand_Rain Fire",\n  "Snow-Moon  Hike__Play--Jump  Calm--__Kind   Warm __-- Cool"\n).mkSnakeUpperCaseString\n// res188: String = "STAR_BIRD_GLOW_WAVE_LEAF_BOOK_WIND_SAND_RAIN_FIRE_SNOW_MOON_HIKE_PLAY_JUMP_CALM_KIND_WARM_COOL"\n')),(0,t.kt)("h3",{id:"seqstring-to-snake_lower_case_string"},(0,t.kt)("inlineCode",{parentName:"h3"},"Seq[String]")," to ",(0,t.kt)("inlineCode",{parentName:"h3"},"snake_lower_case_string")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-scala"},'List("Abc", "Def").mkSnakeLowerCaseString\n// res189: String = "abc_def"\n\nList("AbcDef", "Ghi", "jkl", "MnoPqr").mkSnakeLowerCaseString\n// res190: String = "abc_def_ghi_jkl_mno_pqr"\n\nList("abcDef", "Ghi", "jkl", "MnoPqr").mkSnakeLowerCaseString\n// res191: String = "abc_def_ghi_jkl_mno_pqr"\n\nList("abc").mkSnakeLowerCaseString\n// res192: String = "abc"\n\nList("ABC").mkSnakeLowerCaseString\n// res193: String = "abc"\n\nList("Abc_Def_Ghi", "jkl_mno_Pqr").mkSnakeLowerCaseString\n// res194: String = "abc_def_ghi_jkl_mno_pqr"\n\nList("abc_def_ghi", "jkl_mno_pqr", "st_u").mkSnakeLowerCaseString\n// res195: String = "abc_def_ghi_jkl_mno_pqr_st_u"\n\nList("ABC_DEF_GHI", "JKL_MNO_PQR", "ST_U").mkSnakeLowerCaseString\n// res196: String = "abc_def_ghi_jkl_mno_pqr_st_u"\n\nList("Abc-Def-Ghi", "jkl-mno-Pqr").mkSnakeLowerCaseString\n// res197: String = "abc_def_ghi_jkl_mno_pqr"\n\nList("abc-def-ghi", "jkl-mno-pqr", "st-u").mkSnakeLowerCaseString\n// res198: String = "abc_def_ghi_jkl_mno_pqr_st_u"\n\nList("ABC-DEF-GHI", "JKL-MNO-PQR", "ST-U").mkSnakeLowerCaseString\n// res199: String = "abc_def_ghi_jkl_mno_pqr_st_u"\n\nList("Abc Def Ghi", "jkl mno Pqr").mkSnakeLowerCaseString\n// res200: String = "abc_def_ghi_jkl_mno_pqr"\n\nList("abc def ghi", "jkl mno pqr", "st u").mkSnakeLowerCaseString\n// res201: String = "abc_def_ghi_jkl_mno_pqr_st_u"\n\nList("ABC DEF GHI", "JKL MNO PQR", "ST U").mkSnakeLowerCaseString\n// res202: String = "abc_def_ghi_jkl_mno_pqr_st_u"\n\nList(\n  "starBirdGlow Wave_Leaf-Book Wind-Sand_Rain Fire",\n  "Snow-Moon  Hike__Play--Jump  Calm--__Kind   Warm __-- Cool"\n).mkSnakeLowerCaseString\n// res203: String = "star_bird_glow_wave_leaf_book_wind_sand_rain_fire_snow_moon_hike_play_jump_calm_kind_warm_cool"\n')),(0,t.kt)("h3",{id:"seqstring-to-kebab-case-string"},(0,t.kt)("inlineCode",{parentName:"h3"},"Seq[String]")," to ",(0,t.kt)("inlineCode",{parentName:"h3"},"Kebab-Case-String")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-scala"},'List("Abc", "Def").mkKebabCaseString\n// res204: String = "Abc-Def"\n\nList("AbcDef", "Ghi", "jkl", "MnoPqr").mkKebabCaseString\n// res205: String = "Abc-Def-Ghi-jkl-Mno-Pqr"\n\nList("abcDef", "Ghi", "jkl", "MnoPqr").mkKebabCaseString\n// res206: String = "abc-Def-Ghi-jkl-Mno-Pqr"\n\nList("abc").mkKebabCaseString\n// res207: String = "abc"\n\nList("ABC").mkKebabCaseString\n// res208: String = "ABC"\n\nList("Abc_Def_Ghi", "jkl_mno_Pqr").mkKebabCaseString\n// res209: String = "Abc-Def-Ghi-jkl-mno-Pqr"\n\nList("abc_def_ghi", "jkl_mno_pqr", "st_u").mkKebabCaseString\n// res210: String = "abc-def-ghi-jkl-mno-pqr-st-u"\n\nList("ABC_DEF_GHI", "JKL_MNO_PQR", "ST_U").mkKebabCaseString\n// res211: String = "ABC-DEF-GHI-JKL-MNO-PQR-ST-U"\n\nList("Abc-Def-Ghi", "jkl-mno-Pqr").mkKebabCaseString\n// res212: String = "Abc-Def-Ghi-jkl-mno-Pqr"\n\nList("abc-def-ghi", "jkl-mno-pqr", "st-u").mkKebabCaseString\n// res213: String = "abc-def-ghi-jkl-mno-pqr-st-u"\n\nList("ABC-DEF-GHI", "JKL-MNO-PQR", "ST-U").mkKebabCaseString\n// res214: String = "ABC-DEF-GHI-JKL-MNO-PQR-ST-U"\n\nList("Abc Def Ghi", "jkl mno Pqr").mkKebabCaseString\n// res215: String = "Abc-Def-Ghi-jkl-mno-Pqr"\n\nList("abc def ghi", "jkl mno pqr", "st u").mkKebabCaseString\n// res216: String = "abc-def-ghi-jkl-mno-pqr-st-u"\n\nList("ABC DEF GHI", "JKL MNO PQR", "ST U").mkKebabCaseString\n// res217: String = "ABC-DEF-GHI-JKL-MNO-PQR-ST-U"\n\nList(\n  "starBirdGlow Wave_Leaf-Book Wind-Sand_Rain Fire",\n  "Snow-Moon  Hike__Play--Jump  Calm--__Kind   Warm __-- Cool"\n).mkKebabCaseString\n// res218: String = "star-Bird-Glow-Wave-Leaf-Book-Wind-Sand-Rain-Fire-Snow-Moon-Hike-Play-Jump-Calm-Kind-Warm-Cool"\n')),(0,t.kt)("h3",{id:"seqstring-to-kebab-upper-case-string"},(0,t.kt)("inlineCode",{parentName:"h3"},"Seq[String]")," to ",(0,t.kt)("inlineCode",{parentName:"h3"},"KEBAB-UPPER-CASE-STRING")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-scala"},'List("Abc", "Def").mkKebabUpperCaseString\n// res219: String = "ABC-DEF"\n\nList("AbcDef", "Ghi", "jkl", "MnoPqr").mkKebabUpperCaseString\n// res220: String = "ABC-DEF-GHI-JKL-MNO-PQR"\n\nList("abcDef", "Ghi", "jkl", "MnoPqr").mkKebabUpperCaseString\n// res221: String = "ABC-DEF-GHI-JKL-MNO-PQR"\n\nList("abc").mkKebabUpperCaseString\n// res222: String = "ABC"\n\nList("ABC").mkKebabUpperCaseString\n// res223: String = "ABC"\n\nList("Abc_Def_Ghi", "jkl_mno_Pqr").mkKebabUpperCaseString\n// res224: String = "ABC-DEF-GHI-JKL-MNO-PQR"\n\nList("abc_def_ghi", "jkl_mno_pqr", "st_u").mkKebabUpperCaseString\n// res225: String = "ABC-DEF-GHI-JKL-MNO-PQR-ST-U"\n\nList("ABC_DEF_GHI", "JKL_MNO_PQR", "ST_U").mkKebabUpperCaseString\n// res226: String = "ABC-DEF-GHI-JKL-MNO-PQR-ST-U"\n\nList("Abc-Def-Ghi", "jkl-mno-Pqr").mkKebabUpperCaseString\n// res227: String = "ABC-DEF-GHI-JKL-MNO-PQR"\n\nList("abc-def-ghi", "jkl-mno-pqr", "st-u").mkKebabUpperCaseString\n// res228: String = "ABC-DEF-GHI-JKL-MNO-PQR-ST-U"\n\nList("ABC-DEF-GHI", "JKL-MNO-PQR", "ST-U").mkKebabUpperCaseString\n// res229: String = "ABC-DEF-GHI-JKL-MNO-PQR-ST-U"\n\nList("Abc Def Ghi", "jkl mno Pqr").mkKebabUpperCaseString\n// res230: String = "ABC-DEF-GHI-JKL-MNO-PQR"\n\nList("abc def ghi", "jkl mno pqr", "st u").mkKebabUpperCaseString\n// res231: String = "ABC-DEF-GHI-JKL-MNO-PQR-ST-U"\n\nList("ABC DEF GHI", "JKL MNO PQR", "ST U").mkKebabUpperCaseString\n// res232: String = "ABC-DEF-GHI-JKL-MNO-PQR-ST-U"\n\nList(\n  "starBirdGlow Wave_Leaf-Book Wind-Sand_Rain Fire",\n  "Snow-Moon  Hike__Play--Jump  Calm--__Kind   Warm __-- Cool"\n).mkKebabUpperCaseString\n// res233: String = "STAR-BIRD-GLOW-WAVE-LEAF-BOOK-WIND-SAND-RAIN-FIRE-SNOW-MOON-HIKE-PLAY-JUMP-CALM-KIND-WARM-COOL"\n')),(0,t.kt)("h3",{id:"seqstring-to-kebab-lower-case-string"},(0,t.kt)("inlineCode",{parentName:"h3"},"Seq[String]")," to ",(0,t.kt)("inlineCode",{parentName:"h3"},"kebab-lower-case-string")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-scala"},'List("Abc", "Def").mkKebabLowerCaseString\n// res234: String = "abc-def"\n\nList("AbcDef", "Ghi", "jkl", "MnoPqr").mkKebabLowerCaseString\n// res235: String = "abc-def-ghi-jkl-mno-pqr"\n\nList("abcDef", "Ghi", "jkl", "MnoPqr").mkKebabLowerCaseString\n// res236: String = "abc-def-ghi-jkl-mno-pqr"\n\nList("abc").mkKebabLowerCaseString\n// res237: String = "abc"\n\nList("ABC").mkKebabLowerCaseString\n// res238: String = "abc"\n\nList("Abc_Def_Ghi", "jkl_mno_Pqr").mkKebabLowerCaseString\n// res239: String = "abc-def-ghi-jkl-mno-pqr"\n\nList("abc_def_ghi", "jkl_mno_pqr", "st_u").mkKebabLowerCaseString\n// res240: String = "abc-def-ghi-jkl-mno-pqr-st-u"\n\nList("ABC_DEF_GHI", "JKL_MNO_PQR", "ST_U").mkKebabLowerCaseString\n// res241: String = "abc-def-ghi-jkl-mno-pqr-st-u"\n\nList("Abc-Def-Ghi", "jkl-mno-Pqr").mkKebabLowerCaseString\n// res242: String = "abc-def-ghi-jkl-mno-pqr"\n\nList("abc-def-ghi", "jkl-mno-pqr", "st-u").mkKebabLowerCaseString\n// res243: String = "abc-def-ghi-jkl-mno-pqr-st-u"\n\nList("ABC-DEF-GHI", "JKL-MNO-PQR", "ST-U").mkKebabLowerCaseString\n// res244: String = "abc-def-ghi-jkl-mno-pqr-st-u"\n\nList("Abc Def Ghi", "jkl mno Pqr").mkKebabLowerCaseString\n// res245: String = "abc-def-ghi-jkl-mno-pqr"\n\nList("abc def ghi", "jkl mno pqr", "st u").mkKebabLowerCaseString\n// res246: String = "abc-def-ghi-jkl-mno-pqr-st-u"\n\nList("ABC DEF GHI", "JKL MNO PQR", "ST U").mkKebabLowerCaseString\n// res247: String = "abc-def-ghi-jkl-mno-pqr-st-u"\n\nList(\n  "starBirdGlow Wave_Leaf-Book Wind-Sand_Rain Fire",\n  "Snow-Moon  Hike__Play--Jump  Calm--__Kind   Warm __-- Cool"\n).mkKebabLowerCaseString\n// res248: String = "star-bird-glow-wave-leaf-book-wind-sand-rain-fire-snow-moon-hike-play-jump-calm-kind-warm-cool"\n')),(0,t.kt)("h2",{id:"split-string-by-pascalcase-or-cacmelcase"},"Split ",(0,t.kt)("inlineCode",{parentName:"h2"},"String")," by ",(0,t.kt)("inlineCode",{parentName:"h2"},"PascalCase")," or ",(0,t.kt)("inlineCode",{parentName:"h2"},"cacmelCase")),(0,t.kt)("p",null,"You can split a ",(0,t.kt)("inlineCode",{parentName:"p"},"String")," value by PascalCase or camelCase."),(0,t.kt)("p",null,"e.g.)"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-scala"},'"StarBirdGlowWaveLeafBookWindSandRainFireSnowMoonHikePlayJumpCalmKindWarmSoftCool".splitByCase\n// res249: Vector[String] = Vector(\n//   "Star",\n//   "Bird",\n//   "Glow",\n//   "Wave",\n//   "Leaf",\n//   "Book",\n//   "Wind",\n//   "Sand",\n//   "Rain",\n//   "Fire",\n//   "Snow",\n//   "Moon",\n//   "Hike",\n//   "Play",\n//   "Jump",\n//   "Calm",\n//   "Kind",\n//   "Warm",\n//   "Soft",\n//   "Cool"\n// )\n')),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-scala"},'"starBirdGlowWaveLeafBookWindSandRainFireSnowMoonHikePlayJumpCalmKindWarmSoftCool".splitByCase\n// res250: Vector[String] = Vector(\n//   "star",\n//   "Bird",\n//   "Glow",\n//   "Wave",\n//   "Leaf",\n//   "Book",\n//   "Wind",\n//   "Sand",\n//   "Rain",\n//   "Fire",\n//   "Snow",\n//   "Moon",\n//   "Hike",\n//   "Play",\n//   "Jump",\n//   "Calm",\n//   "Kind",\n//   "Warm",\n//   "Soft",\n//   "Cool"\n// )\n')))}l.isMDXComponent=!0}}]);