"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2738],{5453:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"extras-scala-io/file","title":"File","description":"syntax","source":"@site/../generated-docs/docs/extras-scala-io/file.md","sourceDirName":"extras-scala-io","slug":"/extras-scala-io/file","permalink":"/docs/extras-scala-io/file","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"id":"file","title":"File"},"sidebar":"tutorialSidebar","previous":{"title":"Rgb","permalink":"/docs/extras-scala-io/truecolor/rgb"},"next":{"title":"Getting Started","permalink":"/docs/extras-refinement/"}}');var l=n(4848),s=n(8453);const r={sidebar_position:4,id:"file",title:"File"},a="File",o={},d=[{value:"syntax",id:"syntax",level:2},{value:"<code>listAllFilesRecursively</code>",id:"listallfilesrecursively",level:3},{value:"<code>deleteAllRecursively</code>",id:"deleteallrecursively",level:3},{value:"<code>TempFiles</code>",id:"tempfiles",level:2},{value:"<code>runWithTempDir</code>",id:"runwithtempdir",level:3},{value:"Example: test with hedgehog",id:"example-test-with-hedgehog",level:4}];function c(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.header,{children:(0,l.jsx)(t.h1,{id:"file",children:"File"})}),"\n",(0,l.jsx)(t.h2,{id:"syntax",children:"syntax"}),"\n",(0,l.jsx)(t.h3,{id:"listallfilesrecursively",children:(0,l.jsx)(t.code,{children:"listAllFilesRecursively"})}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"listAllFilesRecursively"})," in ",(0,l.jsx)(t.code,{children:"import extras.scala.io.file.syntax"})]}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.code,{children:"listAllFilesRecursively"})," returns all files and directories in the given ",(0,l.jsx)(t.code,{children:"File"})," as well as the given file itself if it is a directory."]}),"\n",(0,l.jsxs)(t.li,{children:["If it's a file, it returns a ",(0,l.jsx)(t.code,{children:"List"})," containing the given ",(0,l.jsx)(t.code,{children:"File"}),"."]}),"\n"]}),"\n",(0,l.jsxs)(t.admonition,{type:"note",children:[(0,l.jsxs)(t.p,{children:["The result of ",(0,l.jsx)(t.code,{children:"listAllFilesRecursively"})," is not sorted, so you need to sort it yourself.",(0,l.jsx)("br",{}),"\ne.g.)"]}),(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-scala",children:'listAllFilesRecursively("path/to/file").sorted\n'})})]}),"\n",(0,l.jsx)(t.p,{children:"e.g.) If the file structure looks like this"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{children:"\uf115 /tmp/a\n\u251c\u2500\u2500 \uf115 b\n\u2502  \u251c\u2500\u2500 \uf115 b-1\n\u2502  \u2502  \u251c\u2500\u2500 \uf15c b-1-1.txt\n\u2502  \u2502  \u251c\u2500\u2500 \uf15c b-1-2.txt\n\u2502  \u2502  \u2514\u2500\u2500 \uf15c b-1-3.txt\n\u2502  \u2514\u2500\u2500 \uf115 b-2\n\u2502     \u251c\u2500\u2500 \uf115 b-2-1\n\u2502     \u2502  \u251c\u2500\u2500 \uf15c b-2-1-1.txt\n\u2502     \u2502  \u2514\u2500\u2500 \uf15c b-2-1-2.txt\n\u2502     \u2514\u2500\u2500 \uf115 b-2-2\n\u251c\u2500\u2500 \uf115 c\n\u2502  \u2514\u2500\u2500 \uf15c c-1.txt\n\u2514\u2500\u2500 \uf115 d\n   \u251c\u2500\u2500 \uf115 d-1\n   \u2502  \u251c\u2500\u2500 \uf15c d-1-1.txt\n   \u2502  \u251c\u2500\u2500 \uf15c d-1-2.txt\n   \u2502  \u251c\u2500\u2500 \uf15c d-1-3.txt\n   \u2502  \u251c\u2500\u2500 \uf15c d-1-4.txt\n   \u2502  \u2514\u2500\u2500 \uf15c d-1-5.txt\n   \u251c\u2500\u2500 \uf15c d-2.txt\n   \u2514\u2500\u2500 \uf15c d-3.txt\n"})}),"\n",(0,l.jsxs)(t.p,{children:["the result of ",(0,l.jsx)(t.code,{children:"listAllFilesRecursively"})," looks like this."]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-scala",children:'import extras.scala.io.file.syntax._\nimport java.io.File\n\nlistAllFilesRecursively(new File("/tmp/a")).sorted\n\n// List(\n//   /tmp/a,\n//   /tmp/a/b,\n//   /tmp/a/b/b-1,\n//   /tmp/a/b/b-1/b-1-1.txt,\n//   /tmp/a/b/b-1/b-1-2.txt,\n//   /tmp/a/b/b-1/b-1-3.txt,\n//   /tmp/a/b/b-2,\n//   /tmp/a/b/b-2/b-2-1,\n//   /tmp/a/b/b-2/b-2-1/b-2-1-1.txt,\n//   /tmp/a/b/b-2/b-2-1/b-2-1-2.txt,\n//   /tmp/a/b/b-2/b-2-2,\n//   /tmp/a/c,\n//   /tmp/a/c/c-1.txt,\n//   /tmp/a/d,\n//   /tmp/a/d/d-1,\n//   /tmp/a/d/d-1/d-1-1.txt,\n//   /tmp/a/d/d-1/d-1-2.txt,\n//   /tmp/a/d/d-1/d-1-3.txt,\n//   /tmp/a/d/d-1/d-1-4.txt,\n//   /tmp/a/d/d-1/d-1-5.txt,\n//   /tmp/a/d/d-2.txt,\n//   /tmp/a/d/d-3.txt\n// )\n'})}),"\n",(0,l.jsx)(t.p,{children:"or"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-scala",children:'new File("/tmp/a").listAllFilesRecursively.sorted\n'})}),"\n",(0,l.jsx)(t.h3,{id:"deleteallrecursively",children:(0,l.jsx)(t.code,{children:"deleteAllRecursively"})}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"deleteAllRecursively"})," in ",(0,l.jsx)(t.code,{children:"import extras.scala.io.file.syntax"})," removes the given file and all the files and directories in it if the given file is a directory."]}),"\n",(0,l.jsx)(t.p,{children:"e.g.) If the file structure looks like this"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{children:"\uf115 /tmp/a\n\u251c\u2500\u2500 \uf115 b\n\u2502  \u251c\u2500\u2500 \uf115 b-1\n\u2502  \u2502  \u251c\u2500\u2500 \uf15c b-1-1.txt\n\u2502  \u2502  \u251c\u2500\u2500 \uf15c b-1-2.txt\n\u2502  \u2502  \u2514\u2500\u2500 \uf15c b-1-3.txt\n\u2502  \u2514\u2500\u2500 \uf115 b-2\n\u2502     \u251c\u2500\u2500 \uf115 b-2-1\n\u2502     \u2502  \u251c\u2500\u2500 \uf15c b-2-1-1.txt\n\u2502     \u2502  \u2514\u2500\u2500 \uf15c b-2-1-2.txt\n\u2502     \u2514\u2500\u2500 \uf115 b-2-2\n\u251c\u2500\u2500 \uf115 c\n\u2502  \u2514\u2500\u2500 \uf15c c-1.txt\n\u2514\u2500\u2500 \uf115 d\n   \u251c\u2500\u2500 \uf115 d-1\n   \u2502  \u251c\u2500\u2500 \uf15c d-1-1.txt\n   \u2502  \u251c\u2500\u2500 \uf15c d-1-2.txt\n   \u2502  \u251c\u2500\u2500 \uf15c d-1-3.txt\n   \u2502  \u251c\u2500\u2500 \uf15c d-1-4.txt\n   \u2502  \u2514\u2500\u2500 \uf15c d-1-5.txt\n   \u251c\u2500\u2500 \uf15c d-2.txt\n   \u2514\u2500\u2500 \uf15c d-3.txt\n"})}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"deleteAllRecursively"})," deletes the given file and everything in it."]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-scala",children:'import extras.scala.io.file.syntax._\nimport java.io.File\n\ndeleteAllRecursively(new File("/tmp/a"))\n// The `/tmp/a` and everything inside is removed.\n'})}),"\n",(0,l.jsx)(t.p,{children:"or"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-scala",children:'new File("/tmp/a").deleteAllRecursively()\n'})}),"\n",(0,l.jsx)(t.h2,{id:"tempfiles",children:(0,l.jsx)(t.code,{children:"TempFiles"})}),"\n",(0,l.jsx)(t.h3,{id:"runwithtempdir",children:(0,l.jsx)(t.code,{children:"runWithTempDir"})}),"\n",(0,l.jsxs)(t.p,{children:["If you want to do something any temporary folder which should be deleted once it's done, you can use ",(0,l.jsx)(t.code,{children:"extras.scala.io.file.TempFiles.runWithTempDir"}),"."]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-scala",children:'import extras.scala.io.file.TempFiles\nimport java.io.File\n\ndef foo(file: File): Unit =\n  if (file.exists)\n    println(s"${file.getParentFile.getName}/${file.getName} exists")\n  else\n    println(s"${file.getParentFile.getName}/${file.getName} does not exist.")\n\nvar tmp: Option[File] = None\n// tmp: Option[File] = None\n\nTempFiles.runWithTempDir("temporary-dir-prefix") { tempDir =>\n\n  tmp = Some(tempDir.value) // To check if the directory exists outside this block.\n  \n  tmp.foreach(foo)\n\n  val tmpDir = tempDir.value\n  val someFile = new File(tmpDir, "myfile.txt")\n  someFile.createNewFile()\n  foo(someFile)\n  \n  val someFile2 = new File(tmpDir, "myfile2.txt")\n  foo(someFile2)\n  \n  "Done"\n}\n// tmp/temporary-dir-prefix11836311015987463824 exists\n// temporary-dir-prefix11836311015987463824/myfile.txt exists\n// temporary-dir-prefix11836311015987463824/myfile2.txt does not exist.\n// res1: Either[Throwable, String] = Right(value = "Done")\n\ntmp.foreach{ file => \n  println(s"${file.getParentFile.getName}/${file.getName}")\n  foo(file)\n}\n// tmp/temporary-dir-prefix11836311015987463824\n// tmp/temporary-dir-prefix11836311015987463824 does not exist.\n\n/* the someFile (File(tmpDir, "myfile.txt") is deleted before TempFiles.runWithTempDir returns the result */\n'})}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"tempDir"})," is of type ",(0,l.jsx)(t.code,{children:"TempDir"})," which is just this value class."]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-scala",children:"final case class TempDir(value: java.io.File) extends AnyVal\n"})}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.code,{children:"TempFiles.runWithTempDir"})," is useful when you test with files and need to remove them once the test is done."]}),"\n",(0,l.jsx)(t.h4,{id:"example-test-with-hedgehog",children:"Example: test with hedgehog"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-scala",children:'import hedgehog._\nimport hedgehog.runner._\n\nimport extras.scala.io.file.TempFiles\nimport java.io._\nimport scala.util.Using\n\nobject MyTest extends Properties {\n  def tests: List[Test] = List(\n    property("test something with files", testSomethingWithFiles)\n  )\n  \n  def testSomethingWithFiles: Property = for {\n    filename <- Gen.string(Gen.alphaNum, Range.linear(3, 5)).log("filename")\n    content1 <- Gen.string(Gen.alphaNum, Range.linear(10, 100)).log("content1")\n    content2 <- Gen.string(Gen.alphaNum, Range.linear(10, 100)).log("content2")\n  } yield {\n    val content = s"$content1\\n$content2"\n    TempFiles.runWithTempDir("my-temp-dir") { tempDir =>\n      val rootDir = tempDir.value\n      val file = new File(rootDir, filename)\n      \n      (for { \n        _      <- Using(new PrintWriter(file))(_.write(content))\n        result <- Using(scala.io.Source.fromFile(file))(_.mkString)\n      } yield result).toEither\n      \n    }.joinRight match {\n      case Right(actual) => actual ==== content\n      case Left(err) => Result.failure.log(s"Failed: ${err.getMessage}")\n    }\n  }\n  \n}\n'})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(6540);const l={},s=i.createContext(l);function r(e){const t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);