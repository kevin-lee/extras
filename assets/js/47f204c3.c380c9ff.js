"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1522],{7284:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"extras-cats/f-either-ab","title":"F[Either[A, B]]","description":"Extension Methods for F[Either[A, B]]","source":"@site/../generated-docs/docs/extras-cats/f-either-ab.md","sourceDirName":"extras-cats","slug":"/extras-cats/f-either-ab","permalink":"/docs/extras-cats/f-either-ab","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"id":"f-either-ab","title":"F[Either[A, B]]"},"sidebar":"tutorialSidebar","previous":{"title":"EitherT","permalink":"/docs/extras-cats/eithert"},"next":{"title":"OptionT","permalink":"/docs/extras-cats/optiont"}}');var l=a(4848),t=a(8453);const i={sidebar_position:3,id:"f-either-ab",title:"F[Either[A, B]]"},s=void 0,c={},d=[{value:"Extension Methods for <code>F[Either[A, B]]</code>",id:"extension-methods-for-feithera-b",level:2},{value:"Change Value",id:"change-value",level:2},{value:"<code>innerMap</code>",id:"innermap",level:3},{value:"Example",id:"example",level:4},{value:"<code>innerFlatMap</code>",id:"innerflatmap",level:3},{value:"Example",id:"example-1",level:4},{value:"<code>innerFlatMapF</code>",id:"innerflatmapf",level:3},{value:"Example",id:"example-2",level:4},{value:"<code>innerLeftMap</code>",id:"innerleftmap",level:3},{value:"Example",id:"example-3",level:4},{value:"<code>innerLeftFlatMap</code>",id:"innerleftflatmap",level:3},{value:"Example",id:"example-4",level:4},{value:"<code>innerLeftFlatMapF</code>",id:"innerleftflatmapf",level:3},{value:"Example",id:"example-5",level:4},{value:"Get Value",id:"get-value",level:2},{value:"<code>innerGetOrElse</code>",id:"innergetorelse",level:3},{value:"Example",id:"example-6",level:4},{value:"<code>innerGetOrElseF</code>",id:"innergetorelsef",level:3},{value:"Example",id:"example-7",level:4},{value:"<code>innerFold</code>",id:"innerfold",level:3},{value:"Example",id:"example-8",level:4},{value:"<code>innerFoldF</code>",id:"innerfoldf",level:3},{value:"Example",id:"example-9",level:4},{value:"<code>innerOrElse</code>",id:"innerorelse",level:3},{value:"Example",id:"example-10",level:4},{value:"<code>innerOrElseF</code>",id:"innerorelsef",level:3},{value:"Example",id:"example-11",level:4},{value:"Do",id:"do",level:2},{value:"<code>innerForeach</code>",id:"innerforeach",level:3},{value:"Example",id:"example-12",level:4},{value:"<code>innerForeachF</code>",id:"innerforeachf",level:3},{value:"Example",id:"example-13",level:4},{value:"Check and Search",id:"check-and-search",level:2},{value:"<code>innerFind</code>",id:"innerfind",level:3},{value:"Example",id:"example-14",level:4},{value:"<code>innerFilterOrElse</code>",id:"innerfilterorelse",level:3},{value:"Example",id:"example-15",level:4},{value:"<code>innerExists</code>",id:"innerexists",level:3},{value:"Example",id:"example-16",level:4},{value:"<code>innerForall</code>",id:"innerforall",level:3},{value:"Example",id:"example-17",level:4},{value:"<code>innerContains</code>",id:"innercontains",level:3},{value:"Example",id:"example-18",level:4},{value:"<code>innerCollectFirst</code>",id:"innercollectfirst",level:3},{value:"Example",id:"example-19",level:4}];function o(e){const n={code:"code",h2:"h2",h3:"h3",h4:"h4",pre:"pre",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.h2,{id:"extension-methods-for-feithera-b",children:["Extension Methods for ",(0,l.jsx)(n.code,{children:"F[Either[A, B]]"})]}),"\n",(0,l.jsx)(n.h2,{id:"change-value",children:"Change Value"}),"\n",(0,l.jsx)(n.h3,{id:"innermap",children:(0,l.jsx)(n.code,{children:"innerMap"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"val foa: F[Either[A, B]] = ...\nfoa.innerMap(B => D) // F[Either[A, D]]\n"})}),"\n",(0,l.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\nval foa = IO.pure(1.asRight[String])\n// foa: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfoa.innerMap(_ + 999)\n  .unsafeRunSync()\n// res1: Either[String, Int] = Right(value = 1000)\n"})}),"\n",(0,l.jsx)(n.h3,{id:"innerflatmap",children:(0,l.jsx)(n.code,{children:"innerFlatMap"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"val feab: F[Either[A, B]] = ...\nfeab.innerFlatMap(B => Either[A, D]) // F[Either[A, D]]\n"})}),"\n",(0,l.jsx)(n.h4,{id:"example-1",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(1.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfeab.innerFlatMap(b => (b + 999).asRight[String])\n  .unsafeRunSync()\n// res3: Either[String, Int] = Right(value = 1000)\n"})}),"\n",(0,l.jsx)(n.h3,{id:"innerflatmapf",children:(0,l.jsx)(n.code,{children:"innerFlatMapF"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"val feab: F[Either[A, B]] = ...\n\nfeab.innerFlatMapF(B => F[Either[A, D]]) // F[Either[A, D]]\n"})}),"\n",(0,l.jsx)(n.h4,{id:"example-2",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(1.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfeab.innerFlatMapF(b => IO.pure((b + 999).asRight))\n  .unsafeRunSync()\n// res5: Either[String, Int] = Right(value = 1000)\n"})}),"\n",(0,l.jsx)(n.h3,{id:"innerleftmap",children:(0,l.jsx)(n.code,{children:"innerLeftMap"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"val feab: F[Either[A, B]] = ...\nfeab.innerLeftMap(A => C) // F[Either[C, B]]\n"})}),"\n",(0,l.jsx)(n.h4,{id:"example-3",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure("Error".asLeft[Int])\n// feab: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab.innerLeftMap("Failed: " + _)\n  .unsafeRunSync()\n// res7: Either[String, Int] = Left(value = "Failed: Error")\n'})}),"\n",(0,l.jsx)(n.h3,{id:"innerleftflatmap",children:(0,l.jsx)(n.code,{children:"innerLeftFlatMap"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"val feab: F[Either[A, B]] = ...\nfeab.innerFlatMap(A => Either[C, B]) // F[Either[C, B]]\n"})}),"\n",(0,l.jsx)(n.h4,{id:"example-4",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure("Error".asLeft[Int])\n// feab: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab.innerLeftFlatMap(a => ("Failed: " + a).asLeft[Int])\n  .unsafeRunSync()\n// res9: Either[String, Int] = Left(value = "Failed: Error")\n'})}),"\n",(0,l.jsx)(n.h3,{id:"innerleftflatmapf",children:(0,l.jsx)(n.code,{children:"innerLeftFlatMapF"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"val feab: F[Either[A, B]] = ...\nfeab.innerFlatMapF(A => F[Either[C, B]]) // F[Either[C, B]]\n"})}),"\n",(0,l.jsx)(n.h4,{id:"example-5",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure("Error".asLeft[Int])\n// feab: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab.innerLeftFlatMapF(a => IO.pure(("Failed: " + a).asLeft[Int]))\n  .unsafeRunSync()\n// res11: Either[String, Int] = Left(value = "Failed: Error")\n'})}),"\n",(0,l.jsx)(n.h2,{id:"get-value",children:"Get Value"}),"\n",(0,l.jsx)(n.h3,{id:"innergetorelse",children:(0,l.jsx)(n.code,{children:"innerGetOrElse"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"val feab: F[Either[A, B]] = ...\nfeab.innerGetOrElse[D >: B](=> D) // F[D]\n"})}),"\n",(0,l.jsx)(n.h4,{id:"example-6",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(999.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 999))\n\nfeab.innerGetOrElse(0)\n  .unsafeRunSync()\n// res13: Int = 999\n\nval feab2 = IO.pure("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab2.innerGetOrElse(0)\n  .unsafeRunSync()\n// res14: Int = 0\n'})}),"\n",(0,l.jsx)(n.h3,{id:"innergetorelsef",children:(0,l.jsx)(n.code,{children:"innerGetOrElseF"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"val feab: F[Either[A, B]] = ...\nfeab.innerGetOrElseF[D >: B](=> F[D]) // F[D]\n"})}),"\n",(0,l.jsx)(n.h4,{id:"example-7",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(999.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 999))\n\nfeab.innerGetOrElseF(IO.pure(0))\n  .unsafeRunSync()\n// res16: Int = 999\n\nval feab2 = IO.pure("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab2.innerGetOrElseF(IO.pure(0))\n  .unsafeRunSync()\n// res17: Int = 0\n'})}),"\n",(0,l.jsx)(n.h3,{id:"innerfold",children:(0,l.jsx)(n.code,{children:"innerFold"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"val feab: F[Either[A, B]] = ...\nfeab.innerFold[D](=> D)(B => D) // F[D]\n"})}),"\n",(0,l.jsx)(n.h4,{id:"example-8",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(1.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfeab.innerFold(_ => 0)(_ + 999)\n  .unsafeRunSync()\n// res19: Int = 1000\n\nval feab2 = IO.pure("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab2.innerFold(_ => 0)(_ + 999)\n  .unsafeRunSync()\n// res20: Int = 0\n'})}),"\n",(0,l.jsx)(n.h3,{id:"innerfoldf",children:(0,l.jsx)(n.code,{children:"innerFoldF"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"val feab: F[Either[A, B]] = ...\nfeab.innerFoldF[D](=> F[D])(B => F[D]) // F[D]\n"})}),"\n",(0,l.jsx)(n.h4,{id:"example-9",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(1.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfeab.innerFoldF(_ => IO.pure(0))(b => IO.pure(b + 999))\n  .unsafeRunSync()\n// res22: Int = 1000\n\nval feab2 = IO.pure("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab2.innerFoldF(_ => IO.pure(0))(b => IO.pure(b + 999))\n  .unsafeRunSync()\n// res23: Int = 0\n'})}),"\n",(0,l.jsx)(n.h3,{id:"innerorelse",children:(0,l.jsx)(n.code,{children:"innerOrElse"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"val feab: F[Either[A, B]] = ...\nfeab.innerOrElse[C >: A, D >: B](=> Either[C, D]): F[Either[C, D]]\n"})}),"\n",(0,l.jsx)(n.h4,{id:"example-10",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO(1.asRight[String])\n// feab: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab.innerOrElse(0.asRight[String])\n  .unsafeRunSync()\n// res25: Either[String, Int] = Right(value = 1)\n\nval feab2 = IO("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab2.innerOrElse(0.asRight[String])\n  .unsafeRunSync()\n// res26: Either[String, Int] = Right(value = 0)\n'})}),"\n",(0,l.jsx)(n.h3,{id:"innerorelsef",children:(0,l.jsx)(n.code,{children:"innerOrElseF"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"val feab: F[Either[A, B]] = ...\nfeab.innerOrElseF[C >: A, D >: B](=> F[Either[C, D]]): F[Either[C, D]]\n"})}),"\n",(0,l.jsx)(n.h4,{id:"example-11",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO(1.asRight[String])\n// feab: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab.innerOrElseF(IO.pure(0.asRight[String]))\n  .unsafeRunSync()\n// res28: Either[String, Int] = Right(value = 1)\n\nval feab2 = IO("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab2.innerOrElseF(IO.pure(0.asRight[String]))\n  .unsafeRunSync()\n// res29: Either[String, Int] = Right(value = 0)\n'})}),"\n",(0,l.jsx)(n.h2,{id:"do",children:"Do"}),"\n",(0,l.jsx)(n.h3,{id:"innerforeach",children:(0,l.jsx)(n.code,{children:"innerForeach"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"val feab: F[Either[A, B]] = ...\nfeab.innerForeach(B => Unit) // F[Unit]\n"})}),"\n",(0,l.jsx)(n.h4,{id:"example-12",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(1.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfeab.innerForeach(println)\n  .unsafeRunSync()\n// 1\n\nval feab2 = IO.pure("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab2.innerForeach(println)\n  .unsafeRunSync()\n'})}),"\n",(0,l.jsx)(n.h3,{id:"innerforeachf",children:(0,l.jsx)(n.code,{children:"innerForeachF"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"val feab: F[Either[A, B]] = ...\nfeab.innerForeachF(B => F[Unit]) // F[Unit]\n"})}),"\n",(0,l.jsx)(n.h4,{id:"example-13",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(1.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfeab.innerForeachF(b => IO.delay(println(b)))\n  .unsafeRunSync()\n// 1\n\nval feab2 = IO.pure("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab2.innerForeachF(b => IO.delay(println(b)))\n  .unsafeRunSync()\n'})}),"\n",(0,l.jsx)(n.h2,{id:"check-and-search",children:"Check and Search"}),"\n",(0,l.jsx)(n.h3,{id:"innerfind",children:(0,l.jsx)(n.code,{children:"innerFind"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"val feab: F[Either[A, B]] = ...\nfeab.innerFind(B => Boolean): F[Option[B]]\n"})}),"\n",(0,l.jsx)(n.h4,{id:"example-14",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO(1.asRight[String])\n// feab: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab.innerFind(_ > 0)\n  .unsafeRunSync()\n// res37: Option[Int] = Some(value = 1)\n\nfeab.innerFind(_ > 1)\n  .unsafeRunSync()\n// res38: Option[Int] = None\n"})}),"\n",(0,l.jsx)(n.h3,{id:"innerfilterorelse",children:(0,l.jsx)(n.code,{children:"innerFilterOrElse"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"val feab: F[Either[A, B]] = ...\nfeab.innerFilterOrElse[C >: A](B => Boolean, => C): F[Either[C, B]]\n"})}),"\n",(0,l.jsx)(n.h4,{id:"example-15",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO(1.asRight[String])\n// feab: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab.innerFilterOrElse(_ > 0, "Error")\n  .unsafeRunSync()\n// res40: Either[String, Int] = Right(value = 1)\n\nfeab.innerFilterOrElse(_ > 1, "Error")\n  .unsafeRunSync()\n// res41: Either[String, Int] = Left(value = "Error")\n'})}),"\n",(0,l.jsx)(n.h3,{id:"innerexists",children:(0,l.jsx)(n.code,{children:"innerExists"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"val feab: F[Either[A, B]] = ...\nfeab.innerExists(B => Boolean): F[Boolean]\n"})}),"\n",(0,l.jsx)(n.h4,{id:"example-16",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO(1.asRight[String])\n// feab: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab.innerExists(_ > 0)\n  .unsafeRunSync()\n// res43: Boolean = true\n\nfeab.innerExists(_ > 1)\n  .unsafeRunSync()\n// res44: Boolean = false\n"})}),"\n",(0,l.jsx)(n.h3,{id:"innerforall",children:(0,l.jsx)(n.code,{children:"innerForall"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"val feab: F[Either[A, B]] = ...\nfeab.innerForall(B => Boolean): F[Boolean]\n"})}),"\n",(0,l.jsx)(n.h4,{id:"example-17",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO(1.asRight[String])\n// feab: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab.innerForall(_ > 0)\n  .unsafeRunSync()\n// res46: Boolean = true\n\nfeab.innerForall(_ > 1)\n  .unsafeRunSync()\n// res47: Boolean = false\n\nval feab2 = IO("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab2.innerForall(_ > 1)\n  .unsafeRunSync()\n// res48: Boolean = true\n'})}),"\n",(0,l.jsx)(n.h3,{id:"innercontains",children:(0,l.jsx)(n.code,{children:"innerContains"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"val feab: F[Either[A, B]] = ...\nfeab.innerContains(B): F[Boolean]\n"})}),"\n",(0,l.jsx)(n.h4,{id:"example-18",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO(1.asRight[String])\n// feab: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab.innerContains(1)\n  .unsafeRunSync()\n// res50: Boolean = true\n\nfeab.innerContains(0)\n  .unsafeRunSync()\n// res51: Boolean = false\n\nval feab2 = IO("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab2.innerContains(1)\n  .unsafeRunSync()\n// res52: Boolean = false\n'})}),"\n",(0,l.jsx)(n.h3,{id:"innercollectfirst",children:(0,l.jsx)(n.code,{children:"innerCollectFirst"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:"val feab: F[Either[A, B]] = ...\nfeab.innerCollectFirst[D](PartialFunction[B, D]): F[Option[D]]\n"})}),"\n",(0,l.jsx)(n.h4,{id:"example-19",children:"Example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-scala",children:'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO(1.asRight[String])\n// feab: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab.innerCollectFirst {\n  case 1 => 0\n  case 2 => 999\n}\n  .unsafeRunSync()\n// res54: Option[Int] = Some(value = 0)\n\nval feab2 = IO(2.asRight[String])\n// feab2: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n// IO[Either[String, Int]] = IO(Right(2))\nfeab2.innerCollectFirst {\n  case 1 => 0\n  case 2 => 999\n}\n  .unsafeRunSync()\n// res55: Option[Int] = Some(value = 999)\n\nval feab3 = IO(3.asRight[String])\n// feab3: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n// IO[Either[String, Int]] = IO(Right(3))\nfeab3.innerCollectFirst {\n  case 1 => 0\n  case 2 => 999\n}\n  .unsafeRunSync()\n// res56: Option[Int] = None\n\nval feab4 = IO("Error".asLeft[Int])\n// feab4: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n// IO[Either[String, Int]] = IO(Left("Error"))\nfeab4.innerCollectFirst {\n  case 1 => 0\n  case 2 => 999\n}\n  .unsafeRunSync()\n// res57: Option[Int] = None\n'})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>s});var r=a(6540);const l={},t=r.createContext(l);function i(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);