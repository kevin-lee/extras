"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3582],{2041:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"extras-hedgehog/extras-hedgehog-ce3/with-syntax/with-manual-test-context-creation","title":"With Manual TestContext Creation","description":"Module","source":"@site/../generated-docs/docs/extras-hedgehog/extras-hedgehog-ce3/with-syntax/with-manual-test-context-creation.md","sourceDirName":"extras-hedgehog/extras-hedgehog-ce3/with-syntax","slug":"/extras-hedgehog/extras-hedgehog-ce3/with-syntax/with-manual-test-context-creation","permalink":"/docs/extras-hedgehog/extras-hedgehog-ce3/with-syntax/with-manual-test-context-creation","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"id":"with-manual-test-context-creation","title":"With Manual TestContext Creation","sidebar_label":"With TestContext"},"sidebar":"tutorialSidebar","previous":{"title":"withIO","permalink":"/docs/extras-hedgehog/extras-hedgehog-ce3/with-syntax/with-io"},"next":{"title":"Getting Started","permalink":"/docs/extras-doobie-tools/"}}');var s=n(4848),o=n(8453);const a={sidebar_position:3,id:"with-manual-test-context-creation",title:"With Manual TestContext Creation",sidebar_label:"With TestContext"},i=void 0,c={},l=[{value:"Module",id:"module",level:2},{value:"<code>TestContext</code>",id:"testcontext",level:2},{value:"completeThen",id:"completethen",level:2},{value:"errorThen",id:"errorthen",level:2}];function d(e){const t={blockquote:"blockquote",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"module",children:"Module"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",children:'"io.kevinlee" %% "extras-hedgehog-ce3" % "0.46.1" % Test\n'})}),"\n",(0,s.jsxs)(t.p,{children:["or for ",(0,s.jsx)(t.code,{children:"Scala.js"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",children:'"io.kevinlee" %%% "extras-hedgehog-ce3" % "0.46.1" % Test\n'})}),"\n",(0,s.jsx)(t.h2,{id:"testcontext",children:(0,s.jsx)(t.code,{children:"TestContext"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"cats.effect.kernel.testkit.TestContext"})," is from ",(0,s.jsx)(t.code,{children:"cats-effect-kernel-testkit"})," and it is"]}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["A ",(0,s.jsx)(t.code,{children:"scala.concurrent.ExecutionContext"})," implementation that can simulate async boundaries and time passage"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"extras-hedgehog-ce3"})," uses it and if you need to manually create it you can do so if you do not use ",(0,s.jsx)(t.code,{children:"withIO"})," or ",(0,s.jsx)(t.code,{children:"runIO"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",children:"implicit val ticker: Ticker = Ticker.withNewTestContext()\n"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"Ticker"})," is a value class for ",(0,s.jsx)(t.code,{children:"TestContext"})," so you can also do"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",children:"import cats.effect.kernel.testkit.TestContext\nimport extras.hedgehog.ce3.Ticker // You don't need to import it if you're using extras.hedgehog.ce3.syntax.runner\n\nimplicit val ticker: Ticker = Ticker(TestContext())\n"})}),"\n",(0,s.jsx)(t.h2,{id:"completethen",children:"completeThen"}),"\n",(0,s.jsxs)(t.p,{children:["Use ",(0,s.jsx)(t.code,{children:"CatsEffectRunner"})," and ",(0,s.jsx)(t.code,{children:"completeThen"})," instead of ",(0,s.jsx)(t.code,{children:"unsafeRunSync()"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",metastring:"{17} mdoc:reset-object",children:'import cats.effect._\n\nimport extras.hedgehog.ce3.syntax.runner._\n\nimport hedgehog._\nimport hedgehog.runner._\n\nobject SomeSpec extends Properties {\n  \n  override def tests: List[Test] = List(\n    property("test and completeThen", testCatsEffectRunnerWithCompleteThen)\n  )\n  \n  def testCatsEffectRunnerWithCompleteThen: Property = for {\n    n <- Gen.int(Range.linear(Int.MinValue, Int.MaxValue)).log("n")\n  } yield {\n    implicit val ticker: Ticker = Ticker.withNewTestContext()\n\n    val expected = n\n    val actual = IO(n)\n\n    actual.completeThen { actual =>\n      actual ==== expected\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(t.h2,{id:"errorthen",children:"errorThen"}),"\n",(0,s.jsxs)(t.p,{children:["If you want to test with ",(0,s.jsx)(t.code,{children:"IO"})," which may result in some ",(0,s.jsx)(t.code,{children:"Exception"})," thrown, you can use ",(0,s.jsx)(t.code,{children:"errorThen"})," instead of ",(0,s.jsx)(t.code,{children:"unsafeRunSync()"})," and ",(0,s.jsx)(t.code,{children:"Try"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",metastring:"{23} mdoc:reset-object",children:'import cats.effect._\n\nimport extras.hedgehog.ce3.syntax.runner._\n\nimport hedgehog._\nimport hedgehog.runner._\n\nobject SomeSpec extends Properties {\n\n  override def tests: List[Test] = List(\n    property("test and errorThen", testCatsEffectRunnerWithErrorThen)\n  )\n\n  def testCatsEffectRunnerWithErrorThen: Property = for {\n    message <- Gen.string(Gen.alphaNum, Range.linear(1, 10)).log("message")\n    error <- Gen\n      .element1(\n        TestError.someTestError(s"Don\'t worry it\'s only a test error. $message"),\n        TestError.anotherTestError(s"Don\'t worry it\'s only a test error. $message")\n      )\n      .log("error")\n  } yield {\n    implicit val ticker: Ticker = Ticker.withNewTestContext()\n\n    val expected = error\n    val actual = IO.raiseError[Int](error)\n\n    actual.errorThen { actual =>\n      actual ==== expected\n    }\n  }\n\n  sealed abstract class TestError(val message: String) extends RuntimeException(message)\n\n  object TestError {\n    final case class SomeTestError(override val message: String) extends TestError(message)\n    final case class AnotherTestError(override val message: String) extends TestError(message)\n\n    def anotherTestError(message: String): TestError = AnotherTestError(message)\n    def someTestError(message: String): TestError = SomeTestError(message)\n\n  }\n}\n'})})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var r=n(6540);const s={},o=r.createContext(s);function a(e){const t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);