"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7498],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>g});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),m=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=m(e.components);return a.createElement(c.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},b=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),d=m(t),b=r,g=d["".concat(c,".").concat(b)]||d[b]||p[b]||i;return t?a.createElement(g,s(s({ref:n},l),{},{components:t})):a.createElement(g,s({ref:n},l))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,s=new Array(i);s[0]=b;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o[d]="string"==typeof e?e:r,s[1]=o;for(var m=2;m<i;m++)s[m]=t[m];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},5851:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var a=t(7462),r=(t(7294),t(3905));const i={sidebar_position:2,id:"strings",title:"strings syntax"},s=void 0,o={unversionedId:"extras-string/strings",id:"extras-string/strings",title:"strings syntax",description:"Import strings syntax",source:"@site/../generated-docs/docs/extras-string/strings.md",sourceDirName:"extras-string",slug:"/extras-string/strings",permalink:"/docs/extras-string/strings",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,id:"strings",title:"strings syntax"},sidebar:"tutorialSidebar",previous:{title:"numeric syntax",permalink:"/docs/extras-string/numeric"},next:{title:"Getting Started",permalink:"/docs/extras-render/"}},c={},m=[{value:"Import <code>strings</code> syntax",id:"import-strings-syntax",level:2},{value:"<code>commaWith(String)</code>",id:"commawithstring",level:2},{value:"<code>serialCommaWith(String)</code>",id:"serialcommawithstring",level:2},{value:"<code>commaAnd</code>",id:"commaand",level:2},{value:"<code>serialCommaAnd</code>",id:"serialcommaand",level:2}],l={toc:m},d="wrapper";function p(e){let{components:n,...t}=e;return(0,r.kt)(d,(0,a.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"import-strings-syntax"},"Import ",(0,r.kt)("inlineCode",{parentName:"h2"},"strings")," syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"import extras.strings.syntax.strings._\n")),(0,r.kt)("h2",{id:"commawithstring"},(0,r.kt)("inlineCode",{parentName:"h2"},"commaWith(String)")),(0,r.kt)("p",null,"An extension method for a ",(0,r.kt)("inlineCode",{parentName:"p"},"Seq[String]"),", providing a way to join the ",(0,r.kt)("inlineCode",{parentName:"p"},"String")," elements with a comma and a given\nconjunction."),(0,r.kt)("p",null,"It joins ",(0,r.kt)("inlineCode",{parentName:"p"},"String")," values with commas and uses the given conjunction before the last element."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'List.empty[String].commaWith("BLAH")\n// res0: String = ""\n\nList("").commaWith("BLAH")\n// res1: String = ""\n\nList("aaa").commaWith("BLAH")\n// res2: String = "aaa"\n\nList("aaa", "bbb").commaWith("BLAH")\n// res3: String = "aaa BLAH bbb"\n\nList("aaa", "bbb", "ccc").commaWith("BLAH")\n// res4: String = "aaa, bbb BLAH ccc"\n\nList("aaa", "bbb", "ccc", "ddd").commaWith("BLAH")\n// res5: String = "aaa, bbb, ccc BLAH ddd"\n')),(0,r.kt)("h2",{id:"serialcommawithstring"},(0,r.kt)("inlineCode",{parentName:"h2"},"serialCommaWith(String)")),(0,r.kt)("p",null,"An extension method for a ",(0,r.kt)("inlineCode",{parentName:"p"},"Seq[String]"),", providing a way to join the ",(0,r.kt)("inlineCode",{parentName:"p"},"String")," elements with a serial comma and a given\nconjunction."),(0,r.kt)("p",null,"It joins String values with commas and uses the given conjunction before the last element."),(0,r.kt)("p",null,"This method employs the serial comma (also known as the Oxford comma),\nwhich means it always inserts a comma before the conjunction unless there are only two elements."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'List.empty[String].serialCommaWith("BLAH")\n// res6: String = ""\n\nList("").serialCommaWith("BLAH")\n// res7: String = ""\n\nList("aaa").serialCommaWith("BLAH")\n// res8: String = "aaa"\n\nList("aaa", "bbb").serialCommaWith("BLAH")\n// res9: String = "aaa BLAH bbb"\n\nList("aaa", "bbb", "ccc").serialCommaWith("BLAH")\n// res10: String = "aaa, bbb, BLAH ccc"\n\nList("aaa", "bbb", "ccc", "ddd").serialCommaWith("BLAH")\n// res11: String = "aaa, bbb, ccc, BLAH ddd"\n')),(0,r.kt)("h2",{id:"commaand"},(0,r.kt)("inlineCode",{parentName:"h2"},"commaAnd")),(0,r.kt)("p",null,"Format ",(0,r.kt)("inlineCode",{parentName:"p"},"Seq[String]")," into a human-readable list using comma and the conjunction ",(0,r.kt)("inlineCode",{parentName:"p"},"and"),"."),(0,r.kt)("p",null,"It separates elements by commas and uses the term ",(0,r.kt)("inlineCode",{parentName:"p"},"and")," before the last element."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'List.empty[String].commaAnd\n// res12: String = ""\n\nList("").commaAnd\n// res13: String = ""\n\nList("aaa").commaAnd\n// res14: String = "aaa"\n\nList("aaa", "bbb").commaAnd\n// res15: String = "aaa and bbb"\n\nList("aaa", "bbb", "ccc").commaAnd\n// res16: String = "aaa, bbb and ccc"\n\nList("aaa", "bbb", "ccc", "ddd").commaAnd\n// res17: String = "aaa, bbb, ccc and ddd"\n')),(0,r.kt)("h2",{id:"serialcommaand"},(0,r.kt)("inlineCode",{parentName:"h2"},"serialCommaAnd")),(0,r.kt)("p",null,"Format ",(0,r.kt)("inlineCode",{parentName:"p"},"Seq[String]")," into a human-readable list using comma and the conjunction ",(0,r.kt)("inlineCode",{parentName:"p"},"and"),"."),(0,r.kt)("p",null,"It separates elements by commas and uses the term ",(0,r.kt)("inlineCode",{parentName:"p"},"and"),' before the last element following the "Oxford comma" style.'),(0,r.kt)("p",null,'e.g.) "aaa, bbb, and ccc".'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'List.empty[String].serialCommaAnd\n// res18: String = ""\n\nList("").serialCommaAnd\n// res19: String = ""\n\nList("aaa").serialCommaAnd\n// res20: String = "aaa"\n\nList("aaa", "bbb").serialCommaAnd\n// res21: String = "aaa and bbb"\n\nList("aaa", "bbb", "ccc").serialCommaAnd\n// res22: String = "aaa, bbb, and ccc"\n\nList("aaa", "bbb", "ccc", "ddd").serialCommaAnd\n// res23: String = "aaa, bbb, ccc, and ddd"\n')))}p.isMDXComponent=!0}}]);