"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2442],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},f="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),f=p(r),m=a,d=f["".concat(l,".").concat(m)]||f[m]||u[m]||s;return r?n.createElement(d,o(o({ref:t},c),{},{components:r})):n.createElement(d,o({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[f]="string"==typeof e?e:a,o[1]=i;for(var p=2;p<s;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4165:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const s={sidebar_position:1,sidebar_label:"fs2-v2-text",id:"extras-fs2-v2-text",title:"Fs2 v2 text"},o=void 0,i={unversionedId:"extras-fs2/v2/extras-fs2-v2-text",id:"extras-fs2/v2/extras-fs2-v2-text",title:"Fs2 v2 text",description:"Get extras-fs2-v2-text",source:"@site/../generated-docs/docs/extras-fs2/v2/text.md",sourceDirName:"extras-fs2/v2",slug:"/extras-fs2/v2/extras-fs2-v2-text",permalink:"/docs/extras-fs2/v2/extras-fs2-v2-text",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"fs2-v2-text",id:"extras-fs2-v2-text",title:"Fs2 v2 text"},sidebar:"tutorialSidebar",previous:{title:"v2",permalink:"/docs/category/v2"},next:{title:"v3",permalink:"/docs/category/v3"}},l={},p=[{value:"Get <code>extras-fs2-v2-text</code>",id:"get-extras-fs2-v2-text",level:2},{value:"StreamF, Byte.utf8String",id:"streamf-byteutf8string",level:2},{value:"utf8String for http4s",id:"utf8string-for-http4s",level:2}],c={toc:p},f="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(f,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"get-extras-fs2-v2-text"},"Get ",(0,a.kt)("inlineCode",{parentName:"h2"},"extras-fs2-v2-text")),(0,a.kt)("p",null,"It's only for Fs2 v2 so if you use v3, please use ",(0,a.kt)("a",{parentName:"p",href:"../v3/extras-fs2-v3-text"},"extras-fs2-v3-text"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'"io.kevinlee" %% "extras-fs2-v2-text" % "0.44.0"\n')),(0,a.kt)("h2",{id:"streamf-byteutf8string"},"Stream","[F, Byte]",".utf8String"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"Stream[F, Byte].utf8String // F[String]\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.effect._\nimport extras.fs2.text.syntax._\nimport fs2.Stream\n\nimport java.nio.charset.StandardCharsets\n\nStream[IO, Byte]("blah blah".getBytes(StandardCharsets.UTF_8).toList: _*)\n  .utf8String // IO[String]\n  .unsafeRunSync()\n// res1: String = "blah blah"\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.effect._\nimport fs2.Stream\n\nimport java.nio.charset.StandardCharsets\n\ndef toByteStream[F[*]](s: String): Stream[F, Byte] =\n  Stream[F, Byte](s.getBytes(StandardCharsets.UTF_8).toList: _*)\n\ndef bytesToString[F[*]: Sync](stream: Stream[F, Byte]): F[String] = {\n  import extras.fs2.text.syntax._\n  stream.utf8String\n}\n\nval s = "Lorem Ipsum is simply dummy text of the printing and typesetting industry."\n// s: String = "Lorem Ipsum is simply dummy text of the printing and typesetting industry."\nval byteStream = toByteStream[IO](s)\n// byteStream: Stream[IO, Byte] = Stream(..)\n\nbytesToString[IO](byteStream)\n  .unsafeRunSync()\n// res3: String = "Lorem Ipsum is simply dummy text of the printing and typesetting industry."\n')),(0,a.kt)("h2",{id:"utf8string-for-http4s"},"utf8String for http4s"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'import org.http4s.dsl.io._\nval response = Ok("Hello world!")\n// response: cats.effect.IO[org.http4s.Response[cats.effect.IO]] = Pure(\n//   a = (\n//      = Status(code = 200),\n//      = HttpVersion(major = 1, minor = 1),\n//      = Headers(Content-Type: text/plain; charset=UTF-8, Content-Length: 12),\n//      = Stream(..),\n//      = org.typelevel.vault.Vault@3e78837\n//   )\n// )\nval responseToString = response\n  .flatMap { response =>\n    import extras.fs2.text.syntax._\n    response\n      .body\n      .utf8String\n  }\n// responseToString: cats.effect.IO[String] = Bind(\n//   source = Pure(\n//     a = (\n//        = Status(code = 200),\n//        = HttpVersion(major = 1, minor = 1),\n//        = Headers(Content-Type: text/plain; charset=UTF-8, Content-Length: 12),\n//        = Stream(..),\n//        = org.typelevel.vault.Vault@3e78837\n// ...\nresponseToString.unsafeRunSync()\n// res5: String = "Hello world!"\n')))}u.isMDXComponent=!0}}]);