"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3499],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>h});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),l=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=l(e.components);return o.createElement(s.Provider,{value:n},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),m=l(t),u=r,h=m["".concat(s,".").concat(u)]||m[u]||p[u]||i;return t?o.createElement(h,a(a({ref:n},d),{},{components:t})):o.createElement(h,a({ref:n},d))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=u;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[m]="string"==typeof e?e:r,a[1]=c;for(var l=2;l<i;l++)a[l]=t[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4015:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var o=t(7462),r=(t(7294),t(3905));const i={sidebar_position:2,id:"codecs-encoder",title:"Extension method for Encoder"},a=void 0,c={unversionedId:"extras-circe/codecs-encoder",id:"extras-circe/codecs-encoder",title:"Extension method for Encoder",description:"Encoder[A].withFields",source:"@site/../generated-docs/docs/extras-circe/codecs-encoder.md",sourceDirName:"extras-circe",slug:"/extras-circe/codecs-encoder",permalink:"/docs/extras-circe/codecs-encoder",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,id:"codecs-encoder",title:"Extension method for Encoder"},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/extras-circe/"},next:{title:"Getting Started",permalink:"/docs/extras-hedgehog/"}},s={},l=[{value:"EncoderA.withFields",id:"encoderawithfields",level:2},{value:"Example",id:"example",level:3},{value:"Comparison",id:"comparison",level:3}],d={toc:l},m="wrapper";function p(e){let{components:n,...t}=e;return(0,r.kt)(m,(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"encoderawithfields"},"Encoder","[A]",".withFields"),(0,r.kt)("p",null,"With ",(0,r.kt)("inlineCode",{parentName:"p"},"withFields"),", you can add additional fields to the JSON encoded by an existing ",(0,r.kt)("inlineCode",{parentName:"p"},"Encoder"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import extras.circe.codecs.encoder._\n\nEncoder[A].withFields { a =>\n    List(\n      "name1" -> a.someValue1.asJson,\n      "name2" -> a.someValue2.asJson\n    )\n  }\n')),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import io.circe._\nimport io.circe.syntax._\nimport io.circe.generic.semiauto._\nimport extras.circe.codecs.encoder._\n\nfinal case class Something(n: Int) {\n  def name: String = "Foo"\n}\n\nobject Something {\n  implicit val somethingEncoder: Encoder[Something] = deriveEncoder[Something]\n    .withFields { a =>\n      List(\n        "doubled-n" -> (a.n * 2).asJson,\n        "name" -> a.name.asJson,\n        "some-fixed-value" -> "blah blah".asJson,\n      )\n    }\n}\n\nval something = Something(123)\n// something: Something = Something(n = 123)\nsomething.asJson\n// res1: Json = JObject(\n//   value = object[n -> 123,doubled-n -> 246,name -> "Foo",some-fixed-value -> "blah blah"]\n// )\nsomething.asJson.spaces2\n// res2: String = """{\n//   "n" : 123,\n//   "doubled-n" : 246,\n//   "name" : "Foo",\n//   "some-fixed-value" : "blah blah"\n// }"""\n')),(0,r.kt)("h3",{id:"comparison"},"Comparison"),(0,r.kt)("p",null,"Let's compare it with the ",(0,r.kt)("inlineCode",{parentName:"p"},"Encoder")," without ",(0,r.kt)("inlineCode",{parentName:"p"},"withFields")," syntax."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import io.circe._\nimport io.circe.syntax._\nimport io.circe.generic.semiauto._\nimport extras.circe.codecs.encoder._\n\nfinal case class Something(n: Int) {\n  def name: String = "Foo"\n}\n\nobject Something {\n  val originalSomethingEncoder: Encoder[Something] = deriveEncoder\n  implicit val somethingEncoder: Encoder[Something] = originalSomethingEncoder\n    .withFields { a =>\n      List(\n        "doubled-n" -> (a.n * 2).asJson,\n        "name" -> a.name.asJson,\n        "some-fixed-value" -> "blah blah".asJson,\n      )\n    }\n}\n\nval something = Something(123)\n// something: Something = Something(n = 123)\n\nSomething.originalSomethingEncoder(something)\n// res4: Json = JObject(value = object[n -> 123])\nSomething.originalSomethingEncoder(something).spaces2\n// res5: String = """{\n//   "n" : 123\n// }"""\n\nsomething.asJson\n// res6: Json = JObject(\n//   value = object[n -> 123,doubled-n -> 246,name -> "Foo",some-fixed-value -> "blah blah"]\n// )\nsomething.asJson.spaces2\n// res7: String = """{\n//   "n" : 123,\n//   "doubled-n" : 246,\n//   "name" : "Foo",\n//   "some-fixed-value" : "blah blah"\n// }"""\n')))}p.isMDXComponent=!0}}]);