"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[87],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=a.createContext({}),c=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(o.Provider,{value:n},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),g=r,m=u["".concat(o,".").concat(g)]||u[g]||f[g]||i;return t?a.createElement(m,l(l({ref:n},p),{},{components:t})):a.createElement(m,l({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=g;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s[u]="string"==typeof e?e:r,l[1]=s;for(var c=2;c<i;c++)l[c]=t[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},888:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>f,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const i={sidebar_position:3,id:"f-either-ab",title:"F[Either[A, B]]"},l=void 0,s={unversionedId:"extras-cats/f-either-ab",id:"extras-cats/f-either-ab",title:"F[Either[A, B]]",description:"Extension Methods for F[Either[A, B]]",source:"@site/../generated-docs/docs/extras-cats/f-either-ab.md",sourceDirName:"extras-cats",slug:"/extras-cats/f-either-ab",permalink:"/docs/extras-cats/f-either-ab",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,id:"f-either-ab",title:"F[Either[A, B]]"},sidebar:"tutorialSidebar",previous:{title:"EitherT",permalink:"/docs/extras-cats/eithert"},next:{title:"OptionT",permalink:"/docs/extras-cats/optiont"}},o={},c=[{value:"Extension Methods for <code>F[Either[A, B]]</code>",id:"extension-methods-for-feithera-b",level:2},{value:"innerMap",id:"innermap",level:3},{value:"innerFlatMap",id:"innerflatmap",level:3},{value:"innerFlatMapF",id:"innerflatmapf",level:3},{value:"innerGetOrElse",id:"innergetorelse",level:3},{value:"innerGetOrElseF",id:"innergetorelsef",level:3},{value:"innerFold",id:"innerfold",level:3},{value:"innerFoldF",id:"innerfoldf",level:3}],p={toc:c},u="wrapper";function f(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"extension-methods-for-feithera-b"},"Extension Methods for ",(0,r.kt)("inlineCode",{parentName:"h2"},"F[Either[A, B]]")),(0,r.kt)("h3",{id:"innermap"},"innerMap"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val foa: F[Either[A, B]] = ...\nfoa.innerMap(B => D) // F[Either[A, D]]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\nval foa = IO.pure(1.asRight[String])\n// foa: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfoa.innerMap(_ + 999)\n  .unsafeRunSync()\n// res1: Either[String, Int] = Right(value = 1000)\n")),(0,r.kt)("h3",{id:"innerflatmap"},"innerFlatMap"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerFlatMap(B => Either[A, D]) // F[Either[A, D]]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(1.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfeab.innerFlatMap(b => (b + 999).asRight[String])\n  .unsafeRunSync()\n// res3: Either[String, Int] = Right(value = 1000)\n")),(0,r.kt)("h3",{id:"innerflatmapf"},"innerFlatMapF"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\n\nfeab.innerFlatMapF(B => F[Either[A, D]]) // F[Either[A, D]]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(1.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfeab.innerFlatMapF(b => IO.pure((b + 999).asRight))\n  .unsafeRunSync()\n// res5: Either[String, Int] = Right(value = 1000)\n")),(0,r.kt)("h3",{id:"innergetorelse"},"innerGetOrElse"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerGetOrElse[D >: B](=> D) // F[D]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(999.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 999))\n\nfeab.innerGetOrElse(0)\n  .unsafeRunSync()\n// res7: Int = 999\n\nval feab2 = IO.pure("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab2.innerGetOrElse(0)\n  .unsafeRunSync()\n// res8: Int = 0\n')),(0,r.kt)("h3",{id:"innergetorelsef"},"innerGetOrElseF"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerGetOrElseF[D >: B](=> F[D]) // F[D]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(999.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 999))\n\nfeab.innerGetOrElseF(IO.pure(0))\n  .unsafeRunSync()\n// res10: Int = 999\n\nval feab2 = IO.pure("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab2.innerGetOrElseF(IO.pure(0))\n  .unsafeRunSync()\n// res11: Int = 0\n')),(0,r.kt)("h3",{id:"innerfold"},"innerFold"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerFold[D](=> D)(B => D) // F[D]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(1.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfeab.innerFold(_ => 0)(_ + 999)\n  .unsafeRunSync()\n// res13: Int = 1000\n\nval feab2 = IO.pure("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab2.innerFold(_ => 0)(_ + 999)\n  .unsafeRunSync()\n// res14: Int = 0\n')),(0,r.kt)("h3",{id:"innerfoldf"},"innerFoldF"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerFoldF[D](=> F[D])(B => F[D]) // F[D]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(1.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfeab.innerFoldF(_ => IO.pure(0))(b => IO.pure(b + 999))\n  .unsafeRunSync()\n// res16: Int = 1000\n\nval feab2 = IO.pure("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab2.innerFoldF(_ => IO.pure(0))(b => IO.pure(b + 999))\n  .unsafeRunSync()\n// res17: Int = 0\n')))}f.isMDXComponent=!0}}]);