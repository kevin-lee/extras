"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[87],{3905:(e,n,a)=>{a.d(n,{Zo:()=>p,kt:()=>d});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function l(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?l(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function s(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=t.createContext({}),o=function(e){var n=t.useContext(c),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},p=function(e){var n=o(e.components);return t.createElement(c.Provider,{value:n},e.children)},f="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),f=o(a),m=r,d=f["".concat(c,".").concat(m)]||f[m]||u[m]||l;return a?t.createElement(d,i(i({ref:n},p),{},{components:a})):t.createElement(d,i({ref:n},p))}));function d(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[f]="string"==typeof e?e:r,i[1]=s;for(var o=2;o<l;o++)i[o]=a[o];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},888:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>o});var t=a(7462),r=(a(7294),a(3905));const l={sidebar_position:3,id:"f-either-ab",title:"F[Either[A, B]]"},i=void 0,s={unversionedId:"extras-cats/f-either-ab",id:"extras-cats/f-either-ab",title:"F[Either[A, B]]",description:"Extension Methods for F[Either[A, B]]",source:"@site/../generated-docs/docs/extras-cats/f-either-ab.md",sourceDirName:"extras-cats",slug:"/extras-cats/f-either-ab",permalink:"/docs/extras-cats/f-either-ab",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,id:"f-either-ab",title:"F[Either[A, B]]"},sidebar:"tutorialSidebar",previous:{title:"EitherT",permalink:"/docs/extras-cats/eithert"},next:{title:"OptionT",permalink:"/docs/extras-cats/optiont"}},c={},o=[{value:"Extension Methods for <code>F[Either[A, B]]</code>",id:"extension-methods-for-feithera-b",level:2},{value:"Change Value",id:"change-value",level:2},{value:"<code>innerMap</code>",id:"innermap",level:3},{value:"Example",id:"example",level:4},{value:"<code>innerFlatMap</code>",id:"innerflatmap",level:3},{value:"Example",id:"example-1",level:4},{value:"<code>innerFlatMapF</code>",id:"innerflatmapf",level:3},{value:"Example",id:"example-2",level:4},{value:"<code>innerLeftMap</code>",id:"innerleftmap",level:3},{value:"Example",id:"example-3",level:4},{value:"<code>innerLeftFlatMap</code>",id:"innerleftflatmap",level:3},{value:"Example",id:"example-4",level:4},{value:"<code>innerLeftFlatMapF</code>",id:"innerleftflatmapf",level:3},{value:"Example",id:"example-5",level:4},{value:"Get Value",id:"get-value",level:2},{value:"<code>innerGetOrElse</code>",id:"innergetorelse",level:3},{value:"Example",id:"example-6",level:4},{value:"<code>innerGetOrElseF</code>",id:"innergetorelsef",level:3},{value:"Example",id:"example-7",level:4},{value:"<code>innerFold</code>",id:"innerfold",level:3},{value:"Example",id:"example-8",level:4},{value:"<code>innerFoldF</code>",id:"innerfoldf",level:3},{value:"Example",id:"example-9",level:4},{value:"<code>innerOrElse</code>",id:"innerorelse",level:3},{value:"Example",id:"example-10",level:4},{value:"<code>innerOrElseF</code>",id:"innerorelsef",level:3},{value:"Example",id:"example-11",level:4},{value:"Do",id:"do",level:2},{value:"<code>innerForeach</code>",id:"innerforeach",level:3},{value:"Example",id:"example-12",level:4},{value:"<code>innerForeachF</code>",id:"innerforeachf",level:3},{value:"Example",id:"example-13",level:4},{value:"Check and Search",id:"check-and-search",level:2},{value:"<code>innerFind</code>",id:"innerfind",level:3},{value:"Example",id:"example-14",level:4},{value:"<code>innerFilterOrElse</code>",id:"innerfilterorelse",level:3},{value:"Example",id:"example-15",level:4},{value:"<code>innerExists</code>",id:"innerexists",level:3},{value:"Example",id:"example-16",level:4},{value:"<code>innerForall</code>",id:"innerforall",level:3},{value:"Example",id:"example-17",level:4},{value:"<code>innerContains</code>",id:"innercontains",level:3},{value:"Example",id:"example-18",level:4},{value:"<code>innerCollectFirst</code>",id:"innercollectfirst",level:3},{value:"Example",id:"example-19",level:4}],p={toc:o},f="wrapper";function u(e){let{components:n,...a}=e;return(0,r.kt)(f,(0,t.Z)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"extension-methods-for-feithera-b"},"Extension Methods for ",(0,r.kt)("inlineCode",{parentName:"h2"},"F[Either[A, B]]")),(0,r.kt)("h2",{id:"change-value"},"Change Value"),(0,r.kt)("h3",{id:"innermap"},(0,r.kt)("inlineCode",{parentName:"h3"},"innerMap")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val foa: F[Either[A, B]] = ...\nfoa.innerMap(B => D) // F[Either[A, D]]\n")),(0,r.kt)("h4",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\nval foa = IO.pure(1.asRight[String])\n// foa: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfoa.innerMap(_ + 999)\n  .unsafeRunSync()\n// res1: Either[String, Int] = Right(value = 1000)\n")),(0,r.kt)("h3",{id:"innerflatmap"},(0,r.kt)("inlineCode",{parentName:"h3"},"innerFlatMap")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerFlatMap(B => Either[A, D]) // F[Either[A, D]]\n")),(0,r.kt)("h4",{id:"example-1"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(1.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfeab.innerFlatMap(b => (b + 999).asRight[String])\n  .unsafeRunSync()\n// res3: Either[String, Int] = Right(value = 1000)\n")),(0,r.kt)("h3",{id:"innerflatmapf"},(0,r.kt)("inlineCode",{parentName:"h3"},"innerFlatMapF")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\n\nfeab.innerFlatMapF(B => F[Either[A, D]]) // F[Either[A, D]]\n")),(0,r.kt)("h4",{id:"example-2"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(1.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfeab.innerFlatMapF(b => IO.pure((b + 999).asRight))\n  .unsafeRunSync()\n// res5: Either[String, Int] = Right(value = 1000)\n")),(0,r.kt)("h3",{id:"innerleftmap"},(0,r.kt)("inlineCode",{parentName:"h3"},"innerLeftMap")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerLeftMap(A => C) // F[Either[C, B]]\n")),(0,r.kt)("h4",{id:"example-3"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure("Error".asLeft[Int])\n// feab: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab.innerLeftMap("Failed: " + _)\n  .unsafeRunSync()\n// res7: Either[String, Int] = Left(value = "Failed: Error")\n')),(0,r.kt)("h3",{id:"innerleftflatmap"},(0,r.kt)("inlineCode",{parentName:"h3"},"innerLeftFlatMap")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerFlatMap(A => Either[C, B]) // F[Either[C, B]]\n")),(0,r.kt)("h4",{id:"example-4"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure("Error".asLeft[Int])\n// feab: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab.innerLeftFlatMap(a => ("Failed: " + a).asLeft[Int])\n  .unsafeRunSync()\n// res9: Either[String, Int] = Left(value = "Failed: Error")\n')),(0,r.kt)("h3",{id:"innerleftflatmapf"},(0,r.kt)("inlineCode",{parentName:"h3"},"innerLeftFlatMapF")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerFlatMapF(A => F[Either[C, B]]) // F[Either[C, B]]\n")),(0,r.kt)("h4",{id:"example-5"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure("Error".asLeft[Int])\n// feab: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab.innerLeftFlatMapF(a => IO.pure(("Failed: " + a).asLeft[Int]))\n  .unsafeRunSync()\n// res11: Either[String, Int] = Left(value = "Failed: Error")\n')),(0,r.kt)("h2",{id:"get-value"},"Get Value"),(0,r.kt)("h3",{id:"innergetorelse"},(0,r.kt)("inlineCode",{parentName:"h3"},"innerGetOrElse")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerGetOrElse[D >: B](=> D) // F[D]\n")),(0,r.kt)("h4",{id:"example-6"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(999.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 999))\n\nfeab.innerGetOrElse(0)\n  .unsafeRunSync()\n// res13: Int = 999\n\nval feab2 = IO.pure("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab2.innerGetOrElse(0)\n  .unsafeRunSync()\n// res14: Int = 0\n')),(0,r.kt)("h3",{id:"innergetorelsef"},(0,r.kt)("inlineCode",{parentName:"h3"},"innerGetOrElseF")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerGetOrElseF[D >: B](=> F[D]) // F[D]\n")),(0,r.kt)("h4",{id:"example-7"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(999.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 999))\n\nfeab.innerGetOrElseF(IO.pure(0))\n  .unsafeRunSync()\n// res16: Int = 999\n\nval feab2 = IO.pure("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab2.innerGetOrElseF(IO.pure(0))\n  .unsafeRunSync()\n// res17: Int = 0\n')),(0,r.kt)("h3",{id:"innerfold"},(0,r.kt)("inlineCode",{parentName:"h3"},"innerFold")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerFold[D](=> D)(B => D) // F[D]\n")),(0,r.kt)("h4",{id:"example-8"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(1.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfeab.innerFold(_ => 0)(_ + 999)\n  .unsafeRunSync()\n// res19: Int = 1000\n\nval feab2 = IO.pure("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab2.innerFold(_ => 0)(_ + 999)\n  .unsafeRunSync()\n// res20: Int = 0\n')),(0,r.kt)("h3",{id:"innerfoldf"},(0,r.kt)("inlineCode",{parentName:"h3"},"innerFoldF")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerFoldF[D](=> F[D])(B => F[D]) // F[D]\n")),(0,r.kt)("h4",{id:"example-9"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(1.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfeab.innerFoldF(_ => IO.pure(0))(b => IO.pure(b + 999))\n  .unsafeRunSync()\n// res22: Int = 1000\n\nval feab2 = IO.pure("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab2.innerFoldF(_ => IO.pure(0))(b => IO.pure(b + 999))\n  .unsafeRunSync()\n// res23: Int = 0\n')),(0,r.kt)("h3",{id:"innerorelse"},(0,r.kt)("inlineCode",{parentName:"h3"},"innerOrElse")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerOrElse[C >: A, D >: B](=> Either[C, D]): F[Either[C, D]]\n")),(0,r.kt)("h4",{id:"example-10"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO(1.asRight[String])\n// feab: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab.innerOrElse(0.asRight[String])\n  .unsafeRunSync()\n// res25: Either[String, Int] = Right(value = 1)\n\nval feab2 = IO("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab2.innerOrElse(0.asRight[String])\n  .unsafeRunSync()\n// res26: Either[String, Int] = Right(value = 0)\n')),(0,r.kt)("h3",{id:"innerorelsef"},(0,r.kt)("inlineCode",{parentName:"h3"},"innerOrElseF")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerOrElseF[C >: A, D >: B](=> F[Either[C, D]]): F[Either[C, D]]\n")),(0,r.kt)("h4",{id:"example-11"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO(1.asRight[String])\n// feab: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab.innerOrElseF(IO.pure(0.asRight[String]))\n  .unsafeRunSync()\n// res28: Either[String, Int] = Right(value = 1)\n\nval feab2 = IO("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab2.innerOrElseF(IO.pure(0.asRight[String]))\n  .unsafeRunSync()\n// res29: Either[String, Int] = Right(value = 0)\n')),(0,r.kt)("h2",{id:"do"},"Do"),(0,r.kt)("h3",{id:"innerforeach"},(0,r.kt)("inlineCode",{parentName:"h3"},"innerForeach")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerForeach(B => Unit) // F[Unit]\n")),(0,r.kt)("h4",{id:"example-12"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(1.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfeab.innerForeach(println)\n  .unsafeRunSync()\n// 1\n\nval feab2 = IO.pure("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab2.innerForeach(println)\n  .unsafeRunSync()\n')),(0,r.kt)("h3",{id:"innerforeachf"},(0,r.kt)("inlineCode",{parentName:"h3"},"innerForeachF")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerForeachF(B => F[Unit]) // F[Unit]\n")),(0,r.kt)("h4",{id:"example-13"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(1.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfeab.innerForeachF(b => IO.delay(println(b)))\n  .unsafeRunSync()\n// 1\n\nval feab2 = IO.pure("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab2.innerForeachF(b => IO.delay(println(b)))\n  .unsafeRunSync()\n')),(0,r.kt)("h2",{id:"check-and-search"},"Check and Search"),(0,r.kt)("h3",{id:"innerfind"},(0,r.kt)("inlineCode",{parentName:"h3"},"innerFind")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerFind(B => Boolean): F[Option[B]]\n")),(0,r.kt)("h4",{id:"example-14"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO(1.asRight[String])\n// feab: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab.innerFind(_ > 0)\n  .unsafeRunSync()\n// res37: Option[Int] = Some(value = 1)\n\nfeab.innerFind(_ > 1)\n  .unsafeRunSync()\n// res38: Option[Int] = None\n")),(0,r.kt)("h3",{id:"innerfilterorelse"},(0,r.kt)("inlineCode",{parentName:"h3"},"innerFilterOrElse")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerFilterOrElse[C >: A](B => Boolean, => C): F[Either[C, B]]\n")),(0,r.kt)("h4",{id:"example-15"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO(1.asRight[String])\n// feab: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab.innerFilterOrElse(_ > 0, "Error")\n  .unsafeRunSync()\n// res40: Either[String, Int] = Right(value = 1)\n\nfeab.innerFilterOrElse(_ > 1, "Error")\n  .unsafeRunSync()\n// res41: Either[String, Int] = Left(value = "Error")\n')),(0,r.kt)("h3",{id:"innerexists"},(0,r.kt)("inlineCode",{parentName:"h3"},"innerExists")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerExists(B => Boolean): F[Boolean]\n")),(0,r.kt)("h4",{id:"example-16"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO(1.asRight[String])\n// feab: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab.innerExists(_ > 0)\n  .unsafeRunSync()\n// res43: Boolean = true\n\nfeab.innerExists(_ > 1)\n  .unsafeRunSync()\n// res44: Boolean = false\n")),(0,r.kt)("h3",{id:"innerforall"},(0,r.kt)("inlineCode",{parentName:"h3"},"innerForall")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerForall(B => Boolean): F[Boolean]\n")),(0,r.kt)("h4",{id:"example-17"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO(1.asRight[String])\n// feab: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab.innerForall(_ > 0)\n  .unsafeRunSync()\n// res46: Boolean = true\n\nfeab.innerForall(_ > 1)\n  .unsafeRunSync()\n// res47: Boolean = false\n\nval feab2 = IO("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab2.innerForall(_ > 1)\n  .unsafeRunSync()\n// res48: Boolean = true\n')),(0,r.kt)("h3",{id:"innercontains"},(0,r.kt)("inlineCode",{parentName:"h3"},"innerContains")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerContains(B): F[Boolean]\n")),(0,r.kt)("h4",{id:"example-18"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO(1.asRight[String])\n// feab: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab.innerContains(1)\n  .unsafeRunSync()\n// res50: Boolean = true\n\nfeab.innerContains(0)\n  .unsafeRunSync()\n// res51: Boolean = false\n\nval feab2 = IO("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab2.innerContains(1)\n  .unsafeRunSync()\n// res52: Boolean = false\n')),(0,r.kt)("h3",{id:"innercollectfirst"},(0,r.kt)("inlineCode",{parentName:"h3"},"innerCollectFirst")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerCollectFirst[D](PartialFunction[B, D]): F[Option[D]]\n")),(0,r.kt)("h4",{id:"example-19"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO(1.asRight[String])\n// feab: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n\nfeab.innerCollectFirst {\n  case 1 => 0\n  case 2 => 999\n}\n  .unsafeRunSync()\n// res54: Option[Int] = Some(value = 0)\n\nval feab2 = IO(2.asRight[String])\n// feab2: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n// IO[Either[String, Int]] = IO(Right(2))\nfeab2.innerCollectFirst {\n  case 1 => 0\n  case 2 => 999\n}\n  .unsafeRunSync()\n// res55: Option[Int] = Some(value = 999)\n\nval feab3 = IO(3.asRight[String])\n// feab3: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n// IO[Either[String, Int]] = IO(Right(3))\nfeab3.innerCollectFirst {\n  case 1 => 0\n  case 2 => 999\n}\n  .unsafeRunSync()\n// res56: Option[Int] = None\n\nval feab4 = IO("Error".asLeft[Int])\n// feab4: IO[Either[String, Int]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\n// IO[Either[String, Int]] = IO(Left("Error"))\nfeab4.innerCollectFirst {\n  case 1 => 0\n  case 2 => 999\n}\n  .unsafeRunSync()\n// res57: Option[Int] = None\n')))}u.isMDXComponent=!0}}]);