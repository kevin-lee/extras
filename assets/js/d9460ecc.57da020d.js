"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1511],{1355:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>d,toc:()=>c});const d=JSON.parse('{"id":"extras-render/render","title":"Render","description":"Render type-class","source":"@site/../generated-docs/docs/extras-render/render.md","sourceDirName":"extras-render","slug":"/extras-render/render","permalink":"/docs/extras-render/render","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"id":"render","title":"Render"},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/docs/extras-render/"},"next":{"title":"Syntax","permalink":"/docs/extras-render/render-syntax"}}');var a=r(4848),t=r(8453);const o={sidebar_position:1,id:"render",title:"Render"},s=void 0,i={},c=[{value:"<code>Render</code> type-class",id:"render-type-class",level:2},{value:"Usage Example",id:"usage-example",level:3},{value:"<code>Render.render</code> constructor method",id:"renderrender-constructor-method",level:2},{value:"Usage Example",id:"usage-example-1",level:3},{value:"<code>Render</code> from Existing <code>Render</code>",id:"render-from-existing-render",level:2},{value:"Usage Example",id:"usage-example-2",level:3}];function l(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h2,{id:"render-type-class",children:[(0,a.jsx)(n.code,{children:"Render"})," type-class"]}),"\n",(0,a.jsxs)(n.p,{children:["It is to provider ",(0,a.jsx)(n.code,{children:"render"})," functionality to render a given type ",(0,a.jsx)(n.code,{children:"A"})," into ",(0,a.jsx)(n.code,{children:"String"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"trait Render[A] {\n  def render(a: A): String\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"usage-example",children:"Usage Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import extras.render.Render\n\nfinal case class Foo(id: Int, name: String)\nobject Foo {\n  implicit val fooRender: Render[Foo] = new Render[Foo] {\n    def render(foo: Foo): String =\n      s"ID=${foo.id.toString} / Name=${foo.name}"\n  }\n//  OR just\n//  implicit val fooRender: Render[Foo] =\n//    foo => s"ID=${foo.id.toString} / Name=${foo.name}"\n}\n\ndef bar[A: Render](a: A): Unit =\n  println(s">> a: ${Render[A].render(a)}")\n\n\nbar(Foo(1, "Something"))\n// >> a: ID=1 / Name=Something\n'})}),"\n",(0,a.jsxs)(n.h2,{id:"renderrender-constructor-method",children:[(0,a.jsx)(n.code,{children:"Render.render"})," constructor method"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"Render.render[A](A => String): Render[A]\n"})}),"\n",(0,a.jsx)(n.h3,{id:"usage-example-1",children:"Usage Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import extras.render.Render\n\nfinal case class Foo(id: Int, name: String)\nobject Foo {\n  implicit val fooRender: Render[Foo] = Render.render(\n    foo => s"ID=${foo.id.toString} / Name=${foo.name}"\n  )\n}\n\ndef bar[A: Render](a: A): Unit =\n  println(s">> a: ${Render[A].render(a)}")\n\n\nbar(Foo(1, "Something"))\n// >> a: ID=1 / Name=Something\n'})}),"\n",(0,a.jsxs)(n.h2,{id:"render-from-existing-render",children:[(0,a.jsx)(n.code,{children:"Render"})," from Existing ",(0,a.jsx)(n.code,{children:"Render"})]}),"\n",(0,a.jsxs)(n.p,{children:["If the value of your type can be rendered by an existing ",(0,a.jsx)(n.code,{children:"Render"}),", you can easily create ",(0,a.jsx)(n.code,{children:"Render"})," for your type from the existing one with ",(0,a.jsx)(n.code,{children:"contramap"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"Render[A].contramap[B](A => B): Render[B]\n"})}),"\n",(0,a.jsx)(n.h3,{id:"usage-example-2",children:"Usage Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import java.util.UUID\nimport extras.render.Render\n\nfinal case class Id(value: UUID) extends AnyVal\nobject Id {\n  implicit val idRender: Render[Id] = Render[UUID].contramap(_.value)\n}\n\nimport extras.render.syntax._\nId(UUID.randomUUID()).render\n// res5: String = "3f05f08d-cd21-44ee-94b2-059c5552aa88"\n\nfinal case class Name(value: String) extends AnyVal\nobject Name {\n  implicit val nameRender: Render[Name] = Render[String].contramap(_.value)\n}\n\nName("Kevin").render\n// res6: String = "Kevin"\n'})})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>s});var d=r(6540);const a={},t=d.createContext(a);function o(e){const n=d.useContext(t);return d.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),d.createElement(t.Provider,{value:n},e.children)}}}]);