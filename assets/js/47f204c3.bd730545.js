"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[87],{3905:(e,a,n)=>{n.d(a,{Zo:()=>o,kt:()=>d});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function l(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?l(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=t.createContext({}),f=function(e){var a=t.useContext(p),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},o=function(e){var a=f(e.components);return t.createElement(p.Provider,{value:a},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),u=f(n),m=r,d=u["".concat(p,".").concat(m)]||u[m]||c[m]||l;return n?t.createElement(d,i(i({ref:a},o),{},{components:n})):t.createElement(d,i({ref:a},o))}));function d(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var s={};for(var p in a)hasOwnProperty.call(a,p)&&(s[p]=a[p]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var f=2;f<l;f++)i[f]=n[f];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},888:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>s,toc:()=>f});var t=n(7462),r=(n(7294),n(3905));const l={sidebar_position:3,id:"f-either-ab",title:"F[Either[A, B]]"},i=void 0,s={unversionedId:"extras-cats/f-either-ab",id:"extras-cats/f-either-ab",title:"F[Either[A, B]]",description:"Extension Methods for F[Either[A, B]]",source:"@site/../generated-docs/docs/extras-cats/f-either-ab.md",sourceDirName:"extras-cats",slug:"/extras-cats/f-either-ab",permalink:"/docs/extras-cats/f-either-ab",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,id:"f-either-ab",title:"F[Either[A, B]]"},sidebar:"tutorialSidebar",previous:{title:"EitherT",permalink:"/docs/extras-cats/eithert"},next:{title:"OptionT",permalink:"/docs/extras-cats/optiont"}},p={},f=[{value:"Extension Methods for <code>F[Either[A, B]]</code>",id:"extension-methods-for-feithera-b",level:2},{value:"innerMap",id:"innermap",level:2},{value:"Example",id:"example",level:3},{value:"innerFlatMap",id:"innerflatmap",level:2},{value:"Example",id:"example-1",level:3},{value:"innerFlatMapF",id:"innerflatmapf",level:2},{value:"Example",id:"example-2",level:3},{value:"innerLeftMap",id:"innerleftmap",level:2},{value:"Example",id:"example-3",level:3},{value:"innerLeftFlatMap",id:"innerleftflatmap",level:2},{value:"Example",id:"example-4",level:3},{value:"innerLeftFlatMapF",id:"innerleftflatmapf",level:2},{value:"Example",id:"example-5",level:3},{value:"innerGetOrElse",id:"innergetorelse",level:2},{value:"Example",id:"example-6",level:3},{value:"innerGetOrElseF",id:"innergetorelsef",level:2},{value:"Example",id:"example-7",level:3},{value:"innerFold",id:"innerfold",level:2},{value:"Example",id:"example-8",level:3},{value:"innerFoldF",id:"innerfoldf",level:2},{value:"Example",id:"example-9",level:3}],o={toc:f},u="wrapper";function c(e){let{components:a,...n}=e;return(0,r.kt)(u,(0,t.Z)({},o,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"extension-methods-for-feithera-b"},"Extension Methods for ",(0,r.kt)("inlineCode",{parentName:"h2"},"F[Either[A, B]]")),(0,r.kt)("h2",{id:"innermap"},"innerMap"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val foa: F[Either[A, B]] = ...\nfoa.innerMap(B => D) // F[Either[A, D]]\n")),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\nval foa = IO.pure(1.asRight[String])\n// foa: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfoa.innerMap(_ + 999)\n  .unsafeRunSync()\n// res1: Either[String, Int] = Right(value = 1000)\n")),(0,r.kt)("h2",{id:"innerflatmap"},"innerFlatMap"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerFlatMap(B => Either[A, D]) // F[Either[A, D]]\n")),(0,r.kt)("h3",{id:"example-1"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(1.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfeab.innerFlatMap(b => (b + 999).asRight[String])\n  .unsafeRunSync()\n// res3: Either[String, Int] = Right(value = 1000)\n")),(0,r.kt)("h2",{id:"innerflatmapf"},"innerFlatMapF"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\n\nfeab.innerFlatMapF(B => F[Either[A, D]]) // F[Either[A, D]]\n")),(0,r.kt)("h3",{id:"example-2"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(1.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfeab.innerFlatMapF(b => IO.pure((b + 999).asRight))\n  .unsafeRunSync()\n// res5: Either[String, Int] = Right(value = 1000)\n")),(0,r.kt)("h2",{id:"innerleftmap"},"innerLeftMap"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerLeftMap(A => C) // F[Either[C, B]]\n")),(0,r.kt)("h3",{id:"example-3"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure("Error".asLeft[Int])\n// feab: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab.innerLeftMap("Failed: " + _)\n  .unsafeRunSync()\n// res7: Either[String, Int] = Left(value = "Failed: Error")\n')),(0,r.kt)("h2",{id:"innerleftflatmap"},"innerLeftFlatMap"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerFlatMap(A => Either[C, B]) // F[Either[C, B]]\n")),(0,r.kt)("h3",{id:"example-4"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure("Error".asLeft[Int])\n// feab: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab.innerLeftFlatMap(a => ("Failed: " + a).asLeft[Int])\n  .unsafeRunSync()\n// res9: Either[String, Int] = Left(value = "Failed: Error")\n')),(0,r.kt)("h2",{id:"innerleftflatmapf"},"innerLeftFlatMapF"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerFlatMapF(A => F[Either[C, B]]) // F[Either[C, B]]\n")),(0,r.kt)("h3",{id:"example-5"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure("Error".asLeft[Int])\n// feab: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab.innerLeftFlatMapF(a => IO.pure(("Failed: " + a).asLeft[Int]))\n  .unsafeRunSync()\n// res11: Either[String, Int] = Left(value = "Failed: Error")\n')),(0,r.kt)("h2",{id:"innergetorelse"},"innerGetOrElse"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerGetOrElse[D >: B](=> D) // F[D]\n")),(0,r.kt)("h3",{id:"example-6"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(999.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 999))\n\nfeab.innerGetOrElse(0)\n  .unsafeRunSync()\n// res13: Int = 999\n\nval feab2 = IO.pure("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab2.innerGetOrElse(0)\n  .unsafeRunSync()\n// res14: Int = 0\n')),(0,r.kt)("h2",{id:"innergetorelsef"},"innerGetOrElseF"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerGetOrElseF[D >: B](=> F[D]) // F[D]\n")),(0,r.kt)("h3",{id:"example-7"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(999.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 999))\n\nfeab.innerGetOrElseF(IO.pure(0))\n  .unsafeRunSync()\n// res16: Int = 999\n\nval feab2 = IO.pure("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab2.innerGetOrElseF(IO.pure(0))\n  .unsafeRunSync()\n// res17: Int = 0\n')),(0,r.kt)("h2",{id:"innerfold"},"innerFold"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerFold[D](=> D)(B => D) // F[D]\n")),(0,r.kt)("h3",{id:"example-8"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(1.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfeab.innerFold(_ => 0)(_ + 999)\n  .unsafeRunSync()\n// res19: Int = 1000\n\nval feab2 = IO.pure("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab2.innerFold(_ => 0)(_ + 999)\n  .unsafeRunSync()\n// res20: Int = 0\n')),(0,r.kt)("h2",{id:"innerfoldf"},"innerFoldF"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"val feab: F[Either[A, B]] = ...\nfeab.innerFoldF[D](=> F[D])(B => F[D]) // F[D]\n")),(0,r.kt)("h3",{id:"example-9"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval feab = IO.pure(1.asRight[String])\n// feab: IO[Either[String, Int]] = Pure(a = Right(value = 1))\n\nfeab.innerFoldF(_ => IO.pure(0))(b => IO.pure(b + 999))\n  .unsafeRunSync()\n// res22: Int = 1000\n\nval feab2 = IO.pure("Error".asLeft[Int])\n// feab2: IO[Either[String, Int]] = Pure(a = Left(value = "Error"))\n\nfeab2.innerFoldF(_ => IO.pure(0))(b => IO.pure(b + 999))\n  .unsafeRunSync()\n// res23: Int = 0\n')))}c.isMDXComponent=!0}}]);