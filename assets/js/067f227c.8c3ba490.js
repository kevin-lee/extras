"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2532],{8453:(n,e,a)=>{a.d(e,{R:()=>t,x:()=>c});var s=a(6540);const r={},i=s.createContext(r);function t(n){const e=s.useContext(i);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:t(n.components),s.createElement(i.Provider,{value:e},n.children)}},9766:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>o,contentTitle:()=>c,default:()=>m,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"extras-string/strings","title":"strings syntax","description":"Module","source":"@site/../generated-docs/docs/extras-string/strings.md","sourceDirName":"extras-string","slug":"/extras-string/strings","permalink":"/docs/extras-string/strings","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"id":"strings","title":"strings syntax"},"sidebar":"tutorialSidebar","previous":{"title":"numeric syntax","permalink":"/docs/extras-string/numeric"},"next":{"title":"cases syntax","permalink":"/docs/extras-string/cases"}}');var r=a(4848),i=a(8453);const t={sidebar_position:2,id:"strings",title:"strings syntax"},c=void 0,o={},d=[{value:"Module",id:"module",level:2},{value:"Import <code>strings</code> syntax",id:"import-strings-syntax",level:2},{value:"<code>commaAnd</code>",id:"commaand",level:2},{value:"<code>serialCommaAnd</code>",id:"serialcommaand",level:2},{value:"<code>commaOr</code>",id:"commaor",level:2},{value:"<code>serialCommaOr</code>",id:"serialcommaor",level:2},{value:"<code>commaWith(String)</code>",id:"commawithstring",level:2},{value:"<code>serialCommaWith(String)</code>",id:"serialcommawithstring",level:2}];function l(n){const e={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{id:"module",children:"Module"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-scala",children:'"io.kevinlee" %% "extras-string" % "0.46.1"\n'})}),"\n",(0,r.jsxs)(e.p,{children:["or for ",(0,r.jsx)(e.code,{children:"Scala.js"}),":"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-scala",children:'"io.kevinlee" %%% "extras-string" % "0.46.1"\n'})}),"\n",(0,r.jsxs)(e.h2,{id:"import-strings-syntax",children:["Import ",(0,r.jsx)(e.code,{children:"strings"})," syntax"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-scala",children:"import extras.strings.syntax.strings._\n"})}),"\n",(0,r.jsx)(e.p,{children:"Or"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-scala",children:"import extras.strings.syntax.all._\n"})}),"\n",(0,r.jsx)(e.h2,{id:"commaand",children:(0,r.jsx)(e.code,{children:"commaAnd"})}),"\n",(0,r.jsxs)(e.p,{children:["Format ",(0,r.jsx)(e.code,{children:"Seq[String]"})," into a human-readable list using comma and the conjunction ",(0,r.jsx)(e.code,{children:"and"}),"."]}),"\n",(0,r.jsxs)(e.p,{children:["It separates elements by commas and uses the term ",(0,r.jsx)(e.code,{children:"and"})," before the last element."]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-scala",children:'List.empty[String].commaAnd\n// res0: String = ""\n\nList("").commaAnd\n// res1: String = ""\n\nList("aaa").commaAnd\n// res2: String = "aaa"\n\nList("aaa", "bbb").commaAnd\n// res3: String = "aaa and bbb"\n\nList("aaa", "bbb", "ccc").commaAnd\n// res4: String = "aaa, bbb and ccc"\n\nList("aaa", "bbb", "ccc", "ddd").commaAnd\n// res5: String = "aaa, bbb, ccc and ddd"\n'})}),"\n",(0,r.jsx)(e.h2,{id:"serialcommaand",children:(0,r.jsx)(e.code,{children:"serialCommaAnd"})}),"\n",(0,r.jsxs)(e.p,{children:["Format ",(0,r.jsx)(e.code,{children:"Seq[String]"})," into a human-readable list using comma and the conjunction ",(0,r.jsx)(e.code,{children:"and"}),"."]}),"\n",(0,r.jsxs)(e.p,{children:["It separates elements by commas and uses the term ",(0,r.jsx)(e.code,{children:"and"}),' before the last element following the "Oxford comma" style.  e.g.) ',(0,r.jsx)(e.code,{children:'"aaa, bbb, and ccc"'})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-scala",children:'List.empty[String].serialCommaAnd\n// res6: String = ""\n\nList("").serialCommaAnd\n// res7: String = ""\n\nList("aaa").serialCommaAnd\n// res8: String = "aaa"\n\nList("aaa", "bbb").serialCommaAnd\n// res9: String = "aaa and bbb"\n\nList("aaa", "bbb", "ccc").serialCommaAnd\n// res10: String = "aaa, bbb, and ccc"\n\nList("aaa", "bbb", "ccc", "ddd").serialCommaAnd\n// res11: String = "aaa, bbb, ccc, and ddd"\n'})}),"\n",(0,r.jsx)(e.h2,{id:"commaor",children:(0,r.jsx)(e.code,{children:"commaOr"})}),"\n",(0,r.jsxs)(e.p,{children:["Format ",(0,r.jsx)(e.code,{children:"Seq[String]"})," into a human-readable list using comma and the conjunction ",(0,r.jsx)(e.code,{children:"or"}),"."]}),"\n",(0,r.jsxs)(e.p,{children:["It separates elements by commas and uses the term ",(0,r.jsx)(e.code,{children:"or"})," before the last element."]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-scala",children:'List.empty[String].commaOr\n// res12: String = ""\n\nList("").commaOr\n// res13: String = ""\n\nList("aaa").commaOr\n// res14: String = "aaa"\n\nList("aaa", "bbb").commaOr\n// res15: String = "aaa or bbb"\n\nList("aaa", "bbb", "ccc").commaOr\n// res16: String = "aaa, bbb or ccc"\n\nList("aaa", "bbb", "ccc", "ddd").commaOr\n// res17: String = "aaa, bbb, ccc or ddd"\n'})}),"\n",(0,r.jsx)(e.h2,{id:"serialcommaor",children:(0,r.jsx)(e.code,{children:"serialCommaOr"})}),"\n",(0,r.jsxs)(e.p,{children:["Format ",(0,r.jsx)(e.code,{children:"Seq[String]"})," into a human-readable list using comma and the conjunction ",(0,r.jsx)(e.code,{children:"or"}),"."]}),"\n",(0,r.jsxs)(e.p,{children:["It separates elements by commas and uses the term ",(0,r.jsx)(e.code,{children:"or"}),' before the last element following the "Oxford comma" style.  e.g.) ',(0,r.jsx)(e.code,{children:'"aaa, bbb, or ccc"'})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-scala",children:'List.empty[String].serialCommaOr\n// res18: String = ""\n\nList("").serialCommaOr\n// res19: String = ""\n\nList("aaa").serialCommaOr\n// res20: String = "aaa"\n\nList("aaa", "bbb").serialCommaOr\n// res21: String = "aaa or bbb"\n\nList("aaa", "bbb", "ccc").serialCommaOr\n// res22: String = "aaa, bbb, or ccc"\n\nList("aaa", "bbb", "ccc", "ddd").serialCommaOr\n// res23: String = "aaa, bbb, ccc, or ddd"\n'})}),"\n",(0,r.jsx)(e.h2,{id:"commawithstring",children:(0,r.jsx)(e.code,{children:"commaWith(String)"})}),"\n",(0,r.jsxs)(e.p,{children:["An extension method for a ",(0,r.jsx)(e.code,{children:"Seq[String]"}),", providing a way to join the ",(0,r.jsx)(e.code,{children:"String"})," elements with a comma and a given\nconjunction."]}),"\n",(0,r.jsxs)(e.p,{children:["It joins ",(0,r.jsx)(e.code,{children:"String"})," values with commas and uses the given conjunction before the last element."]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-scala",children:'List.empty[String].commaWith("BLAH")\n// res24: String = ""\n\nList("").commaWith("BLAH")\n// res25: String = ""\n\nList("aaa").commaWith("BLAH")\n// res26: String = "aaa"\n\nList("aaa", "bbb").commaWith("BLAH")\n// res27: String = "aaa BLAH bbb"\n\nList("aaa", "bbb", "ccc").commaWith("BLAH")\n// res28: String = "aaa, bbb BLAH ccc"\n\nList("aaa", "bbb", "ccc", "ddd").commaWith("BLAH")\n// res29: String = "aaa, bbb, ccc BLAH ddd"\n'})}),"\n",(0,r.jsx)(e.h2,{id:"serialcommawithstring",children:(0,r.jsx)(e.code,{children:"serialCommaWith(String)"})}),"\n",(0,r.jsxs)(e.p,{children:["An extension method for a ",(0,r.jsx)(e.code,{children:"Seq[String]"}),", providing a way to join the ",(0,r.jsx)(e.code,{children:"String"})," elements with a serial comma and a given\nconjunction."]}),"\n",(0,r.jsx)(e.p,{children:"It joins String values with commas and uses the given conjunction before the last element."}),"\n",(0,r.jsx)(e.p,{children:"This method employs the serial comma (also known as the Oxford comma),\nwhich means it always inserts a comma before the conjunction unless there are only two elements."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-scala",children:'List.empty[String].serialCommaWith("BLAH")\n// res30: String = ""\n\nList("").serialCommaWith("BLAH")\n// res31: String = ""\n\nList("aaa").serialCommaWith("BLAH")\n// res32: String = "aaa"\n\nList("aaa", "bbb").serialCommaWith("BLAH")\n// res33: String = "aaa BLAH bbb"\n\nList("aaa", "bbb", "ccc").serialCommaWith("BLAH")\n// res34: String = "aaa, bbb, BLAH ccc"\n\nList("aaa", "bbb", "ccc", "ddd").serialCommaWith("BLAH")\n// res35: String = "aaa, bbb, ccc, BLAH ddd"\n'})})]})}function m(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(l,{...n})}):l(n)}}}]);