"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5622],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=a.createContext({}),s=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(t),m=o,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||r;return t?a.createElement(f,i(i({ref:n},c),{},{components:t})):a.createElement(f,i({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=u;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var s=2;s<r;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},599:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var a=t(7462),o=(t(7294),t(3905));const r={sidebar_position:3,id:"optiont",title:"OptionT"},i=void 0,p={unversionedId:"extras-cats/optiont",id:"extras-cats/optiont",title:"OptionT",description:"Extension Methods for OptionT",source:"@site/../generated-docs/docs/extras-cats/optiont.md",sourceDirName:"extras-cats",slug:"/extras-cats/optiont",permalink:"/docs/extras-cats/optiont",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,id:"optiont",title:"OptionT"},sidebar:"tutorialSidebar",previous:{title:"EitherT",permalink:"/docs/extras-cats/eithert"},next:{title:"Getting Started",permalink:"/docs/extras-circe/"}},l={},s=[{value:"Extension Methods for OptionT",id:"extension-methods-for-optiont",level:2},{value:"<code>optionT</code> / <code>t</code> for <code>F[Option[A]]</code>",id:"optiont--t-for-foptiona",level:3},{value:"<code>optionT</code> / <code>t</code> for <code>Option[A]</code>",id:"optiont--t-for-optiona",level:3},{value:"<code>someT</code> for <code>F[A]</code>",id:"somet-for-fa",level:3},{value:"<code>someTF</code> for <code>A</code>",id:"sometf-for-a",level:3},{value:"Example",id:"example",level:2}],c={toc:s};function d(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"extension-methods-for-optiont"},"Extension Methods for OptionT"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"import extras.cats.syntax.option._\n")),(0,o.kt)("p",null,"or"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"import extras.cats.syntax.all._\n")),(0,o.kt)("h3",{id:"optiont--t-for-foptiona"},(0,o.kt)("inlineCode",{parentName:"h3"},"optionT")," / ",(0,o.kt)("inlineCode",{parentName:"h3"},"t")," for ",(0,o.kt)("inlineCode",{parentName:"h3"},"F[Option[A]]")),(0,o.kt)("p",null,"When you have ",(0,o.kt)("inlineCode",{parentName:"p"},"foa: F[Option[A]]"),", instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"OptionT(foa)"),", you can simply do"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"foa.optionT // OptionT[F, A]\n// or\nfoa.t // OptionT[F, A]\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval foa = IO.pure(1.some)\n// foa: IO[Option[Int]] = Pure(a = Some(value = 1))\nfoa.t\n// res1: cats.data.OptionT[IO, Int] = OptionT(\n//   value = Pure(a = Some(value = 1))\n// )\n\nval f = IO(println("Hello").some)\n// f: IO[Option[Unit]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\nf.t\n// res2: cats.data.OptionT[IO, Unit] = OptionT(\n//   value = Delay(\n//     thunk = <function0>,\n// ...\n')),(0,o.kt)("h3",{id:"optiont--t-for-optiona"},(0,o.kt)("inlineCode",{parentName:"h3"},"optionT")," / ",(0,o.kt)("inlineCode",{parentName:"h3"},"t")," for ",(0,o.kt)("inlineCode",{parentName:"h3"},"Option[A]")),(0,o.kt)("p",null,"When you have ",(0,o.kt)("inlineCode",{parentName:"p"},"oa: Option[A]"),", instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"OptionT.fromOption[F](oa)"),", you can simply do"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"oa.optionT[F] // OptionT[F, A]\n// or\noa.t[F] // OptionT[F, A]\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval oa = 1.some\n// oa: Option[Int] = Some(value = 1)\noa.t[IO]\n// res4: cats.data.OptionT[IO, Int] = OptionT(\n//   value = Pure(a = Some(value = 1))\n// )\n")),(0,o.kt)("h3",{id:"somet-for-fa"},(0,o.kt)("inlineCode",{parentName:"h3"},"someT")," for ",(0,o.kt)("inlineCode",{parentName:"h3"},"F[A]")),(0,o.kt)("p",null,"When you have ",(0,o.kt)("inlineCode",{parentName:"p"},"fa: F[A]"),", instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"OptionT.liftF(fa)"),", you can simply do"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"fa.someT // OptionT[F, A]\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.effect._\n\nimport extras.cats.syntax.all._\n\nval fa = IO.pure(1)\n// fa: IO[Int] = Pure(a = 1)\nfa.someT\n// res6: cats.data.OptionT[IO, Int] = OptionT(\n//   value = Map(\n//     source = Pure(a = 1),\n// ...\n\nval f = IO(println("Hello"))\n// f: IO[Unit] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\nf.someT\n// res7: cats.data.OptionT[IO, Unit] = OptionT(\n//   value = Map(\n//     source = Delay(\n// ...\n')),(0,o.kt)("h3",{id:"sometf-for-a"},(0,o.kt)("inlineCode",{parentName:"h3"},"someTF")," for ",(0,o.kt)("inlineCode",{parentName:"h3"},"A")),(0,o.kt)("p",null,"When you have ",(0,o.kt)("inlineCode",{parentName:"p"},"a: A"),", instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"OptionT.some(a)"),", you can simply do"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"a.someTF[F] // OptionT[F, A]\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.effect._\n\nimport extras.cats.syntax.all._\n\nval a = 1\n// a: Int = 1\na.someTF[IO]\n// res9: cats.data.OptionT[IO, Int] = OptionT(\n//   value = Pure(a = Some(value = 1))\n// )\n")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nfinal case class MyError(message: String)\n\ndef foo[F[_]: Sync](n: Int): F[Int] = Sync[F].pure(n * 2)\n\ndef bar[F[_]: Sync](n: Int): F[Option[Int]] =\n  if (n < 0)\n    Sync[F].pure(none[Int])\n  else\n    Sync[F].pure((n + 100).some)\n\ndef divide[F[_]: Sync](a: Int, b: Int): F[Option[Int]] =\n  if (b == 0)\n    none[Int].pure[F]\n  else\n    Sync[F].delay((a / b).some)\n\ndef run[F[_]: Sync](): F[Option[Int]] = (for {\n  a <- foo(123).someT\n  b <- 2.someTF[F]\n  c <- bar(b).optionT\n  d <- divide(a, c).t\n} yield d).value\n\nprintln(run[IO]().unsafeRunSync())\n// Some(2)\n")))}d.isMDXComponent=!0}}]);