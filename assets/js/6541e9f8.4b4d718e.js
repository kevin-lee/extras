"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4821],{6477:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"extras-cats/eithert","title":"EitherT","description":"Module","source":"@site/../generated-docs/docs/extras-cats/eithert.md","sourceDirName":"extras-cats","slug":"/extras-cats/eithert","permalink":"/docs/extras-cats/eithert","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"id":"eithert","title":"EitherT"},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/docs/extras-cats/"},"next":{"title":"F[Either[A, B]]","permalink":"/docs/extras-cats/f-either-ab"}}');var a=t(4848),i=t(8453);const s={sidebar_position:2,id:"eithert",title:"EitherT"},c=void 0,l={},o=[{value:"Module",id:"module",level:2},{value:"Extension Methods for EitherT",id:"extension-methods-for-eithert",level:2},{value:"<code>eitherT</code> / <code>t</code> for <code>F[Either[A, B]]</code>",id:"eithert--t-for-feithera-b",level:3},{value:"<code>eitherT</code> / <code>t</code> for <code>Either[A, B]</code>",id:"eithert--t-for-eithera-b",level:3},{value:"<code>rightT</code> for <code>F[B]</code>",id:"rightt-for-fb",level:3},{value:"<code>leftT</code> for <code>F[A]</code>",id:"leftt-for-fa",level:3},{value:"Example",id:"example",level:2}];function d(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"module",children:"Module"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'"io.kevinlee" %% "extras-cats" % "0.46.1"\n'})}),"\n",(0,a.jsxs)(n.p,{children:["or for ",(0,a.jsx)(n.code,{children:"Scala.js"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'"io.kevinlee" %%% "extras-cats" % "0.46.1"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"extension-methods-for-eithert",children:"Extension Methods for EitherT"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"import extras.cats.syntax.either._\n"})}),"\n",(0,a.jsx)(n.p,{children:"or"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"import extras.cats.syntax.all._\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"eithert--t-for-feithera-b",children:[(0,a.jsx)(n.code,{children:"eitherT"})," / ",(0,a.jsx)(n.code,{children:"t"})," for ",(0,a.jsx)(n.code,{children:"F[Either[A, B]]"})]}),"\n",(0,a.jsxs)(n.p,{children:["When you have ",(0,a.jsx)(n.code,{children:"fab: F[Either[A, B]]"}),", instead of ",(0,a.jsx)(n.code,{children:"EitherT(fab)"}),", you can simply do"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"fab.eitherT // EitherT[F, A, B]\n// or\nfab.t // EitherT[F, A, B]\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval fab = IO.pure(1.asRight[String])\n// fab: IO[Either[String, Int]] = Pure(a = Right(value = 1))\nfab.t\n// res1: cats.data.EitherT[IO, String, Int] = EitherT(\n//   value = Pure(a = Right(value = 1))\n// )\n\nval f = IO(println("Hello").asRight[String])\n// f: IO[Either[String, Unit]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\nf.t\n// res2: cats.data.EitherT[IO, String, Unit] = EitherT(\n//   value = Delay(\n//     thunk = <function0>,\n// ...\n'})}),"\n",(0,a.jsxs)(n.h3,{id:"eithert--t-for-eithera-b",children:[(0,a.jsx)(n.code,{children:"eitherT"})," / ",(0,a.jsx)(n.code,{children:"t"})," for ",(0,a.jsx)(n.code,{children:"Either[A, B]"})]}),"\n",(0,a.jsxs)(n.p,{children:["When you have ",(0,a.jsx)(n.code,{children:"ab: Either[A, B]"}),", instead of ",(0,a.jsx)(n.code,{children:"EitherT.fromEither[F](ab)"}),", you can simply do"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"ab.eitherT[F] // EitherT[F, A, B]\n// or\nab.t[F] // EitherT[F, A, B]\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval ab = 1.asRight[String]\n// ab: Either[String, Int] = Right(value = 1)\nab.t[IO]\n// res4: cats.data.EitherT[IO, String, Int] = EitherT(\n//   value = Pure(a = Right(value = 1))\n// )\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"rightt-for-fb",children:[(0,a.jsx)(n.code,{children:"rightT"})," for ",(0,a.jsx)(n.code,{children:"F[B]"})]}),"\n",(0,a.jsxs)(n.p,{children:["When you have ",(0,a.jsx)(n.code,{children:"fb: F[B]"}),", instead of ",(0,a.jsx)(n.code,{children:"EitherT.right[A](fb)"}),", you can simply do"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"fb.rightT[A] // EitherT[F, A, B]\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import cats.effect._\n\nimport extras.cats.syntax.all._\n\nval fb = IO.pure(1)\n// fb: IO[Int] = Pure(a = 1)\nfb.rightT[String]\n// res6: cats.data.EitherT[IO, String, Int] = EitherT(\n//   value = Map(\n//     source = Pure(a = 1),\n// ...\n\nval f = IO(println("Hello"))\n// f: IO[Unit] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\nf.rightT[String]\n// res7: cats.data.EitherT[IO, String, Unit] = EitherT(\n//   value = Map(\n//     source = Delay(\n// ...\n'})}),"\n",(0,a.jsxs)(n.h3,{id:"leftt-for-fa",children:[(0,a.jsx)(n.code,{children:"leftT"})," for ",(0,a.jsx)(n.code,{children:"F[A]"})]}),"\n",(0,a.jsxs)(n.p,{children:["When you have ",(0,a.jsx)(n.code,{children:"fa: F[A]"}),", instead of ",(0,a.jsx)(n.code,{children:"EitherT.left[B](fa)"}),", you can simply do"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"fa.leftT[B] // EitherT[F, A, B]\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import cats.effect._\n\nimport extras.cats.syntax.all._\n\nval fa = IO.pure("ERROR!!!")\n// fa: IO[String] = Pure(a = "ERROR!!!")\nfa.leftT[Int]\n// res9: cats.data.EitherT[IO, String, Int] = EitherT(\n//   value = Map(\n//     source = Pure(a = "ERROR!!!"),\n// ...\n\nval f = IO(println("ERROR!!!"))\n// f: IO[Unit] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\nf.leftT[Int]\n// res10: cats.data.EitherT[IO, Unit, Int] = EitherT(\n//   value = Map(\n//     source = Delay(\n// ...\n'})}),"\n",(0,a.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nfinal case class MyError(message: String)\n\ndef foo[F[_]: Sync](n: Int): F[Int] = Sync[F].pure(n * 2)\n\ndef bar[F[_]: Sync](n: Int): F[Either[MyError, Int]] =\n  if (n < 0)\n    Sync[F].pure(MyError(s"n cannot be a negative number. [n: $n]").asLeft)\n  else\n    Sync[F].pure((n + 100).asRight)\n\ndef divide[F[_]: Sync](a: Int, b: Int): F[Either[MyError, Int]] =\n  if (b == 0)\n    MyError(s"You can divide number by 0. [a: $a, b: $b]").asLeft.pure[F]\n  else\n    Sync[F].delay((a / b).asRight)\n\ndef run[F[_]: Sync](): F[Either[MyError, Int]] = (for {\n  a <- foo(123).rightT\n  b <- 2.rightTF[F, MyError]\n  c <- bar(b).eitherT\n  d <- divide(a, c).t\n} yield d).value\n\nprintln(run[IO]().unsafeRunSync())\n// Right(2)\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>c});var r=t(6540);const a={},i=r.createContext(a);function s(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);