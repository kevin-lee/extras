"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5553],{3905:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>m});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function h(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var s=r.createContext({}),l=function(t){var e=r.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},d=function(t){var e=l(t.components);return r.createElement(s.Provider,{value:e},t.children)},c="mdxType",p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,i=t.originalType,s=t.parentName,d=h(t,["components","mdxType","originalType","parentName"]),c=l(n),u=a,m=c["".concat(s,".").concat(u)]||c[u]||p[u]||i;return n?r.createElement(m,o(o({ref:e},d),{},{components:n})):r.createElement(m,o({ref:e},d))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=n.length,o=new Array(i);o[0]=u;var h={};for(var s in e)hasOwnProperty.call(e,s)&&(h[s]=e[s]);h.originalType=t,h[c]="string"==typeof t?t:a,o[1]=h;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7898:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>h,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:1,id:"numeric",title:"numeric syntax"},o=void 0,h={unversionedId:"extras-string/numeric",id:"extras-string/numeric",title:"numeric syntax",description:"Import numeric syntax",source:"@site/../generated-docs/docs/extras-string/numeric.md",sourceDirName:"extras-string",slug:"/extras-string/numeric",permalink:"/docs/extras-string/numeric",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,id:"numeric",title:"numeric syntax"},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/extras-string/"},next:{title:"strings syntax",permalink:"/docs/extras-string/strings"}},s={},l=[{value:"Import <code>numeric</code> syntax",id:"import-numeric-syntax",level:2},{value:"<code>numeric</code> syntax for <code>Int</code>",id:"numeric-syntax-for-int",level:2},{value:"<code>Int.toOrdinal</code>",id:"inttoordinal",level:3},{value:"<code>numeric</code> syntax for <code>Long</code>",id:"numeric-syntax-for-long",level:2},{value:"<code>Long.toOrdinal</code>",id:"longtoordinal",level:3}],d={toc:l},c="wrapper";function p(t){let{components:e,...n}=t;return(0,a.kt)(c,(0,r.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"import-numeric-syntax"},"Import ",(0,a.kt)("inlineCode",{parentName:"h2"},"numeric")," syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"import extras.strings.syntax.numeric._\n")),(0,a.kt)("p",null,"Or"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"import extras.strings.syntax.all._\n")),(0,a.kt)("h2",{id:"numeric-syntax-for-int"},(0,a.kt)("inlineCode",{parentName:"h2"},"numeric")," syntax for ",(0,a.kt)("inlineCode",{parentName:"h2"},"Int")),(0,a.kt)("h3",{id:"inttoordinal"},(0,a.kt)("inlineCode",{parentName:"h3"},"Int.toOrdinal")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'1.toOrdinal\n// res0: String = "1st"\n2.toOrdinal\n// res1: String = "2nd"\n3.toOrdinal\n// res2: String = "3rd"\n4.toOrdinal\n// res3: String = "4th"\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'(1 to 100)\n  .map(_.toOrdinal)\n  .grouped(10)\n  .map(_.mkString(", "))\n  .foreach(println(_))\n// 1st, 2nd, 3rd, 4th, 5th, 6th, 7th, 8th, 9th, 10th\n// 11th, 12th, 13th, 14th, 15th, 16th, 17th, 18th, 19th, 20th\n// 21st, 22nd, 23rd, 24th, 25th, 26th, 27th, 28th, 29th, 30th\n// 31st, 32nd, 33rd, 34th, 35th, 36th, 37th, 38th, 39th, 40th\n// 41st, 42nd, 43rd, 44th, 45th, 46th, 47th, 48th, 49th, 50th\n// 51st, 52nd, 53rd, 54th, 55th, 56th, 57th, 58th, 59th, 60th\n// 61st, 62nd, 63rd, 64th, 65th, 66th, 67th, 68th, 69th, 70th\n// 71st, 72nd, 73rd, 74th, 75th, 76th, 77th, 78th, 79th, 80th\n// 81st, 82nd, 83rd, 84th, 85th, 86th, 87th, 88th, 89th, 90th\n// 91st, 92nd, 93rd, 94th, 95th, 96th, 97th, 98th, 99th, 100th\n')),(0,a.kt)("h2",{id:"numeric-syntax-for-long"},(0,a.kt)("inlineCode",{parentName:"h2"},"numeric")," syntax for ",(0,a.kt)("inlineCode",{parentName:"h2"},"Long")),(0,a.kt)("h3",{id:"longtoordinal"},(0,a.kt)("inlineCode",{parentName:"h3"},"Long.toOrdinal")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'1L.toOrdinal\n// res5: String = "1st"\n2L.toOrdinal\n// res6: String = "2nd"\n3L.toOrdinal\n// res7: String = "3rd"\n4L.toOrdinal\n// res8: String = "4th"\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'(1L to 100L)\n  .map(_.toOrdinal)\n  .grouped(10)\n  .map(_.mkString(", "))\n  .foreach(println(_))\n// 1st, 2nd, 3rd, 4th, 5th, 6th, 7th, 8th, 9th, 10th\n// 11th, 12th, 13th, 14th, 15th, 16th, 17th, 18th, 19th, 20th\n// 21st, 22nd, 23rd, 24th, 25th, 26th, 27th, 28th, 29th, 30th\n// 31st, 32nd, 33rd, 34th, 35th, 36th, 37th, 38th, 39th, 40th\n// 41st, 42nd, 43rd, 44th, 45th, 46th, 47th, 48th, 49th, 50th\n// 51st, 52nd, 53rd, 54th, 55th, 56th, 57th, 58th, 59th, 60th\n// 61st, 62nd, 63rd, 64th, 65th, 66th, 67th, 68th, 69th, 70th\n// 71st, 72nd, 73rd, 74th, 75th, 76th, 77th, 78th, 79th, 80th\n// 81st, 82nd, 83rd, 84th, 85th, 86th, 87th, 88th, 89th, 90th\n// 91st, 92nd, 93rd, 94th, 95th, 96th, 97th, 98th, 99th, 100th\n')))}p.isMDXComponent=!0}}]);