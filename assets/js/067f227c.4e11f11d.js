"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7498],{3905:(e,n,a)=>{a.d(n,{Zo:()=>l,kt:()=>g});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var m=t.createContext({}),c=function(e){var n=t.useContext(m),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},l=function(e){var n=c(e.components);return t.createElement(m.Provider,{value:n},e.children)},d="mdxType",b={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,m=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),d=c(a),p=r,g=d["".concat(m,".").concat(p)]||d[p]||b[p]||i;return a?t.createElement(g,s(s({ref:n},l),{},{components:a})):t.createElement(g,s({ref:n},l))}));function g(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=a.length,s=new Array(i);s[0]=p;var o={};for(var m in n)hasOwnProperty.call(n,m)&&(o[m]=n[m]);o.originalType=e,o[d]="string"==typeof e?e:r,s[1]=o;for(var c=2;c<i;c++)s[c]=a[c];return t.createElement.apply(null,s)}return t.createElement.apply(null,a)}p.displayName="MDXCreateElement"},5851:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>m,contentTitle:()=>s,default:()=>b,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var t=a(7462),r=(a(7294),a(3905));const i={sidebar_position:2,id:"strings",title:"strings syntax"},s=void 0,o={unversionedId:"extras-string/strings",id:"extras-string/strings",title:"strings syntax",description:"Import strings syntax",source:"@site/../generated-docs/docs/extras-string/strings.md",sourceDirName:"extras-string",slug:"/extras-string/strings",permalink:"/docs/extras-string/strings",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,id:"strings",title:"strings syntax"},sidebar:"tutorialSidebar",previous:{title:"numeric syntax",permalink:"/docs/extras-string/numeric"},next:{title:"Getting Started",permalink:"/docs/extras-render/"}},m={},c=[{value:"Import <code>strings</code> syntax",id:"import-strings-syntax",level:2},{value:"<code>commaWith(String)</code>",id:"commawithstring",level:2},{value:"<code>serialCommaWith(String)</code>",id:"serialcommawithstring",level:2},{value:"<code>commaAnd</code>",id:"commaand",level:2},{value:"<code>serialCommaAnd</code>",id:"serialcommaand",level:2},{value:"<code>commaOr</code>",id:"commaor",level:2},{value:"<code>serialCommaOr</code>",id:"serialcommaor",level:2}],l={toc:c},d="wrapper";function b(e){let{components:n,...a}=e;return(0,r.kt)(d,(0,t.Z)({},l,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"import-strings-syntax"},"Import ",(0,r.kt)("inlineCode",{parentName:"h2"},"strings")," syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"import extras.strings.syntax.strings._\n")),(0,r.kt)("h2",{id:"commawithstring"},(0,r.kt)("inlineCode",{parentName:"h2"},"commaWith(String)")),(0,r.kt)("p",null,"An extension method for a ",(0,r.kt)("inlineCode",{parentName:"p"},"Seq[String]"),", providing a way to join the ",(0,r.kt)("inlineCode",{parentName:"p"},"String")," elements with a comma and a given\nconjunction."),(0,r.kt)("p",null,"It joins ",(0,r.kt)("inlineCode",{parentName:"p"},"String")," values with commas and uses the given conjunction before the last element."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'List.empty[String].commaWith("BLAH")\n// res0: String = ""\n\nList("").commaWith("BLAH")\n// res1: String = ""\n\nList("aaa").commaWith("BLAH")\n// res2: String = "aaa"\n\nList("aaa", "bbb").commaWith("BLAH")\n// res3: String = "aaa BLAH bbb"\n\nList("aaa", "bbb", "ccc").commaWith("BLAH")\n// res4: String = "aaa, bbb BLAH ccc"\n\nList("aaa", "bbb", "ccc", "ddd").commaWith("BLAH")\n// res5: String = "aaa, bbb, ccc BLAH ddd"\n')),(0,r.kt)("h2",{id:"serialcommawithstring"},(0,r.kt)("inlineCode",{parentName:"h2"},"serialCommaWith(String)")),(0,r.kt)("p",null,"An extension method for a ",(0,r.kt)("inlineCode",{parentName:"p"},"Seq[String]"),", providing a way to join the ",(0,r.kt)("inlineCode",{parentName:"p"},"String")," elements with a serial comma and a given\nconjunction."),(0,r.kt)("p",null,"It joins String values with commas and uses the given conjunction before the last element."),(0,r.kt)("p",null,"This method employs the serial comma (also known as the Oxford comma),\nwhich means it always inserts a comma before the conjunction unless there are only two elements."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'List.empty[String].serialCommaWith("BLAH")\n// res6: String = ""\n\nList("").serialCommaWith("BLAH")\n// res7: String = ""\n\nList("aaa").serialCommaWith("BLAH")\n// res8: String = "aaa"\n\nList("aaa", "bbb").serialCommaWith("BLAH")\n// res9: String = "aaa BLAH bbb"\n\nList("aaa", "bbb", "ccc").serialCommaWith("BLAH")\n// res10: String = "aaa, bbb, BLAH ccc"\n\nList("aaa", "bbb", "ccc", "ddd").serialCommaWith("BLAH")\n// res11: String = "aaa, bbb, ccc, BLAH ddd"\n')),(0,r.kt)("h2",{id:"commaand"},(0,r.kt)("inlineCode",{parentName:"h2"},"commaAnd")),(0,r.kt)("p",null,"Format ",(0,r.kt)("inlineCode",{parentName:"p"},"Seq[String]")," into a human-readable list using comma and the conjunction ",(0,r.kt)("inlineCode",{parentName:"p"},"and"),"."),(0,r.kt)("p",null,"It separates elements by commas and uses the term ",(0,r.kt)("inlineCode",{parentName:"p"},"and")," before the last element."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'List.empty[String].commaAnd\n// res12: String = ""\n\nList("").commaAnd\n// res13: String = ""\n\nList("aaa").commaAnd\n// res14: String = "aaa"\n\nList("aaa", "bbb").commaAnd\n// res15: String = "aaa and bbb"\n\nList("aaa", "bbb", "ccc").commaAnd\n// res16: String = "aaa, bbb and ccc"\n\nList("aaa", "bbb", "ccc", "ddd").commaAnd\n// res17: String = "aaa, bbb, ccc and ddd"\n')),(0,r.kt)("h2",{id:"serialcommaand"},(0,r.kt)("inlineCode",{parentName:"h2"},"serialCommaAnd")),(0,r.kt)("p",null,"Format ",(0,r.kt)("inlineCode",{parentName:"p"},"Seq[String]")," into a human-readable list using comma and the conjunction ",(0,r.kt)("inlineCode",{parentName:"p"},"and"),"."),(0,r.kt)("p",null,"It separates elements by commas and uses the term ",(0,r.kt)("inlineCode",{parentName:"p"},"and"),' before the last element following the "Oxford comma" style.  e.g.) ',(0,r.kt)("inlineCode",{parentName:"p"},'"aaa, bbb, and ccc"')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'List.empty[String].serialCommaAnd\n// res18: String = ""\n\nList("").serialCommaAnd\n// res19: String = ""\n\nList("aaa").serialCommaAnd\n// res20: String = "aaa"\n\nList("aaa", "bbb").serialCommaAnd\n// res21: String = "aaa and bbb"\n\nList("aaa", "bbb", "ccc").serialCommaAnd\n// res22: String = "aaa, bbb, and ccc"\n\nList("aaa", "bbb", "ccc", "ddd").serialCommaAnd\n// res23: String = "aaa, bbb, ccc, and ddd"\n')),(0,r.kt)("h2",{id:"commaor"},(0,r.kt)("inlineCode",{parentName:"h2"},"commaOr")),(0,r.kt)("p",null,"Format ",(0,r.kt)("inlineCode",{parentName:"p"},"Seq[String]")," into a human-readable list using comma and the conjunction ",(0,r.kt)("inlineCode",{parentName:"p"},"or"),"."),(0,r.kt)("p",null,"It separates elements by commas and uses the term ",(0,r.kt)("inlineCode",{parentName:"p"},"or")," before the last element."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'List.empty[String].commaOr\n// res24: String = ""\n\nList("").commaOr\n// res25: String = ""\n\nList("aaa").commaOr\n// res26: String = "aaa"\n\nList("aaa", "bbb").commaOr\n// res27: String = "aaa or bbb"\n\nList("aaa", "bbb", "ccc").commaOr\n// res28: String = "aaa, bbb or ccc"\n\nList("aaa", "bbb", "ccc", "ddd").commaOr\n// res29: String = "aaa, bbb, ccc or ddd"\n')),(0,r.kt)("h2",{id:"serialcommaor"},(0,r.kt)("inlineCode",{parentName:"h2"},"serialCommaOr")),(0,r.kt)("p",null,"Format ",(0,r.kt)("inlineCode",{parentName:"p"},"Seq[String]")," into a human-readable list using comma and the conjunction ",(0,r.kt)("inlineCode",{parentName:"p"},"or"),"."),(0,r.kt)("p",null,"It separates elements by commas and uses the term ",(0,r.kt)("inlineCode",{parentName:"p"},"or"),' before the last element following the "Oxford comma" style.  e.g.) ',(0,r.kt)("inlineCode",{parentName:"p"},'"aaa, bbb, or ccc"')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},'List.empty[String].serialCommaOr\n// res30: String = ""\n\nList("").serialCommaOr\n// res31: String = ""\n\nList("aaa").serialCommaOr\n// res32: String = "aaa"\n\nList("aaa", "bbb").serialCommaOr\n// res33: String = "aaa or bbb"\n\nList("aaa", "bbb", "ccc").serialCommaOr\n// res34: String = "aaa, bbb, or ccc"\n\nList("aaa", "bbb", "ccc", "ddd").serialCommaOr\n// res35: String = "aaa, bbb, ccc, or ddd"\n')))}b.isMDXComponent=!0}}]);