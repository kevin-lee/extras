"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9061],{3576:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"extras-reflects/syntax","title":"Reflects Syntax","description":"Deprecated - Please don\'t use this module.","source":"@site/../generated-docs/docs/extras-reflects/syntax.md","sourceDirName":"extras-reflects","slug":"/extras-reflects/syntax","permalink":"/docs/extras-reflects/syntax","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"id":"syntax","title":"Reflects Syntax"},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/docs/extras-reflects/"}}');var a=s(4848),r=s(8453);const l={sidebar_position:2,id:"syntax",title:"Reflects Syntax"},o=void 0,i={},c=[{value:"<code>reflects</code> syntax for <code>WeakTypeTag</code>",id:"reflects-syntax-for-weaktypetag",level:2},{value:"<code>value.nestedTypeName</code>",id:"valuenestedtypename",level:3},{value:"<code>WeakTypeTag[A].nestedTypeName</code>",id:"weaktypetaganestedtypename",level:3},{value:"Works for <code>@newtype</code>",id:"works-for-newtype",level:3},{value:"<code>reflects</code> syntax for <code>ClassTag</code>",id:"reflects-syntax-for-classtag",level:2},{value:"<code>value.nestedRuntimeClassName</code>",id:"valuenestedruntimeclassname",level:3},{value:"<code>ClassTag[A].nestedRuntimeClassName</code>",id:"classtaganestedruntimeclassname",level:3},{value:"Do not use for <code>@newtype</code>",id:"do-not-use-for-newtype",level:3},{value:"<code>reflects</code> syntax for <code>Class</code>",id:"reflects-syntax-for-class",level:2},{value:"<code>value.nestedClassName</code>",id:"valuenestedclassname",level:3},{value:"<code>Class[A].nestedClassName</code>",id:"classanestedclassname",level:3},{value:"Do not use for <code>@newtype</code>",id:"do-not-use-for-newtype-1",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.admonition,{title:"Warning!",type:"caution",children:(0,a.jsx)(n.p,{children:"Deprecated - Please don't use this module."})}),"\n",(0,a.jsxs)(n.h2,{id:"reflects-syntax-for-weaktypetag",children:[(0,a.jsx)(n.code,{children:"reflects"})," syntax for ",(0,a.jsx)(n.code,{children:"WeakTypeTag"})]}),"\n",(0,a.jsx)(n.h3,{id:"valuenestedtypename",children:(0,a.jsx)(n.code,{children:"value.nestedTypeName"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"import java.time._\n\nsealed trait Status\nobject Status {\n  final case class InProgress(startedAt: Instant) extends Status\n  case object Done extends Status\n  \n  def inProgress(startedAt: Instant): Status = InProgress(startedAt)\n  def done: Status = Done\n}\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import scala.reflect.runtime.universe._\nimport extras.reflects.syntax.tags._\n\ndef infoWithWeakTypeTag[A: WeakTypeTag](a: A): Unit =\n  println(\n    s"""value: $a\n       | type: ${weakTypeTag[A].nestedTypeName}\n       |""".stripMargin)\n\ninfoWithWeakTypeTag(Status.inProgress(Instant.now()))\n// value: InProgress(2025-08-19T15:28:12.635643Z)\n//  type: MdocApp0.Status\n// \ninfoWithWeakTypeTag(Status.InProgress(Instant.now()))\n// value: InProgress(2025-08-19T15:28:12.682416Z)\n//  type: Status.InProgress\n// \n\ninfoWithWeakTypeTag(Status.done)\n// value: Done\n//  type: MdocApp0.Status\n// \ninfoWithWeakTypeTag(Status.Done)\n// value: Done\n//  type: Status.Done\n//\n'})}),"\n",(0,a.jsx)(n.h3,{id:"weaktypetaganestedtypename",children:(0,a.jsx)(n.code,{children:"WeakTypeTag[A].nestedTypeName"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"import java.time._\n\nsealed trait Status\nobject Status {\n  final case class InProgress(startedAt: Instant) extends Status\n  case object Done extends Status\n  \n  def inProgress(startedAt: Instant): Status = InProgress(startedAt)\n  def done: Status = Done\n}\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import scala.reflect.runtime.universe._\nimport extras.reflects.syntax.tags._\n\ndef infoWithWeakTypeTag[A](implicit weakTypeTag: WeakTypeTag[A]): Unit =\n  println(\n    s"""type: ${weakTypeTag.nestedTypeName}\n       |""".stripMargin)\n\ninfoWithWeakTypeTag[Status.InProgress]\n// type: Status.InProgress\n// \ninfoWithWeakTypeTag[Status.Done.type]\n// type: Status.Done\n// \n\nprintln(weakTypeTag[Status.InProgress].nestedTypeName)\n// Status.InProgress\nprintln(weakTypeTag[Status.Done.type].nestedTypeName)\n// Status.Done\n'})}),"\n",(0,a.jsxs)(n.h3,{id:"works-for-newtype",children:["Works for ",(0,a.jsx)(n.code,{children:"@newtype"})]}),"\n",(0,a.jsxs)(n.admonition,{type:"info",children:[(0,a.jsxs)(n.mdxAdmonitionTitle,{children:["It works for ",(0,a.jsx)(n.code,{children:"newtype"})," as well."]}),(0,a.jsxs)(n.p,{children:["If you use ",(0,a.jsx)(n.a,{href:"https://github.com/estatico/scala-newtype",children:"newtype"})," and want to get the ",(0,a.jsx)(n.code,{children:"newtype"})," name, ",(0,a.jsx)(n.code,{children:"WeakTypeTag"})," syntax is what you should use since you can get the name of ",(0,a.jsx)(n.code,{children:"newtype"})," with it."]})]}),"\n",(0,a.jsxs)(n.p,{children:["An example showing that it works with ",(0,a.jsx)(n.code,{children:"@newtype"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"import io.estatico.newtype.macros.newtype\n\nobject Types {\n  @newtype case class Id(value: Long)\n  @newtype case class Username(value: String)\n}\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"import scala.reflect.runtime.universe._\nimport extras.reflects.syntax.tags._\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'def infoWithClassTag[A](a: A)(implicit weakTypeTag: WeakTypeTag[A]): Unit =\n  println(\n    s"""value: $a\n       | type: ${weakTypeTag.nestedTypeName}\n       |""".stripMargin)\n\nimport Types._\n\ninfoWithClassTag(Id(1L))\n// value: 1\n//  type: Types.Id\n// \ninfoWithClassTag(Username("someuser"))\n// value: someuser\n//  type: Types.Username\n// \n\nprintln(weakTypeTag[Id].nestedTypeName)\n// Types.Id\nprintln(weakTypeTag[Username].nestedTypeName)\n// Types.Username\n'})}),"\n",(0,a.jsxs)(n.h2,{id:"reflects-syntax-for-classtag",children:[(0,a.jsx)(n.code,{children:"reflects"})," syntax for ",(0,a.jsx)(n.code,{children:"ClassTag"})]}),"\n",(0,a.jsx)(n.h3,{id:"valuenestedruntimeclassname",children:(0,a.jsx)(n.code,{children:"value.nestedRuntimeClassName"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"import java.time._\n\nsealed trait Status\nobject Status {\n  final case class InProgress(startedAt: Instant) extends Status\n  case object Done extends Status\n  \n  def inProgress(startedAt: Instant): Status = InProgress(startedAt)\n  def done: Status = Done\n}\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import extras.reflects.syntax.tags._\n\ndef infoWithClassTag[A](a: A): Unit =\n  println(\n    s"""value: $a\n       | type: ${a.nestedRuntimeClassName}\n       |""".stripMargin)\n\ninfoWithClassTag(Status.inProgress(Instant.now()))\n// value: InProgress(2025-08-19T15:28:12.698042Z)\n//  type: Status.InProgress\n// \ninfoWithClassTag(Status.InProgress(Instant.now()))\n// value: InProgress(2025-08-19T15:28:12.700597Z)\n//  type: Status.InProgress\n// \n\ninfoWithClassTag(Status.done)\n// value: Done\n//  type: Status.Done\n// \ninfoWithClassTag(Status.Done)\n// value: Done\n//  type: Status.Done\n//\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"println(Status.inProgress(Instant.now()).nestedRuntimeClassName)\n// Status.InProgress\nprintln(Status.InProgress(Instant.now()).nestedRuntimeClassName)\n// Status.InProgress\n\nprintln(Status.done.nestedRuntimeClassName)\n// Status.Done\nprintln(Status.Done.nestedRuntimeClassName)\n// Status.Done\n"})}),"\n",(0,a.jsx)(n.h3,{id:"classtaganestedruntimeclassname",children:(0,a.jsx)(n.code,{children:"ClassTag[A].nestedRuntimeClassName"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"import java.time._\n\nsealed trait Status\nobject Status {\n  final case class InProgress(startedAt: Instant) extends Status\n  case object Done extends Status\n  \n  def inProgress(startedAt: Instant): Status = InProgress(startedAt)\n  def done: Status = Done\n}\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import scala.reflect.{classTag, ClassTag}\nimport extras.reflects.syntax.tags._\n\ndef infoWithClassTag[A](implicit classTag: ClassTag[A]): Unit =\n  println(\n    s"""type: ${classTag.nestedRuntimeClassName}\n       |""".stripMargin)\n\ninfoWithClassTag[Status.InProgress]\n// type: Status.InProgress\n// \ninfoWithClassTag[Status.Done.type]\n// type: Status.Done\n//\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"println(classTag[Status.InProgress].nestedRuntimeClassName)\n// Status.InProgress\nprintln(classTag[Status.Done.type].nestedRuntimeClassName)\n// Status.Done\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"do-not-use-for-newtype",children:["Do not use for ",(0,a.jsx)(n.code,{children:"@newtype"})]}),"\n",(0,a.jsxs)(n.admonition,{type:"caution",children:[(0,a.jsxs)(n.mdxAdmonitionTitle,{children:["Do not use it for ",(0,a.jsx)(n.code,{children:"newtype"}),"."]}),(0,a.jsxs)(n.p,{children:["If you use ",(0,a.jsx)(n.a,{href:"https://github.com/estatico/scala-newtype",children:"newtype"})," and want to get the ",(0,a.jsx)(n.code,{children:"newtype"})," name, ",(0,a.jsx)(n.code,{children:"ClassTag"})," syntax is not the one you should use since you can get only the actual type not ",(0,a.jsx)(n.code,{children:"newtype"}),". For ",(0,a.jsx)(n.code,{children:"@newtype"}),", please use '",(0,a.jsxs)(n.a,{href:"#works-for-newtype",children:[(0,a.jsx)(n.code,{children:"reflects"})," syntax for ",(0,a.jsx)(n.code,{children:"WeakTypeTag"})]}),"'."]})]}),"\n",(0,a.jsxs)(n.p,{children:["An example showing that it does not work with ",(0,a.jsx)(n.code,{children:"@newtype"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"import io.estatico.newtype.macros.newtype\n\nobject Types {\n  @newtype case class Id(value: Long)\n  @newtype case class Username(value: String)\n}\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import extras.reflects.syntax.tags._\n\ndef infoWithClassTag[A](a: A): Unit =\n  println(\n    s"""value: $a\n       | type: ${a.nestedRuntimeClassName}\n       |""".stripMargin)\n\nimport Types._\n\ninfoWithClassTag(Id(1L))\n// value: 1\n//  type: lang.Long\n// \ninfoWithClassTag(Username("someuser"))\n// value: someuser\n//  type: lang.String\n// \n\nprintln(Id(1L).nestedRuntimeClassName)\n// lang.Long\nprintln(Username("someuser").nestedRuntimeClassName)\n// lang.String\n'})}),"\n",(0,a.jsxs)(n.h2,{id:"reflects-syntax-for-class",children:[(0,a.jsx)(n.code,{children:"reflects"})," syntax for ",(0,a.jsx)(n.code,{children:"Class"})]}),"\n",(0,a.jsx)(n.h3,{id:"valuenestedclassname",children:(0,a.jsx)(n.code,{children:"value.nestedClassName"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"import java.time._\n\nsealed trait Status\nobject Status {\n  final case class InProgress(startedAt: Instant) extends Status\n  case object Done extends Status\n  \n  def inProgress(startedAt: Instant): Status = InProgress(startedAt)\n  def done: Status = Done\n}\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import extras.reflects.syntax.classes._\n\ndef infoWithClass[A](a: A): Unit =\n  println(\n    s"""value: $a\n       | type: ${a.nestedClassName}\n       |""".stripMargin)\n\ninfoWithClass(Status.inProgress(Instant.now()))\n// value: InProgress(2025-08-19T15:28:12.710471Z)\n//  type: Status.InProgress\n// \ninfoWithClass(Status.InProgress(Instant.now()))\n// value: InProgress(2025-08-19T15:28:12.711816Z)\n//  type: Status.InProgress\n// \n\ninfoWithClass(Status.done)\n// value: Done\n//  type: Status.Done\n// \ninfoWithClass(Status.Done)\n// value: Done\n//  type: Status.Done\n//\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"println(Status.inProgress(Instant.now()).nestedClassName)\n// Status.InProgress\nprintln(Status.InProgress(Instant.now()).nestedClassName)\n// Status.InProgress\n\nprintln(Status.done.nestedClassName)\n// Status.Done\nprintln(Status.Done.nestedClassName)\n// Status.Done\n"})}),"\n",(0,a.jsx)(n.h3,{id:"classanestedclassname",children:(0,a.jsx)(n.code,{children:"Class[A].nestedClassName"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"import java.time._\n\nsealed trait Status\nobject Status {\n  final case class InProgress(startedAt: Instant) extends Status\n  case object Done extends Status\n  \n  def inProgress(startedAt: Instant): Status = InProgress(startedAt)\n  def done: Status = Done\n}\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import extras.reflects.syntax.classes._\n\ndef infoWithClass[A](aClass: Class[A]): Unit =\n  println(\n    s"""type: ${aClass.nestedClassName}\n       |""".stripMargin)\n\ninfoWithClass(Status.InProgress.getClass)\n// type: Status.InProgress\n// \ninfoWithClass(Status.Done.getClass)\n// type: Status.Done\n//\n'})}),"\n",(0,a.jsxs)(n.h3,{id:"do-not-use-for-newtype-1",children:["Do not use for ",(0,a.jsx)(n.code,{children:"@newtype"})]}),"\n",(0,a.jsxs)(n.admonition,{type:"caution",children:[(0,a.jsxs)(n.mdxAdmonitionTitle,{children:["Do not use it for ",(0,a.jsx)(n.code,{children:"newtype"}),"."]}),(0,a.jsxs)(n.p,{children:["If you use ",(0,a.jsx)(n.a,{href:"https://github.com/estatico/scala-newtype",children:"newtype"})," and want to get the ",(0,a.jsx)(n.code,{children:"newtype"})," name, ",(0,a.jsx)(n.code,{children:"Class"})," syntax is not the one you should use since you can get only the actual type not ",(0,a.jsx)(n.code,{children:"newtype"}),". For ",(0,a.jsx)(n.code,{children:"@newtype"}),", please use '",(0,a.jsxs)(n.a,{href:"#works-for-newtype",children:[(0,a.jsx)(n.code,{children:"reflects"})," syntax for ",(0,a.jsx)(n.code,{children:"WeakTypeTag"})]}),"'."]})]}),"\n",(0,a.jsxs)(n.p,{children:["An example showing that it does not work with ",(0,a.jsx)(n.code,{children:"@newtype"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:"import io.estatico.newtype.macros.newtype\n\nobject Types {\n  @newtype case class Id(value: Long)\n  @newtype case class Username(value: String)\n}\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scala",children:'import extras.reflects.syntax.classes._\n\ndef infoWithClassTag[A](a: A): Unit =\n  println(\n    s"""value: $a\n       | type: ${a.nestedClassName}\n       |""".stripMargin)\n\nimport Types._\n\ninfoWithClassTag(Id(1L))\n// value: 1\n//  type: lang.Long\n// \ninfoWithClassTag(Username("someuser"))\n// value: someuser\n//  type: lang.String\n// \n\nprintln(Id(1L).nestedClassName)\n// lang.Long\nprintln(Username("someuser").nestedClassName)\n// lang.String\n'})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var t=s(6540);const a={},r=t.createContext(a);function l(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);