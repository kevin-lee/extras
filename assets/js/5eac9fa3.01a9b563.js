"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[594],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),u=a,y=m["".concat(l,".").concat(u)]||m[u]||f[u]||i;return n?r.createElement(y,o(o({ref:t},c),{},{components:n})):r.createElement(y,o({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9409:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:1,title:"syntax"},o=void 0,s={unversionedId:"extras-refinement/syntax/syntax",id:"extras-refinement/syntax/syntax",title:"syntax",description:"syntax",source:"@site/../generated-docs/target/mdoc/extras-refinement/syntax/syntax.md",sourceDirName:"extras-refinement/syntax",slug:"/extras-refinement/syntax/",permalink:"/docs/extras-refinement/syntax/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"syntax"},sidebar:"tutorialSidebar",previous:{title:"extras-refinement: Getting Started",permalink:"/docs/extras-refinement/"},next:{title:"refinement Syntax",permalink:"/docs/extras-refinement/syntax/refinement"}},l={},p=[{value:"<code>syntax</code>",id:"syntax",level:2}],c={toc:p};function f(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"syntax"},(0,a.kt)("inlineCode",{parentName:"h2"},"syntax")),(0,a.kt)("p",null,"Additional syntax for ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/estatico/scala-newtype"},"newtype")," and ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/fthomas/refined"},"refined")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/extras-refinement/syntax/refinement"},"refinement")," (for ",(0,a.kt)("inlineCode",{parentName:"li"},"newtype")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"refined"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/extras-refinement/syntax/string"},"string")," (for ",(0,a.kt)("inlineCode",{parentName:"li"},"String")," from ",(0,a.kt)("inlineCode",{parentName:"li"},"refined"),")")),(0,a.kt)("p",null,"If you want to import all syntaxes, use"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"import extras.refinement.syntax.all._\n")),(0,a.kt)("p",null,"which is equivalent to"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"import extras.refinement.syntax.refinement._\nimport extras.refinement.syntax.string._\n")))}f.isMDXComponent=!0}}]);