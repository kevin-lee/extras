"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[788],{3905:(t,n,e)=>{e.d(n,{Zo:()=>m,kt:()=>u});var r=e(7294);function i(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function a(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,r)}return e}function o(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?a(Object(e),!0).forEach((function(n){i(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):a(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function l(t,n){if(null==t)return{};var e,r,i=function(t,n){if(null==t)return{};var e,r,i={},a=Object.keys(t);for(r=0;r<a.length;r++)e=a[r],n.indexOf(e)>=0||(i[e]=t[e]);return i}(t,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)e=a[r],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(i[e]=t[e])}return i}var p=r.createContext({}),s=function(t){var n=r.useContext(p),e=n;return t&&(e="function"==typeof t?t(n):o(o({},n),t)),e},m=function(t){var n=s(t.components);return r.createElement(p.Provider,{value:n},t.children)},y="mdxType",g={inlineCode:"code",wrapper:function(t){var n=t.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(t,n){var e=t.components,i=t.mdxType,a=t.originalType,p=t.parentName,m=l(t,["components","mdxType","originalType","parentName"]),y=s(e),c=i,u=y["".concat(p,".").concat(c)]||y[c]||g[c]||a;return e?r.createElement(u,o(o({ref:n},m),{},{components:e})):r.createElement(u,o({ref:n},m))}));function u(t,n){var e=arguments,i=n&&n.mdxType;if("string"==typeof t||i){var a=e.length,o=new Array(a);o[0]=c;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=t,l[y]="string"==typeof t?t:i,o[1]=l;for(var s=2;s<a;s++)o[s]=e[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,e)}c.displayName="MDXCreateElement"},464:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>g,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=e(7462),i=(e(7294),e(3905));const a={sidebar_position:2,id:"string",title:"string Syntax"},o=void 0,l={unversionedId:"extras-refinement/syntax/string",id:"extras-refinement/syntax/string",title:"string Syntax",description:"EmptyString ++ EmptyString",source:"@site/../generated-docs/docs/extras-refinement/syntax/string.md",sourceDirName:"extras-refinement/syntax",slug:"/extras-refinement/syntax/string",permalink:"/docs/extras-refinement/syntax/string",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,id:"string",title:"string Syntax"},sidebar:"tutorialSidebar",previous:{title:"refinement Syntax",permalink:"/docs/extras-refinement/syntax/refinement"},next:{title:"Getting Started",permalink:"/docs/extras-type-info/"}},p={},s=[{value:"<code>EmptyString ++ EmptyString</code>",id:"emptystring--emptystring",level:2},{value:"Problem without <code>string</code> syntax",id:"problem-without-string-syntax",level:3},{value:"With <code>string</code> syntax",id:"with-string-syntax",level:3}],m={toc:s},y="wrapper";function g(t){let{components:n,...e}=t;return(0,i.kt)(y,(0,r.Z)({},m,e,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"emptystring--emptystring"},(0,i.kt)("inlineCode",{parentName:"h2"},"EmptyString ++ EmptyString")),(0,i.kt)("h3",{id:"problem-without-string-syntax"},"Problem without ",(0,i.kt)("inlineCode",{parentName:"h3"},"string")," syntax"),(0,i.kt)("p",null,"To concatenate two or more ",(0,i.kt)("inlineCode",{parentName:"p"},"NonEmptyString"),"s, you need to do something like this."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},'import eu.timepit.refined.types.string.NonEmptyString\n\nval a = NonEmptyString("aaa")\n// a: NonEmptyString = aaa\nval b = NonEmptyString("bbb")\n// b: NonEmptyString = bbb\nNonEmptyString.unsafeFrom(a.value + b.value)\n// res1: NonEmptyString = aaabbb\n\nval hello = NonEmptyString("Hello")\n// hello: NonEmptyString = Hello\nval space = NonEmptyString(" ")\n// space: NonEmptyString =  \nval world = NonEmptyString("world")\n// world: NonEmptyString = world\nNonEmptyString.unsafeFrom(hello.value + space.value + world.value)\n// res2: NonEmptyString = Hello world\n\nimport eu.timepit.refined.auto._\nNonEmptyString("A") + NonEmptyString("B") // This works but it returns String not NonEmptyString\n// res3: String = "AB"\n')),(0,i.kt)("h3",{id:"with-string-syntax"},"With ",(0,i.kt)("inlineCode",{parentName:"h3"},"string")," syntax"),(0,i.kt)("p",null,"If you use ",(0,i.kt)("inlineCode",{parentName:"p"},"string")," syntax from extras, you can just do"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},'import eu.timepit.refined.types.string.NonEmptyString\nimport extras.refinement.syntax.string._\n\nval a = NonEmptyString("aaa")\n// a: NonEmptyString = aaa\nval b = NonEmptyString("bbb")\n// b: NonEmptyString = bbb\na ++ b\n// res5: NonEmptyString = aaabbb\n\nval hello = NonEmptyString("Hello")\n// hello: NonEmptyString = Hello\nval space = NonEmptyString(" ")\n// space: NonEmptyString =  \nval world = NonEmptyString("world")\n// world: NonEmptyString = world\nhello ++ space ++ world\n// res6: NonEmptyString = Hello world\n')),(0,i.kt)("p",null,"More examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},'import eu.timepit.refined.types.string.NonEmptyString\nimport extras.refinement.syntax.string._\n\nNonEmptyString("abc") ++ NonEmptyString("def")\n// res8: NonEmptyString = abcdef\n\nval givenName = NonEmptyString("Kevin")\n// givenName: NonEmptyString = Kevin\nval surname = NonEmptyString("Lee")\n// surname: NonEmptyString = Lee\nval fullName = givenName ++ NonEmptyString(" ") ++ surname\n// fullName: NonEmptyString = Kevin Lee\n')))}g.isMDXComponent=!0}}]);