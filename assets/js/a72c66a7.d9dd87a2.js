"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7142],{2259:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>r});const o=JSON.parse('{"id":"extras-testing-tools/core","title":"Extras - Testing Tools Core","description":"StubTools.missing","source":"@site/../generated-docs/docs/extras-testing-tools/testing-tools.md","sourceDirName":"extras-testing-tools","slug":"/extras-testing-tools/core","permalink":"/docs/extras-testing-tools/core","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"sidebar_label":"Core","id":"core","title":"Extras - Testing Tools Core"},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/docs/extras-testing-tools/"},"next":{"title":"Cats","permalink":"/docs/extras-testing-tools/cats/"}}');var i=t(4848),s=t(8453);const a={sidebar_position:2,sidebar_label:"Core",id:"core",title:"Extras - Testing Tools Core"},l=void 0,c={},r=[{value:"<code>StubTools.missing</code>",id:"stubtoolsmissing",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"stubtoolsmissing",children:(0,i.jsx)(n.code,{children:"StubTools.missing"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"StubTools.missing"})," is a tool for a stub (a simple function for testing) so that you don't need to use mock frameworks."]}),"\n",(0,i.jsx)(n.admonition,{title:"NOTE",type:"info",children:(0,i.jsxs)(n.p,{children:["In most cases, you probably don't want to use ",(0,i.jsx)(n.code,{children:"StubTools.missing"})," directly. It is recommended to use ",(0,i.jsx)(n.a,{href:"cats",children:"StubToolsCats"})," or ",(0,i.jsx)(n.a,{href:"effectie",children:"StubToolsFx"})," instead."]})}),"\n",(0,i.jsx)(n.p,{children:"e.g.)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scala",children:'import cats.syntax.all._\nimport eu.timepit.refined.types.all._\nimport eu.timepit.refined.cats._\nimport eu.timepit.refined.auto._\nimport io.estatico.newtype.macros.newtype\nimport extras.testing.StubTools\n\nobject types {\n  @newtype case class Id(value: PosInt)\n  @newtype case class Name(value: NonEmptyString)\n}\nimport types._\n\ntrait MyService {\n  def findName(id: Id): Option[Name]\n}\n\nobject MyServiceStub {\n  def apply(f: => Option[Id => Option[Name]]): MyService = new MyService {\n    override def findName(id: Id): Option[Name] = f.fold[Option[Name]](throw StubTools.missing)(_(id))\n  }\n}\n\nclass Hello(myService: MyService) {\n  def hello(id: Id): String = {\n    myService.findName(id)\n    .fold(s"No name found for id ${id.value}") { name =>\n      s"Hello ${name.value}"\n    }\n  }\n}\n\nval expectedId = Id(1)\n// expectedId: Id = 1\nval expectedName = Name("Kevin")\n// expectedName: Name = Kevin\n\nval myService: MyService = MyServiceStub(((id: Id) =>\n  if (id.value === expectedId.value)\n    expectedName.some\n  else\n    none\n).some)\n// myService: MyService = repl.MdocSession$MdocApp0$MyServiceStub$$anon$1@8c31bc2\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scala",children:"val hello = new Hello(myService)\n// hello: Hello = repl.MdocSession$MdocApp0$Hello@71bab163\nprintln(hello.hello(Id(1)))\n// Hello Kevin\nprintln(hello.hello(Id(2)))\n// No name found for id 2\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scala",children:"/* If you don't expect Hello to use MyService.findName,\n * you can simply remove feeding the function for that operation\n * and StubTools let you know where it fails if Hello uses MySerivce.findName.\n */\nval myService2: MyService = MyServiceStub(none)\nval hello2 = new Hello(myService2)\nprintln(hello2.hello(Id(1)))\n// extras.testing.StubTools$MissingStubException: \n// >> Missing Stub implementation at\n// >>   repl.MdocSession$MdocApp0$MyServiceStub$$anon$1$$anonfun$findName$1.apply(testing-tools.md:45)\n// >>   ---\n// >>   Details:\n// >>   repl.MdocSession$MdocApp0$MyServiceStub$$anon$1$$anonfun$findName$1.apply(testing-tools.md:45)\n//        at repl.MdocSession$MdocApp0$MyServiceStub$$anon$1$$anonfun$findName$1.apply(testing-tools.md:45)\n//        at scala.Option.fold(Option.scala:263)\n//        at repl.MdocSession$MdocApp0$MyServiceStub$$anon$1.findName(testing-tools.md:45)\n//        at repl.MdocSession$MdocApp0$Hello.hello(testing-tools.md:52)\n//        at repl.MdocSession$MdocApp0$$anonfun$2.apply$mcV$sp(testing-tools.md:94)\n//        at repl.MdocSession$MdocApp0$$anonfun$2.apply(testing-tools.md:91)\n//        at repl.MdocSession$MdocApp0$$anonfun$2.apply(testing-tools.md:91)\n//        at mdoc.internal.document.DocumentBuilder$$doc$.crash(DocumentBuilder.scala:75)\n//        at repl.MdocSession$MdocApp0$.<clinit>(testing-tools.md:91)\n//        at repl.MdocSession$MdocApp.<init>(testing-tools.md:5)\n//        at repl.MdocSession$.app(testing-tools.md:3)\n//        at mdoc.internal.document.DocumentBuilder$$doc$.$anonfun$build$2(DocumentBuilder.scala:89)\n//        at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)\n//        at scala.util.DynamicVariable.withValue(DynamicVariable.scala:59)\n//        at scala.Console$.withErr(Console.scala:193)\n//        at mdoc.internal.document.DocumentBuilder$$doc$.$anonfun$build$1(DocumentBuilder.scala:89)\n//        at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)\n//        at scala.util.DynamicVariable.withValue(DynamicVariable.scala:59)\n//        at scala.Console$.withOut(Console.scala:164)\n//        at mdoc.internal.document.DocumentBuilder$$doc$.build(DocumentBuilder.scala:88)\n//        at mdoc.internal.markdown.MarkdownBuilder$.$anonfun$buildDocument$2(MarkdownBuilder.scala:48)\n//        at mdoc.internal.markdown.MarkdownBuilder$$anon$1.run(MarkdownBuilder.scala:105)\n// \n"})}),"\n",(0,i.jsxs)(n.admonition,{title:"NOTE",type:"caution",children:[(0,i.jsxs)(n.p,{children:["Why not just use mock framework for convenience? To answer that, please read ",(0,i.jsx)(n.a,{href:"https://xebia.com/blog/pitfalls-mocking-tests-how-to-avoid",children:"Pitfalls of Mocking in tests"})," from ",(0,i.jsx)(n.a,{href:"https://xebia.com",children:"Xebia Functional"})," (formerly known as 47 Degrees)"]}),(0,i.jsxs)(n.p,{children:["Besides what the blog tells you, mock frameworks often make you do bad practice like testing the implementation details with ",(0,i.jsx)(n.code,{children:"verify"}),"."]}),(0,i.jsxs)(n.p,{children:["There is also an issue when your mock is not correctly set. You may get a ",(0,i.jsx)(n.code,{children:"NullPointerException"})," for that, but it doesn't tell you where it's from and why you get it."]})]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var o=t(6540);const i={},s=o.createContext(i);function a(e){const n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);