"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[43],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>y});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function s(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?s(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},s=Object.keys(t);for(r=0;r<s.length;r++)n=s[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(r=0;r<s.length;r++)n=s[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var l=r.createContext({}),p=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},c=function(t){var e=p(t.components);return r.createElement(l.Provider,{value:e},t.children)},f="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,s=t.originalType,l=t.parentName,c=i(t,["components","mdxType","originalType","parentName"]),f=p(n),m=a,y=f["".concat(l,".").concat(m)]||f[m]||u[m]||s;return n?r.createElement(y,o(o({ref:e},c),{},{components:n})):r.createElement(y,o({ref:e},c))}));function y(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var s=n.length,o=new Array(s);o[0]=m;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=t,i[f]="string"==typeof t?t:a,o[1]=i;for(var p=2;p<s;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8068:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const s={sidebar_position:1,sidebar_label:"fs2-v3-text",id:"extras-fs2-v3-text",title:"Fs2 v3 text"},o=void 0,i={unversionedId:"extras-fs2/v3/extras-fs2-v3-text",id:"extras-fs2/v3/extras-fs2-v3-text",title:"Fs2 v3 text",description:"It's only for Fs2 v3 so if you use v2, please use extras-fs2-v2-text.",source:"@site/../generated-docs/docs/extras-fs2/v3/text.md",sourceDirName:"extras-fs2/v3",slug:"/extras-fs2/v3/extras-fs2-v3-text",permalink:"/docs/extras-fs2/v3/extras-fs2-v3-text",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"fs2-v3-text",id:"extras-fs2-v3-text",title:"Fs2 v3 text"},sidebar:"tutorialSidebar",previous:{title:"v3",permalink:"/docs/category/v3"},next:{title:"Getting Started",permalink:"/docs/extras-testing-tools/"}},l={},p=[{value:"StreamF, Byte.utf8String",id:"streamf-byteutf8string",level:2},{value:"utf8String for http4s",id:"utf8string-for-http4s",level:2}],c={toc:p},f="wrapper";function u(t){let{components:e,...n}=t;return(0,a.kt)(f,(0,r.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"It's only for Fs2 v3 so if you use v2, please use ",(0,a.kt)("a",{parentName:"p",href:"../v2/extras-fs2-v2-text"},"extras-fs2-v2-text"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'"io.kevinlee" %% "extras-fs2-v3-text" % "0.41.0"\n')),(0,a.kt)("h2",{id:"streamf-byteutf8string"},"Stream","[F, Byte]",".utf8String"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"Stream[F, Byte].utf8String // F[String]\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.effect._\nimport extras.fs2.text.syntax._\nimport fs2.Stream\n\nimport java.nio.charset.StandardCharsets\n\nimport cats.effect.unsafe.implicits.global\n\nStream[IO, Byte]("blah blah".getBytes(StandardCharsets.UTF_8).toList: _*)\n  .utf8String // IO[String]\n  .unsafeRunSync()\n// res1: String = "blah blah"\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.effect._\nimport fs2.Stream\n\nimport java.nio.charset.StandardCharsets\n\nimport cats.effect.unsafe.implicits.global\n\ndef toByteStream[F[*]](s: String): Stream[F, Byte] =\n  Stream[F, Byte](s.getBytes(StandardCharsets.UTF_8).toList: _*)\n\ndef bytesToString[F[*]: Sync](stream: Stream[F, Byte]): F[String] = {\n  import extras.fs2.text.syntax._\n  stream.utf8String\n}\n\nval s = "Lorem Ipsum is simply dummy text of the printing and typesetting industry."\n// s: String = "Lorem Ipsum is simply dummy text of the printing and typesetting industry."\nval byteStream = toByteStream[IO](s)\n// byteStream: Stream[IO, Byte] = Stream(..)\n\nbytesToString[IO](byteStream)\n  .unsafeRunSync()\n// res3: String = "Lorem Ipsum is simply dummy text of the printing and typesetting industry."\n')),(0,a.kt)("h2",{id:"utf8string-for-http4s"},"utf8String for http4s"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'import org.http4s.dsl.io._\nimport cats.effect.unsafe.implicits.global\n\nval response = Ok("Hello world!")\n// response: cats.effect.IO[org.http4s.Response[cats.effect.IO]] = Pure(\n//   value = (\n//      = Status(code = 200),\n//      = HttpVersion(major = 1, minor = 1),\n//      = Headers(Content-Type: text/plain; charset=UTF-8, Content-Length: 12),\n//      = Stream(..),\n//      = org.typelevel.vault.Vault@36862b6d\n//   )\n// )\nval responseToString = response\n  .flatMap { response =>\n    import extras.fs2.text.syntax._\n    response\n      .body\n      .utf8String\n  }\n// responseToString: cats.effect.IO[String] = FlatMap(\n//   ioe = Pure(\n//     value = (\n//        = Status(code = 200),\n//        = HttpVersion(major = 1, minor = 1),\n//        = Headers(Content-Type: text/plain; charset=UTF-8, Content-Length: 12),\n//        = Stream(..),\n//        = org.typelevel.vault.Vault@36862b6d\n// ...\nresponseToString.unsafeRunSync()\n// res5: String = "Hello world!"\n')))}u.isMDXComponent=!0}}]);