"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8641],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=a,h=u["".concat(c,".").concat(d)]||u[d]||f[d]||i;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4970:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:2,id:"eithert",title:"EitherT"},o=void 0,l={unversionedId:"extras-cats/eithert",id:"extras-cats/eithert",title:"EitherT",description:"Extension Methods for EitherT",source:"@site/../generated-docs/docs/extras-cats/eithert.md",sourceDirName:"extras-cats",slug:"/extras-cats/eithert",permalink:"/docs/extras-cats/eithert",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,id:"eithert",title:"EitherT"},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/extras-cats/"},next:{title:"OptionT",permalink:"/docs/extras-cats/optiont"}},c={},s=[{value:"Extension Methods for EitherT",id:"extension-methods-for-eithert",level:2},{value:"<code>eitherT</code> / <code>t</code> for <code>F[Either[A, B]]</code>",id:"eithert--t-for-feithera-b",level:3},{value:"<code>eitherT</code> / <code>t</code> for <code>Either[A, B]</code>",id:"eithert--t-for-eithera-b",level:3},{value:"<code>rightT</code> for <code>F[B]</code>",id:"rightt-for-fb",level:3},{value:"<code>leftT</code> for <code>F[A]</code>",id:"leftt-for-fa",level:3},{value:"Example",id:"example",level:2}],p={toc:s};function f(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"extension-methods-for-eithert"},"Extension Methods for EitherT"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"import extras.cats.syntax.either._\n")),(0,a.kt)("p",null,"or"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"import extras.cats.syntax.all._\n")),(0,a.kt)("h3",{id:"eithert--t-for-feithera-b"},(0,a.kt)("inlineCode",{parentName:"h3"},"eitherT")," / ",(0,a.kt)("inlineCode",{parentName:"h3"},"t")," for ",(0,a.kt)("inlineCode",{parentName:"h3"},"F[Either[A, B]]")),(0,a.kt)("p",null,"When you have ",(0,a.kt)("inlineCode",{parentName:"p"},"fab: F[Either[A, B]]"),", instead of ",(0,a.kt)("inlineCode",{parentName:"p"},"EitherT(fab)"),", you can simply do"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"fab.eitherT // EitherT[F, A, B]\n// or\nfab.t // EitherT[F, A, B]\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval fab = IO.pure(1.asRight[String])\n// fab: IO[Either[String, Int]] = Pure(a = Right(value = 1))\nfab.t\n// res1: cats.data.EitherT[IO, String, Int] = EitherT(\n//   value = Pure(a = Right(value = 1))\n// )\n\nval f = IO(println("Hello").asRight[String])\n// f: IO[Either[String, Unit]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\nf.t\n// res2: cats.data.EitherT[IO, String, Unit] = EitherT(\n//   value = Delay(\n//     thunk = <function0>,\n// ...\n')),(0,a.kt)("h3",{id:"eithert--t-for-eithera-b"},(0,a.kt)("inlineCode",{parentName:"h3"},"eitherT")," / ",(0,a.kt)("inlineCode",{parentName:"h3"},"t")," for ",(0,a.kt)("inlineCode",{parentName:"h3"},"Either[A, B]")),(0,a.kt)("p",null,"When you have ",(0,a.kt)("inlineCode",{parentName:"p"},"ab: Either[A, B]"),", instead of ",(0,a.kt)("inlineCode",{parentName:"p"},"EitherT.fromEither[F](ab)"),", you can simply do"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"ab.eitherT[F] // EitherT[F, A, B]\n// or\nab.t[F] // EitherT[F, A, B]\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval ab = 1.asRight[String]\n// ab: Either[String, Int] = Right(value = 1)\nab.t[IO]\n// res4: cats.data.EitherT[IO, String, Int] = EitherT(\n//   value = Pure(a = Right(value = 1))\n// )\n")),(0,a.kt)("h3",{id:"rightt-for-fb"},(0,a.kt)("inlineCode",{parentName:"h3"},"rightT")," for ",(0,a.kt)("inlineCode",{parentName:"h3"},"F[B]")),(0,a.kt)("p",null,"When you have ",(0,a.kt)("inlineCode",{parentName:"p"},"fb: F[B]"),", instead of ",(0,a.kt)("inlineCode",{parentName:"p"},"EitherT.right[A](fb)"),", you can simply do"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"fb.rightT[A] // EitherT[F, A, B]\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.effect._\n\nimport extras.cats.syntax.all._\n\nval fb = IO.pure(1)\n// fb: IO[Int] = Pure(a = 1)\nfb.rightT[String]\n// res6: cats.data.EitherT[IO, String, Int] = EitherT(\n//   value = Map(\n//     source = Pure(a = 1),\n// ...\n\nval f = IO(println("Hello"))\n// f: IO[Unit] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\nf.rightT[String]\n// res7: cats.data.EitherT[IO, String, Unit] = EitherT(\n//   value = Map(\n//     source = Delay(\n// ...\n')),(0,a.kt)("h3",{id:"leftt-for-fa"},(0,a.kt)("inlineCode",{parentName:"h3"},"leftT")," for ",(0,a.kt)("inlineCode",{parentName:"h3"},"F[A]")),(0,a.kt)("p",null,"When you have ",(0,a.kt)("inlineCode",{parentName:"p"},"fa: F[A]"),", instead of ",(0,a.kt)("inlineCode",{parentName:"p"},"EitherT.left[B](fa)"),", you can simply do"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"fa.leftT[B] // EitherT[F, A, B]\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.effect._\n\nimport extras.cats.syntax.all._\n\nval fa = IO.pure("ERROR!!!")\n// fa: IO[String] = Pure(a = "ERROR!!!")\nfa.leftT[Int]\n// res9: cats.data.EitherT[IO, String, Int] = EitherT(\n//   value = Map(\n//     source = Pure(a = "ERROR!!!"),\n// ...\n\nval f = IO(println("ERROR!!!"))\n// f: IO[Unit] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n// ...\nf.leftT[Int]\n// res10: cats.data.EitherT[IO, Unit, Int] = EitherT(\n//   value = Map(\n//     source = Delay(\n// ...\n')),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nfinal case class MyError(message: String)\n\ndef foo[F[_]: Sync](n: Int): F[Int] = Sync[F].pure(n * 2)\n\ndef bar[F[_]: Sync](n: Int): F[Either[MyError, Int]] =\n  if (n < 0)\n    Sync[F].pure(MyError(s"n cannot be a negative number. [n: $n]").asLeft)\n  else\n    Sync[F].pure((n + 100).asRight)\n\ndef divide[F[_]: Sync](a: Int, b: Int): F[Either[MyError, Int]] =\n  if (b == 0)\n    MyError(s"You can divide number by 0. [a: $a, b: $b]").asLeft.pure[F]\n  else\n    Sync[F].delay((a / b).asRight)\n\ndef run[F[_]: Sync](): F[Either[MyError, Int]] = (for {\n  a <- foo(123).rightT\n  b <- 2.rightTF[F, MyError]\n  c <- bar(b).eitherT\n  d <- divide(a, c).t\n} yield d).value\n\nprintln(run[IO]().unsafeRunSync())\n// Right(2)\n')))}f.isMDXComponent=!0}}]);