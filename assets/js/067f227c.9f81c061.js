"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7498],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>u});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),p=l(n),g=a,u=p["".concat(c,".").concat(g)]||p[g]||d[g]||i;return n?r.createElement(u,s(s({ref:t},m),{},{components:n})):r.createElement(u,s({ref:t},m))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=g;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[p]="string"==typeof e?e:a,s[1]=o;for(var l=2;l<i;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},5851:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:2,id:"strings",title:"strings syntax"},s=void 0,o={unversionedId:"extras-string/strings",id:"extras-string/strings",title:"strings syntax",description:"Import strings syntax",source:"@site/../generated-docs/docs/extras-string/strings.md",sourceDirName:"extras-string",slug:"/extras-string/strings",permalink:"/docs/extras-string/strings",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,id:"strings",title:"strings syntax"},sidebar:"tutorialSidebar",previous:{title:"numeric syntax",permalink:"/docs/extras-string/numeric"},next:{title:"Getting Started",permalink:"/docs/extras-render/"}},c={},l=[{value:"Import <code>strings</code> syntax",id:"import-strings-syntax",level:2},{value:"<code>commaWith(String)</code>",id:"commawithstring",level:2},{value:"<code>serialCommaWith(String)</code>",id:"serialcommawithstring",level:2}],m={toc:l},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"import-strings-syntax"},"Import ",(0,a.kt)("inlineCode",{parentName:"h2"},"strings")," syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"import extras.strings.syntax.strings._\n")),(0,a.kt)("h2",{id:"commawithstring"},(0,a.kt)("inlineCode",{parentName:"h2"},"commaWith(String)")),(0,a.kt)("p",null,"An extension method for a ",(0,a.kt)("inlineCode",{parentName:"p"},"Seq[String]"),", providing a way to join the ",(0,a.kt)("inlineCode",{parentName:"p"},"String")," elements with a comma and a given conjunction."),(0,a.kt)("p",null,"It joins ",(0,a.kt)("inlineCode",{parentName:"p"},"String")," values with commas and uses the given conjunction before the last element."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'List.empty[String].commaWith("BLAH")\n// res0: String = ""\n\nList("").commaWith("BLAH")\n// res1: String = ""\n\nList("aaa").commaWith("BLAH")\n// res2: String = "aaa"\n\nList("aaa", "bbb").commaWith("BLAH")\n// res3: String = "aaa BLAH bbb"\n\nList("aaa", "bbb", "ccc").commaWith("BLAH")\n// res4: String = "aaa, bbb BLAH ccc"\n\nList("aaa", "bbb", "ccc", "ddd").commaWith("BLAH")\n// res5: String = "aaa, bbb, ccc BLAH ddd"\n')),(0,a.kt)("h2",{id:"serialcommawithstring"},(0,a.kt)("inlineCode",{parentName:"h2"},"serialCommaWith(String)")),(0,a.kt)("p",null,"An extension method for a ",(0,a.kt)("inlineCode",{parentName:"p"},"Seq[String]"),", providing a way to join the ",(0,a.kt)("inlineCode",{parentName:"p"},"String")," elements with a serial comma and a given conjunction."),(0,a.kt)("p",null,"It joins String values with commas and uses the given conjunction before the last element."),(0,a.kt)("p",null,"This method employs the serial comma (also known as the Oxford comma),\nwhich means it always inserts a comma before the conjunction unless there are only two elements."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'List.empty[String].serialCommaWith("BLAH")\n// res6: String = ""\n\nList("").serialCommaWith("BLAH")\n// res7: String = ""\n\nList("aaa").serialCommaWith("BLAH")\n// res8: String = "aaa"\n\nList("aaa", "bbb").serialCommaWith("BLAH")\n// res9: String = "aaa BLAH bbb"\n\nList("aaa", "bbb", "ccc").serialCommaWith("BLAH")\n// res10: String = "aaa, bbb, BLAH ccc"\n\nList("aaa", "bbb", "ccc", "ddd").serialCommaWith("BLAH")\n// res11: String = "aaa, bbb, ccc, BLAH ddd"\n')))}d.isMDXComponent=!0}}]);