"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[78],{3905:(n,a,e)=>{e.d(a,{Zo:()=>p,kt:()=>m});var t=e(7294);function o(n,a,e){return a in n?Object.defineProperty(n,a,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[a]=e,n}function c(n,a){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(n,a).enumerable}))),e.push.apply(e,t)}return e}function i(n){for(var a=1;a<arguments.length;a++){var e=null!=arguments[a]?arguments[a]:{};a%2?c(Object(e),!0).forEach((function(a){o(n,a,e[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):c(Object(e)).forEach((function(a){Object.defineProperty(n,a,Object.getOwnPropertyDescriptor(e,a))}))}return n}function l(n,a){if(null==n)return{};var e,t,o=function(n,a){if(null==n)return{};var e,t,o={},c=Object.keys(n);for(t=0;t<c.length;t++)e=c[t],a.indexOf(e)>=0||(o[e]=n[e]);return o}(n,a);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(n);for(t=0;t<c.length;t++)e=c[t],a.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(o[e]=n[e])}return o}var r=t.createContext({}),s=function(n){var a=t.useContext(r),e=a;return n&&(e="function"==typeof n?n(a):i(i({},a),n)),e},p=function(n){var a=s(n.components);return t.createElement(r.Provider,{value:a},n.children)},d={inlineCode:"code",wrapper:function(n){var a=n.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(n,a){var e=n.components,o=n.mdxType,c=n.originalType,r=n.parentName,p=l(n,["components","mdxType","originalType","parentName"]),u=s(e),m=o,$=u["".concat(r,".").concat(m)]||u[m]||d[m]||c;return e?t.createElement($,i(i({ref:a},p),{},{components:e})):t.createElement($,i({ref:a},p))}));function m(n,a){var e=arguments,o=a&&a.mdxType;if("string"==typeof n||o){var c=e.length,i=new Array(c);i[0]=u;var l={};for(var r in a)hasOwnProperty.call(a,r)&&(l[r]=a[r]);l.originalType=n,l.mdxType="string"==typeof n?n:o,i[1]=l;for(var s=2;s<c;s++)i[s]=e[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,e)}u.displayName="MDXCreateElement"},7305:(n,a,e)=>{e.r(a),e.d(a,{assets:()=>r,contentTitle:()=>i,default:()=>d,frontMatter:()=>c,metadata:()=>l,toc:()=>s});var t=e(7462),o=(e(7294),e(3905));const c={sidebar_position:3,id:"optiont",title:"OptionT"},i=void 0,l={unversionedId:"extras-cats/optiont",id:"extras-cats/optiont",title:"OptionT",description:"Extension Methods for OptionT",source:"@site/../generated-docs/target/mdoc/extras-cats/optiont.md",sourceDirName:"extras-cats",slug:"/extras-cats/optiont",permalink:"/docs/extras-cats/optiont",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,id:"optiont",title:"OptionT"},sidebar:"tutorialSidebar",previous:{title:"EitherT",permalink:"/docs/extras-cats/eithert"},next:{title:"extras-hedgehog-cats-effect3: Getting Started",permalink:"/docs/extras-hedgehog-cats-effect3/"}},r={},s=[{value:"Extension Methods for OptionT",id:"extension-methods-for-optiont",level:2},{value:"<code>optionT</code> / <code>t</code> for <code>F[Option[A]]</code>",id:"optiont--t-for-foptiona",level:3},{value:"<code>optionT</code> / <code>t</code> for <code>Option[A]</code>",id:"optiont--t-for-optiona",level:3},{value:"<code>someT</code> for <code>F[A]</code>",id:"somet-for-fa",level:3},{value:"<code>someTF</code> for <code>A</code>",id:"sometf-for-a",level:3},{value:"Example",id:"example",level:2}],p={toc:s};function d(n){let{components:a,...e}=n;return(0,o.kt)("wrapper",(0,t.Z)({},p,e,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"extension-methods-for-optiont"},"Extension Methods for OptionT"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"import extras.cats.syntax.option._\n")),(0,o.kt)("p",null,"or"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"import extras.cats.syntax.all._\n")),(0,o.kt)("h3",{id:"optiont--t-for-foptiona"},(0,o.kt)("inlineCode",{parentName:"h3"},"optionT")," / ",(0,o.kt)("inlineCode",{parentName:"h3"},"t")," for ",(0,o.kt)("inlineCode",{parentName:"h3"},"F[Option[A]]")),(0,o.kt)("p",null,"When you have ",(0,o.kt)("inlineCode",{parentName:"p"},"foa: F[Option[A]]"),", instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"OptionT(foa)"),", you can simply do"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"foa.optionT // OptionT[F, A]\n// or\nfoa.t // OptionT[F, A]\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval foa = IO.pure(1.some)\n// foa: IO[Option[Int]] = Pure(a = Some(value = 1))\nfoa.t\n// res1: cats.data.OptionT[IO, Int] = OptionT(\n//   value = Pure(a = Some(value = 1))\n// )\n\nval f = IO(println("Hello").some)\n// f: IO[Option[Unit]] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n//     stackTrace = List(\n//       cats.effect.internals.IOTracing$.buildFrame(IOTracing.scala:48),\n//       cats.effect.internals.IOTracing$.buildCachedFrame(IOTracing.scala:39),\n//       cats.effect.internals.IOTracing$.cached(IOTracing.scala:34),\n//       cats.effect.IO$.delay(IO.scala:1176),\n//       cats.effect.IO$.apply(IO.scala:1144),\n//       repl.MdocSession$App0$.<clinit>(optiont.md:26),\n//       repl.MdocSession$App.<init>(optiont.md:5),\n//       repl.MdocSession$.app(optiont.md:3),\n//       mdoc.internal.document.DocumentBuilder$$doc$.$anonfun$build$2(DocumentBuilder.scala:89),\n//       scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18),\n//       scala.util.DynamicVariable.withValue(DynamicVariable.scala:59),\n//       scala.Console$.withErr(Console.scala:193),\n//       mdoc.internal.document.DocumentBuilder$$doc$.$anonfun$build$1(DocumentBuilder.scala:89),\n//       scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18),\n//       scala.util.DynamicVariable.withValue(DynamicVariable.scala:59),\n//       scala.Console$.withOut(Console.scala:164),\n//       mdoc.internal.document.DocumentBuilder$$doc$.build(DocumentBuilder.scala:88),\n//       mdoc.internal.markdown.MarkdownBuilder$.$anonfun$buildDocument$2(MarkdownBuilder.scala:47),\n//       mdoc.internal.markdown.MarkdownBuilder$$anon$1.run(MarkdownBuilder.scala:104)\n//     )\n//   )\n// )\nf.t\n// res2: cats.data.OptionT[IO, Unit] = OptionT(\n//   value = Delay(\n//     thunk = <function0>,\n//     trace = StackTrace(\n//       stackTrace = List(\n//         cats.effect.internals.IOTracing$.buildFrame(IOTracing.scala:48),\n//         cats.effect.internals.IOTracing$.buildCachedFrame(IOTracing.scala:39),\n//         cats.effect.internals.IOTracing$.cached(IOTracing.scala:34),\n//         cats.effect.IO$.delay(IO.scala:1176),\n//         cats.effect.IO$.apply(IO.scala:1144),\n//         repl.MdocSession$App0$.<clinit>(optiont.md:26),\n//         repl.MdocSession$App.<init>(optiont.md:5),\n//         repl.MdocSession$.app(optiont.md:3),\n//         mdoc.internal.document.DocumentBuilder$$doc$.$anonfun$build$2(DocumentBuilder.scala:89),\n//         scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18),\n//         scala.util.DynamicVariable.withValue(DynamicVariable.scala:59),\n//         scala.Console$.withErr(Console.scala:193),\n//         mdoc.internal.document.DocumentBuilder$$doc$.$anonfun$build$1(DocumentBuilder.scala:89),\n//         scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18),\n//         scala.util.DynamicVariable.withValue(DynamicVariable.scala:59),\n//         scala.Console$.withOut(Console.scala:164),\n//         mdoc.internal.document.DocumentBuilder$$doc$.build(DocumentBuilder.scala:88),\n//         mdoc.internal.markdown.MarkdownBuilder$.$anonfun$buildDocument$2(MarkdownBuilder.scala:47),\n//         mdoc.internal.markdown.MarkdownBuilder$$anon$1.run(MarkdownBuilder.scala:104)\n//       )\n//     )\n//   )\n// )\n')),(0,o.kt)("h3",{id:"optiont--t-for-optiona"},(0,o.kt)("inlineCode",{parentName:"h3"},"optionT")," / ",(0,o.kt)("inlineCode",{parentName:"h3"},"t")," for ",(0,o.kt)("inlineCode",{parentName:"h3"},"Option[A]")),(0,o.kt)("p",null,"When you have ",(0,o.kt)("inlineCode",{parentName:"p"},"oa: Option[A]"),", instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"OptionT.fromOption[F](oa)"),", you can simply do"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"oa.optionT[F] // OptionT[F, A]\n// or\noa.t[F] // OptionT[F, A]\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval oa = 1.some\n// oa: Option[Int] = Some(value = 1)\noa.t[IO]\n// res4: cats.data.OptionT[IO, Int] = OptionT(\n//   value = Pure(a = Some(value = 1))\n// )\n")),(0,o.kt)("h3",{id:"somet-for-fa"},(0,o.kt)("inlineCode",{parentName:"h3"},"someT")," for ",(0,o.kt)("inlineCode",{parentName:"h3"},"F[A]")),(0,o.kt)("p",null,"When you have ",(0,o.kt)("inlineCode",{parentName:"p"},"fa: F[A]"),", instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"OptionT.liftF(fa)"),", you can simply do"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"fa.someT // OptionT[F, A]\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import cats.effect._\n\nimport extras.cats.syntax.all._\n\nval fa = IO.pure(1)\n// fa: IO[Int] = Pure(a = 1)\nfa.someT\n// res6: cats.data.OptionT[IO, Int] = OptionT(\n//   value = Map(\n//     source = Pure(a = 1),\n//     f = cats.data.OptionT$$$Lambda$8230/0x0000000102399040@c4ca7eb,\n//     trace = StackTrace(\n//       stackTrace = List(\n//         cats.effect.internals.IOTracing$.buildFrame(IOTracing.scala:48),\n//         cats.effect.internals.IOTracing$.buildCachedFrame(IOTracing.scala:39),\n//         cats.effect.internals.IOTracing$.cached(IOTracing.scala:34),\n//         cats.effect.IO.map(IO.scala:106),\n//         cats.effect.IOLowPriorityInstances$IOEffect.map(IO.scala:872),\n//         cats.effect.IOLowPriorityInstances$IOEffect.map(IO.scala:865),\n//         cats.data.OptionT$.liftF(OptionT.scala:249),\n//         extras.cats.syntax.OptionSyntax$OptionTFAOps$.someT$extension(OptionSyntax.scala:37),\n//         repl.MdocSession$App5$.<clinit>(optiont.md:68),\n//         repl.MdocSession$App3$.<clinit>(optiont.md:53),\n//         repl.MdocSession$App0$.<clinit>(optiont.md:32),\n//         repl.MdocSession$App.<init>(optiont.md:5),\n//         repl.MdocSession$.app(optiont.md:3),\n//         mdoc.internal.document.DocumentBuilder$$doc$.$anonfun$build$2(DocumentBuilder.scala:89),\n//         scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18),\n//         scala.util.DynamicVariable.withValue(DynamicVariable.scala:59),\n//         scala.Console$.withErr(Console.scala:193),\n//         mdoc.internal.document.DocumentBuilder$$doc$.$anonfun$build$1(DocumentBuilder.scala:89),\n//         scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18),\n//         scala.util.DynamicVariable.withValue(DynamicVariable.scala:59),\n//         scala.Console$.withOut(Console.scala:164),\n//         mdoc.internal.document.DocumentBuilder$$doc$.build(DocumentBuilder.scala:88),\n//         mdoc.internal.markdown.MarkdownBuilder$.$anonfun$buildDocument$2(MarkdownBuilder.scala:47),\n//         mdoc.internal.markdown.MarkdownBuilder$$anon$1.run(MarkdownBuilder.scala:104)\n//       )\n//     )\n//   )\n// )\n\nval f = IO(println("Hello"))\n// f: IO[Unit] = Delay(\n//   thunk = <function0>,\n//   trace = StackTrace(\n//     stackTrace = List(\n//       cats.effect.internals.IOTracing$.buildFrame(IOTracing.scala:48),\n//       cats.effect.internals.IOTracing$.buildCachedFrame(IOTracing.scala:39),\n//       cats.effect.internals.IOTracing$.cached(IOTracing.scala:34),\n//       cats.effect.IO$.delay(IO.scala:1176),\n//       cats.effect.IO$.apply(IO.scala:1144),\n//       repl.MdocSession$App5$.<clinit>(optiont.md:71),\n//       repl.MdocSession$App3$.<clinit>(optiont.md:53),\n//       repl.MdocSession$App0$.<clinit>(optiont.md:32),\n//       repl.MdocSession$App.<init>(optiont.md:5),\n//       repl.MdocSession$.app(optiont.md:3),\n//       mdoc.internal.document.DocumentBuilder$$doc$.$anonfun$build$2(DocumentBuilder.scala:89),\n//       scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18),\n//       scala.util.DynamicVariable.withValue(DynamicVariable.scala:59),\n//       scala.Console$.withErr(Console.scala:193),\n//       mdoc.internal.document.DocumentBuilder$$doc$.$anonfun$build$1(DocumentBuilder.scala:89),\n//       scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18),\n//       scala.util.DynamicVariable.withValue(DynamicVariable.scala:59),\n//       scala.Console$.withOut(Console.scala:164),\n//       mdoc.internal.document.DocumentBuilder$$doc$.build(DocumentBuilder.scala:88),\n//       mdoc.internal.markdown.MarkdownBuilder$.$anonfun$buildDocument$2(MarkdownBuilder.scala:47),\n//       mdoc.internal.markdown.MarkdownBuilder$$anon$1.run(MarkdownBuilder.scala:104)\n//     )\n//   )\n// )\nf.someT\n// res7: cats.data.OptionT[IO, Unit] = OptionT(\n//   value = Map(\n//     source = Delay(\n//       thunk = <function0>,\n//       trace = StackTrace(\n//         stackTrace = List(\n//           cats.effect.internals.IOTracing$.buildFrame(IOTracing.scala:48),\n//           cats.effect.internals.IOTracing$.buildCachedFrame(IOTracing.scala:39),\n//           cats.effect.internals.IOTracing$.cached(IOTracing.scala:34),\n//           cats.effect.IO$.delay(IO.scala:1176),\n//           cats.effect.IO$.apply(IO.scala:1144),\n//           repl.MdocSession$App5$.<clinit>(optiont.md:71),\n//           repl.MdocSession$App3$.<clinit>(optiont.md:53),\n//           repl.MdocSession$App0$.<clinit>(optiont.md:32),\n//           repl.MdocSession$App.<init>(optiont.md:5),\n//           repl.MdocSession$.app(optiont.md:3),\n//           mdoc.internal.document.DocumentBuilder$$doc$.$anonfun$build$2(DocumentBuilder.scala:89),\n//           scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18),\n//           scala.util.DynamicVariable.withValue(DynamicVariable.scala:59),\n//           scala.Console$.withErr(Console.scala:193),\n//           mdoc.internal.document.DocumentBuilder$$doc$.$anonfun$build$1(DocumentBuilder.scala:89),\n//           scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18),\n//           scala.util.DynamicVariable.withValue(DynamicVariable.scala:59),\n//           scala.Console$.withOut(Console.scala:164),\n//           mdoc.internal.document.DocumentBuilder$$doc$.build(DocumentBuilder.scala:88),\n//           mdoc.internal.markdown.MarkdownBuilder$.$anonfun$buildDocument$2(MarkdownBuilder.scala:47),\n//           mdoc.internal.markdown.MarkdownBuilder$$anon$1.run(MarkdownBuilder.scala:104)\n//         )\n//       )\n//     ),\n//     f = cats.data.OptionT$$$Lambda$8230/0x0000000102399040@c4ca7eb,\n//     trace = StackTrace(\n//       stackTrace = List(\n//         cats.effect.internals.IOTracing$.buildFrame(IOTracing.scala:48),\n//         cats.effect.internals.IOTracing$.buildCachedFrame(IOTracing.scala:39),\n//         cats.effect.internals.IOTracing$.cached(IOTracing.scala:34),\n//         cats.effect.IO.map(IO.scala:106),\n//         cats.effect.IOLowPriorityInstances$IOEffect.map(IO.scala:872),\n//         cats.effect.IOLowPriorityInstances$IOEffect.map(IO.scala:865),\n//         cats.data.OptionT$.liftF(OptionT.scala:249),\n//         extras.cats.syntax.OptionSyntax$OptionTFAOps$.someT$extension(OptionSyntax.scala:37),\n// ...\n')),(0,o.kt)("h3",{id:"sometf-for-a"},(0,o.kt)("inlineCode",{parentName:"h3"},"someTF")," for ",(0,o.kt)("inlineCode",{parentName:"h3"},"A")),(0,o.kt)("p",null,"When you have ",(0,o.kt)("inlineCode",{parentName:"p"},"a: A"),", instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"OptionT.some(a)"),", you can simply do"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"a.someTF[F] // OptionT[F, A]\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.effect._\n\nimport extras.cats.syntax.all._\n\nval a = 1\n// a: Int = 1\na.someTF[IO]\n// res9: cats.data.OptionT[IO, Int] = OptionT(\n//   value = Pure(a = Some(value = 1))\n// )\n")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nfinal case class MyError(message: String)\n\ndef foo[F[_]: Sync](n: Int): F[Int] = Sync[F].pure(n * 2)\n\ndef bar[F[_]: Sync](n: Int): F[Option[Int]] =\n  if (n < 0)\n    Sync[F].pure(none[Int])\n  else\n    Sync[F].pure((n + 100).some)\n\ndef divide[F[_]: Sync](a: Int, b: Int): F[Option[Int]] =\n  if (b == 0)\n    none[Int].pure[F]\n  else\n    Sync[F].delay((a / b).some)\n\ndef run[F[_]: Sync](): F[Option[Int]] = (for {\n  a <- foo(123).someT\n  b <- 2.someTF[F]\n  c <- bar(b).optionT\n  d <- divide(a, b).t\n} yield d).value\n\nprintln(run[IO]().unsafeRunSync())\n// Some(123)\n")))}d.isMDXComponent=!0}}]);