"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4850],{3905:(e,n,a)=>{a.d(n,{Zo:()=>c,kt:()=>d});var t=a(7294);function l(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function r(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){l(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,t,l=function(e,n){if(null==e)return{};var a,t,l={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(l[a]=e[a]);return l}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=t.createContext({}),s=function(e){var n=t.useContext(p),a=n;return e&&(a="function"==typeof e?e(n):r(r({},n),e)),a},c=function(e){var n=s(e.components);return t.createElement(p.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},f=t.forwardRef((function(e,n){var a=e.components,l=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(a),f=l,d=u["".concat(p,".").concat(f)]||u[f]||m[f]||o;return a?t.createElement(d,r(r({ref:n},c),{},{components:a})):t.createElement(d,r({ref:n},c))}));function d(e,n){var a=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var o=a.length,r=new Array(o);r[0]=f;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[u]="string"==typeof e?e:l,r[1]=i;for(var s=2;s<o;s++)r[s]=a[s];return t.createElement.apply(null,r)}return t.createElement.apply(null,a)}f.displayName="MDXCreateElement"},9455:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>p,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var t=a(7462),l=(a(7294),a(3905));const o={sidebar_position:5,id:"f-option-a",title:"F[Option[A]]"},r=void 0,i={unversionedId:"extras-cats/f-option-a",id:"extras-cats/f-option-a",title:"F[Option[A]]",description:"Extension Methods for F[Option[A]]",source:"@site/../generated-docs/docs/extras-cats/f-option-a.md",sourceDirName:"extras-cats",slug:"/extras-cats/f-option-a",permalink:"/docs/extras-cats/f-option-a",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,id:"f-option-a",title:"F[Option[A]]"},sidebar:"tutorialSidebar",previous:{title:"OptionT",permalink:"/docs/extras-cats/optiont"},next:{title:"Getting Started",permalink:"/docs/extras-circe/"}},p={},s=[{value:"Extension Methods for <code>F[Option[A]]</code>",id:"extension-methods-for-foptiona",level:2},{value:"Change Value",id:"change-value",level:2},{value:"<code>innerMap</code>",id:"innermap",level:3},{value:"Example",id:"example",level:4},{value:"<code>innerFlatMap</code>",id:"innerflatmap",level:3},{value:"Example",id:"example-1",level:4},{value:"<code>innerFlatMapF</code>",id:"innerflatmapf",level:3},{value:"Example",id:"example-2",level:4},{value:"Get Value",id:"get-value",level:2},{value:"<code>innerGetOrElse</code>",id:"innergetorelse",level:3},{value:"Example",id:"example-3",level:4},{value:"<code>innerGetOrElseF</code>",id:"innergetorelsef",level:3},{value:"Example",id:"example-4",level:4},{value:"<code>innerFold</code>",id:"innerfold",level:3},{value:"Example",id:"example-5",level:4},{value:"<code>innerFoldF</code>",id:"innerfoldf",level:3},{value:"Example",id:"example-6",level:4},{value:"<code>innerOrElse</code>",id:"innerorelse",level:3},{value:"Example",id:"example-7",level:4},{value:"<code>innerOrElseF</code>",id:"innerorelsef",level:3},{value:"Example",id:"example-8",level:4},{value:"Do",id:"do",level:2},{value:"<code>innerForeach</code>",id:"innerforeach",level:3},{value:"Example",id:"example-9",level:4},{value:"<code>innerForeachF</code>",id:"innerforeachf",level:3},{value:"Example",id:"example-10",level:4},{value:"Check and Search",id:"check-and-search",level:2},{value:"<code>innerFilter</code>",id:"innerfilter",level:3},{value:"Example",id:"example-11",level:4},{value:"<code>innerExists</code>",id:"innerexists",level:3},{value:"Example",id:"example-12",level:4},{value:"<code>innerContains</code>",id:"innercontains",level:3},{value:"Example",id:"example-13",level:4},{value:"<code>innerForall</code>",id:"innerforall",level:3},{value:"Example",id:"example-14",level:4},{value:"<code>innerCollect</code>",id:"innercollect",level:3},{value:"Example",id:"example-15",level:4}],c={toc:s},u="wrapper";function m(e){let{components:n,...a}=e;return(0,l.kt)(u,(0,t.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"extension-methods-for-foptiona"},"Extension Methods for ",(0,l.kt)("inlineCode",{parentName:"h2"},"F[Option[A]]")),(0,l.kt)("h2",{id:"change-value"},"Change Value"),(0,l.kt)("h3",{id:"innermap"},(0,l.kt)("inlineCode",{parentName:"h3"},"innerMap")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"val foa: F[Option[A]] = ...\nfoa.innerMap(A => B) // F[Option[B]]\n")),(0,l.kt)("h4",{id:"example"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval foa = IO.pure(1.some)\n// foa: IO[Option[Int]] = Pure(a = Some(value = 1))\n\nfoa.innerMap(_ + 999)\n  .unsafeRunSync()\n// res1: Option[Int] = Some(value = 1000)\n")),(0,l.kt)("h3",{id:"innerflatmap"},(0,l.kt)("inlineCode",{parentName:"h3"},"innerFlatMap")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"val foa: F[Option[A]] = ...\nfoa.innerFlatMap(A => Option[B]) // F[Option[B]]\n")),(0,l.kt)("h4",{id:"example-1"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval foa = IO.pure(1.some)\n// foa: IO[Option[Int]] = Pure(a = Some(value = 1))\n\nfoa.innerFlatMap(a => (a + 999).some)\n  .unsafeRunSync()\n// res3: Option[Int] = Some(value = 1000)\n")),(0,l.kt)("h3",{id:"innerflatmapf"},(0,l.kt)("inlineCode",{parentName:"h3"},"innerFlatMapF")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"val foa: F[Option[A]] = ...\nfoa.innerFlatMapF(A => F[Option[B]]) // F[Option[B]]\n")),(0,l.kt)("h4",{id:"example-2"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval foa = IO.pure(1.some)\n// foa: IO[Option[Int]] = Pure(a = Some(value = 1))\n\nfoa.innerFlatMapF(a => IO.pure((a + 999).some))\n  .unsafeRunSync()\n// res5: Option[Int] = Some(value = 1000)\n")),(0,l.kt)("h2",{id:"get-value"},"Get Value"),(0,l.kt)("h3",{id:"innergetorelse"},(0,l.kt)("inlineCode",{parentName:"h3"},"innerGetOrElse")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"val foa: F[Option[A]] = ...\nfoa.innerGetOrElse[B >: A](=> B) // F[Option[B]]\n")),(0,l.kt)("h4",{id:"example-3"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval foa = IO.pure(999.some)\n// foa: IO[Option[Int]] = Pure(a = Some(value = 999))\nfoa.innerGetOrElse(0)\n  .unsafeRunSync()\n// res7: Int = 999\n\nval foa2 = IO.pure(none[Int])\n// foa2: IO[Option[Int]] = Pure(a = None)\nfoa2.innerGetOrElse(0)\n  .unsafeRunSync()\n// res8: Int = 0\n")),(0,l.kt)("h3",{id:"innergetorelsef"},(0,l.kt)("inlineCode",{parentName:"h3"},"innerGetOrElseF")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"val foa: F[Option[A]] = ...\nfoa.innerGetOrElseF[B >: A](=> F[B]) // F[Option[B]]\n")),(0,l.kt)("h4",{id:"example-4"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval foa = IO.pure(999.some)\n// foa: IO[Option[Int]] = Pure(a = Some(value = 999))\nfoa.innerGetOrElseF(IO.pure(0))\n  .unsafeRunSync()\n// res10: Int = 999\n\nval foa2 = IO.pure(none[Int])\n// foa2: IO[Option[Int]] = Pure(a = None)\nfoa2.innerGetOrElseF(IO.pure(0))\n  .unsafeRunSync()\n// res11: Int = 0\n")),(0,l.kt)("h3",{id:"innerfold"},(0,l.kt)("inlineCode",{parentName:"h3"},"innerFold")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"val foa: F[Option[A]] = ...\nfoa.innerFold[B](=> B)(A => B) // F[B]\n")),(0,l.kt)("h4",{id:"example-5"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval foa = IO.pure(1.some)\n// foa: IO[Option[Int]] = Pure(a = Some(value = 1))\nfoa.innerFold(0)(_ + 999)\n  .unsafeRunSync()\n// res13: Int = 1000\n\nval foa2 = IO.pure(none[Int])\n// foa2: IO[Option[Int]] = Pure(a = None)\nfoa2.innerFold(0)(_ + 999)\n  .unsafeRunSync()\n// res14: Int = 0\n")),(0,l.kt)("h3",{id:"innerfoldf"},(0,l.kt)("inlineCode",{parentName:"h3"},"innerFoldF")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"val foa: F[Option[A]] = ...\nfoa.innerFoldF[B >: A](=> F[B])(A => F[B]) // F[B]\n")),(0,l.kt)("h4",{id:"example-6"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval foa = IO.pure(1.some)\n// foa: IO[Option[Int]] = Pure(a = Some(value = 1))\n\nfoa.innerFoldF(IO.pure(0))(a => IO.pure(a + 999))\n  .unsafeRunSync()\n// res16: Int = 1000\n\nval foa2 = IO.pure(none[Int])\n// foa2: IO[Option[Int]] = Pure(a = None)\n\nfoa2.innerFoldF(IO.pure(0))(a => IO.pure(a + 999))\n  .unsafeRunSync()\n// res17: Int = 0\n")),(0,l.kt)("h3",{id:"innerorelse"},(0,l.kt)("inlineCode",{parentName:"h3"},"innerOrElse")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"val foa: F[Option[A]] = ...\nfoa.innerOrElse[B >: A](Option[B]) // F[Option[B]]\n")),(0,l.kt)("h4",{id:"example-7"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval foa = IO.pure(1.some)\n// foa: IO[Option[Int]] = Pure(a = Some(value = 1))\n\nfoa.innerOrElse(0.some)\n  .unsafeRunSync()\n// res19: Option[Int] = Some(value = 1)\n\nval foa2 = IO.pure(none[Int])\n// foa2: IO[Option[Int]] = Pure(a = None)\n\nfoa2.innerOrElse(0.some)\n  .unsafeRunSync()\n// res20: Option[Int] = Some(value = 0)\n")),(0,l.kt)("h3",{id:"innerorelsef"},(0,l.kt)("inlineCode",{parentName:"h3"},"innerOrElseF")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"val foa: F[Option[A]] = ...\nfoa.innerOrElse[B >: A](F[Option[B]]) // F[Option[B]]\n")),(0,l.kt)("h4",{id:"example-8"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval foa = IO.pure(1.some)\n// foa: IO[Option[Int]] = Pure(a = Some(value = 1))\n\nfoa.innerOrElseF(IO.pure(0.some))\n  .unsafeRunSync()\n// res22: Option[Int] = Some(value = 1)\n\nval foa2 = IO.pure(none[Int])\n// foa2: IO[Option[Int]] = Pure(a = None)\n\nfoa2.innerOrElseF(IO.pure(0.some))\n  .unsafeRunSync()\n// res23: Option[Int] = Some(value = 0)\n")),(0,l.kt)("h2",{id:"do"},"Do"),(0,l.kt)("h3",{id:"innerforeach"},(0,l.kt)("inlineCode",{parentName:"h3"},"innerForeach")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"val foa: F[Option[A]] = ...\nfoa.innerForeach(A => Unit) // F[Unit]\n")),(0,l.kt)("h4",{id:"example-9"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval foa = IO.pure(1.some)\n// foa: IO[Option[Int]] = Pure(a = Some(value = 1))\nfoa.innerForeach(println)\n  .unsafeRunSync()\n// 1\n\nval foa2 = IO.pure(none[Int])\n// foa2: IO[Option[Int]] = Pure(a = None)\nfoa2.innerForeach(println)\n  .unsafeRunSync()\n")),(0,l.kt)("h3",{id:"innerforeachf"},(0,l.kt)("inlineCode",{parentName:"h3"},"innerForeachF")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"val foa: F[Option[A]] = ...\nfoa.innerForeachF(A => F[Unit]) // F[Unit]\n")),(0,l.kt)("h4",{id:"example-10"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval foa = IO.pure(1.some)\n// foa: IO[Option[Int]] = Pure(a = Some(value = 1))\n\nfoa.innerForeachF(a => IO.delay(println(a)))\n  .unsafeRunSync()\n// 1\n\nval foa2 = IO.pure(none[Int])\n// foa2: IO[Option[Int]] = Pure(a = None)\n\nfoa2.innerForeachF(a => IO.delay(println(a)))\n  .unsafeRunSync()\n")),(0,l.kt)("h2",{id:"check-and-search"},"Check and Search"),(0,l.kt)("h3",{id:"innerfilter"},(0,l.kt)("inlineCode",{parentName:"h3"},"innerFilter")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"val foa: F[Option[A]] = ...\nfoa.innerFilter(A => Boolean) // F[Option[A]]\n")),(0,l.kt)("h4",{id:"example-11"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval foa = IO.pure(1.some)\n// foa: IO[Option[Int]] = Pure(a = Some(value = 1))\n\nfoa.innerFilter(_ > 0)\n  .unsafeRunSync()\n// res31: Option[Int] = Some(value = 1)\n\nfoa.innerFilter(_ > 1)\n  .unsafeRunSync()\n// res32: Option[Int] = None\n")),(0,l.kt)("h3",{id:"innerexists"},(0,l.kt)("inlineCode",{parentName:"h3"},"innerExists")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"val foa: F[Option[A]] = ...\nfoa.innerExists(A => Boolean) // F[Boolean]\n")),(0,l.kt)("h4",{id:"example-12"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval foa = IO.pure(1.some)\n// foa: IO[Option[Int]] = Pure(a = Some(value = 1))\n\nfoa.innerExists(_ > 0)\n  .unsafeRunSync()\n// res34: Boolean = true\n\nfoa.innerExists(_ > 1)\n  .unsafeRunSync()\n// res35: Boolean = false\n")),(0,l.kt)("h3",{id:"innercontains"},(0,l.kt)("inlineCode",{parentName:"h3"},"innerContains")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"val foa: F[Option[A]] = ...\nfoa.innerContains(A) // F[Boolean]\n")),(0,l.kt)("h4",{id:"example-13"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval foa = IO.pure(1.some)\n// foa: IO[Option[Int]] = Pure(a = Some(value = 1))\n\nfoa.innerContains(1)\n  .unsafeRunSync()\n// res37: Boolean = true\n\nfoa.innerContains(0)\n  .unsafeRunSync()\n// res38: Boolean = false\n")),(0,l.kt)("h3",{id:"innerforall"},(0,l.kt)("inlineCode",{parentName:"h3"},"innerForall")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"val foa: F[Option[A]] = ...\nfoa.innerForall(A) // F[Boolean]\n")),(0,l.kt)("h4",{id:"example-14"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval foa = IO.pure(1.some)\n// foa: IO[Option[Int]] = Pure(a = Some(value = 1))\n\nfoa.innerForall(_ > 0)\n  .unsafeRunSync()\n// res40: Boolean = true\n\nfoa.innerForall(_ > 1)\n  .unsafeRunSync()\n// res41: Boolean = false\n\nval foa2 = IO.pure(none[Int])\n// foa2: IO[Option[Int]] = Pure(a = None)\n\nfoa2.innerForall(_ > 1)\n  .unsafeRunSync()\n// res42: Boolean = true\n")),(0,l.kt)("h3",{id:"innercollect"},(0,l.kt)("inlineCode",{parentName:"h3"},"innerCollect")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"val foa: F[Option[A]] = ...\nfoa.innerCollect(PartialFunction[A, B]) // F[Option[B]]\n")),(0,l.kt)("h4",{id:"example-15"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.syntax.all._\nimport cats.effect._\n\nimport extras.cats.syntax.all._\n\nval foa = IO.pure(1.some)\n// foa: IO[Option[Int]] = Pure(a = Some(value = 1))\n\nfoa.innerCollect {\n  case 1 => 0\n  case 2 => 999\n}\n  .unsafeRunSync()\n// res44: Option[Int] = Some(value = 0)\n\nval foa2 = IO.pure(2.some)\n// foa2: IO[Option[Int]] = Pure(a = Some(value = 2))\n\nfoa2.innerCollect {\n  case 1 => 0\n  case 2 => 999\n}\n  .unsafeRunSync()\n// res45: Option[Int] = Some(value = 999)\n\nval foa3 = IO.pure(3.some)\n// foa3: IO[Option[Int]] = Pure(a = Some(value = 3))\n\nfoa3.innerCollect {\n  case 1 => 0\n  case 2 => 999\n}\n  .unsafeRunSync()\n// res46: Option[Int] = None\n")))}m.isMDXComponent=!0}}]);