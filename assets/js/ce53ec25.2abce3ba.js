"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[608],{4419:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"extras-hedgehog/extras-hedgehog-ce3/with-runner/with-io","title":"withIO","description":"Module","source":"@site/../generated-docs/docs/extras-hedgehog/extras-hedgehog-ce3/with-runner/with-io.md","sourceDirName":"extras-hedgehog/extras-hedgehog-ce3/with-runner","slug":"/extras-hedgehog/extras-hedgehog-ce3/with-runner/with-io","permalink":"/docs/extras-hedgehog/extras-hedgehog-ce3/with-runner/with-io","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"id":"with-io","title":"withIO"},"sidebar":"tutorialSidebar","previous":{"title":"runIO","permalink":"/docs/extras-hedgehog/extras-hedgehog-ce3/with-runner/run-io"},"next":{"title":"With TestContext","permalink":"/docs/extras-hedgehog/extras-hedgehog-ce3/with-runner/with-manual-test-context-creation"}}');var s=t(4848),o=t(8453);const i={sidebar_position:2,id:"with-io",title:"withIO"},a=void 0,c={},d=[{value:"Module",id:"module",level:2},{value:"<code>withIO</code>",id:"withio",level:2},{value:"completeThen",id:"completethen",level:3},{value:"errorThen",id:"errorthen",level:3}];function h(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"module",children:"Module"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",children:'"io.kevinlee" %% "extras-hedgehog-ce3" % "0.46.1" % Test\n'})}),"\n",(0,s.jsxs)(n.p,{children:["or for ",(0,s.jsx)(n.code,{children:"Scala.js"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",children:'"io.kevinlee" %%% "extras-hedgehog-ce3" % "0.46.1" % Test\n'})}),"\n",(0,s.jsx)(n.h2,{id:"withio",children:(0,s.jsx)(n.code,{children:"withIO"})}),"\n",(0,s.jsxs)(n.p,{children:["If you just run ",(0,s.jsx)(n.code,{children:"IO.unsafeRunSync()"})," in a test, it may not end and just hang. extras for hedgehog and cats-effect 3 (",(0,s.jsx)(n.code,{children:"extras-hedgehog-ce3"}),") can solve it with ",(0,s.jsx)(n.code,{children:"withIO"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",children:"def withIO(test: => Ticker => Result): Result\n"})}),"\n",(0,s.jsxs)(n.p,{children:["To use ",(0,s.jsx)(n.code,{children:"withIO"}),", your test needs to extend ",(0,s.jsx)(n.code,{children:"CatsEffectRunner"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",children:"import hedgehog.runner._\nimport extras.hedgehog.ce3.CatsEffectRunner\n\nobject SomeSpec extends Properties with CatsEffectRunner {\n"})}),"\n",(0,s.jsxs)(n.p,{children:["then in your test, use ",(0,s.jsx)(n.code,{children:"withIO"})," like"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",metastring:"{2}",children:"def test: Result = \n  withIO { implicit ticker =>\n    // Your test\n    val exected = ??? // A\n    val actual = ??? // IO[A]\n    actual.completeThen(_ ==== expected)\n  }\n"})}),"\n",(0,s.jsx)(n.p,{children:"or"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",metastring:"{4}",children:'def test: Property =\n  for {\n    n <- Gen.int(Range.linear(1, 100)).log("n")\n  } yield withIO { implicit ticker =>\n    // Your test\n    val exected = ??? // A\n    val actual = ??? // IO[A]\n    actual.completeThen(_ ==== expected)\n  }\n'})}),"\n",(0,s.jsx)(n.h3,{id:"completethen",children:"completeThen"}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:"CatsEffectRunner"})," and ",(0,s.jsx)(n.code,{children:"completeThen"})," instead of ",(0,s.jsx)(n.code,{children:"unsafeRunSync()"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",metastring:"{8,16,21-23} mdoc:reset-object",children:'import cats.effect._\n\nimport extras.hedgehog.ce3.CatsEffectRunner\n\nimport hedgehog._\nimport hedgehog.runner._\n\nobject SomeSpec extends Properties with CatsEffectRunner {\n  \n  override def tests: List[Test] = List(\n    property("test with CatsEffectRunner and completeThen", testCatsEffectRunnerWithCompleteThen)\n  )\n  \n  def testCatsEffectRunnerWithCompleteThen: Property = for {\n    n <- Gen.int(Range.linear(Int.MinValue, Int.MaxValue)).log("n")\n  } yield withIO { implicit ticker =>\n\n    val expected = n\n    val actual = IO(n)\n\n    actual.completeThen { actual =>\n      actual ==== expected\n    }\n  }\n}\n\n'})}),"\n",(0,s.jsx)(n.h3,{id:"errorthen",children:"errorThen"}),"\n",(0,s.jsxs)(n.p,{children:["If you want to test with ",(0,s.jsx)(n.code,{children:"IO"})," which may result in some ",(0,s.jsx)(n.code,{children:"Exception"})," thrown, you can use ",(0,s.jsx)(n.code,{children:"errorThen"})," instead of ",(0,s.jsx)(n.code,{children:"unsafeRunSync()"})," and ",(0,s.jsx)(n.code,{children:"Try"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-scala",metastring:"{8,22,27-29} mdoc:reset-object",children:'import cats.effect._\n\nimport extras.hedgehog.ce3.CatsEffectRunner\n\nimport hedgehog._\nimport hedgehog.runner._\n\nobject SomeSpec extends Properties with CatsEffectRunner {\n\n  override def tests: List[Test] = List(\n    property("test with CatsEffectRunner and errorThen", testCatsEffectRunnerWithErrorThen)\n  )\n\n  def testCatsEffectRunnerWithErrorThen: Property = for {\n    message <- Gen.string(Gen.alphaNum, Range.linear(1, 10)).log("message")\n    error <- Gen\n      .element1(\n        TestError.someTestError(s"Don\'t worry it\'s only a test error. $message"),\n        TestError.anotherTestError(s"Don\'t worry it\'s only a test error. $message")\n      )\n      .log("error")\n  } yield withIO { implicit ticker =>\n\n    val expected = error\n    val actual = IO.raiseError[Int](error)\n\n    actual.errorThen { actual =>\n      actual ==== expected\n    }\n  }\n\n  sealed abstract class TestError(val message: String) extends RuntimeException(message)\n\n  object TestError {\n    final case class SomeTestError(override val message: String) extends TestError(message)\n    final case class AnotherTestError(override val message: String) extends TestError(message)\n\n    def anotherTestError(message: String): TestError = AnotherTestError(message)\n    def someTestError(message: String): TestError = SomeTestError(message)\n\n  }\n}\n'})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(6540);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);