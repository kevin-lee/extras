name: Release

on:
  workflow_dispatch:

  push:
    branches:
      - main
    tags:
      - '*'

env:
  GH_JAVA_VERSION: "11"
  GH_JAVA_DISTRIBUTION: "temurin"
  GH_JAVA_OPTS: "-Xss64m -Xms1024m -Xmx8G -XX:MaxMetaspaceSize=2G -XX:MaxInlineLevel=18 -XX:+UnlockExperimentalVMOptions"


jobs:

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        scala:
          - { name: "Scala", java-version: "11", java-distribution: "temurin", report: "" }

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v5
        with:
          java-version: ${{ matrix.scala.java-version }}
          distribution: ${{ matrix.scala.java-distribution }}
          cache: sbt
      - uses: sbt/setup-sbt@v1

      - name: "[Push] Build All for ${{ matrix.scala.name }} - ${{ github.run_number }}"
        if: github.event_name == 'push'
        env:
          CURRENT_BRANCH_NAME: ${{ github.ref }}
          RUN_ID: ${{ github.run_id }}
          RUN_NUMBER: ${{ github.run_number }}
          JAVA_OPTS: ${{ env.GH_JAVA_OPTS }}
          JVM_OPTS: ${{ env.GH_JAVA_OPTS }}
          SBT_OPTS: ${{ env.GH_JAVA_OPTS }}
        run: |
          echo "[BEFORE]CURRENT_BRANCH_NAME=${CURRENT_BRANCH_NAME}"
          export CURRENT_BRANCH_NAME="${CURRENT_BRANCH_NAME#refs/heads/}"
          echo " [AFTER]CURRENT_BRANCH_NAME=${CURRENT_BRANCH_NAME}"
          echo "RUN_ID=${RUN_ID}"
          echo "RUN_NUMBER=${RUN_NUMBER}"
          
          echo "JAVA_OPTS=${JAVA_OPTS}"
          echo " JVM_OPTS=${JVM_OPTS}"
          echo " SBT_OPTS=${SBT_OPTS}"
          java -version
          sbt \
            -v \
            clean \
            +test

  gh-release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-java@v5
      with:
        java-version: ${{ env.GH_JAVA_VERSION }}
        distribution: ${{ env.GH_JAVA_DISTRIBUTION }}
        cache: sbt
    - uses: sbt/setup-sbt@v1

    - name: sbt GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_AUTH_TOKEN_GITHUB }}
        JAVA_OPTS: ${{ env.GH_JAVA_OPTS }}
        JVM_OPTS: ${{ env.GH_JAVA_OPTS }}
        SBT_OPTS: ${{ env.GH_JAVA_OPTS }}
      run: |
        echo "Run] sbt GitHub release"
        echo "JAVA_OPTS=${JAVA_OPTS}"
        echo " JVM_OPTS=${JVM_OPTS}"
        echo " SBT_OPTS=${SBT_OPTS}"
        echo 'sbt devOopsGitHubRelease'
        sbt \
          devOopsGitHubRelease

  publish:
    needs: gh-release

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v5
        with:
          java-version: ${{ env.GH_JAVA_VERSION }}
          distribution: ${{ env.GH_JAVA_DISTRIBUTION }}
          cache: sbt
      - uses: sbt/setup-sbt@v1

      - uses: olafurpg/setup-gpg@v3

      - name: "sbt ci-release - ${{ github.run_number }}"
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          GITHUB_TOKEN: ${{ secrets.RELEASE_AUTH_TOKEN_GITHUB }}
          JAVA_OPTS: ${{ env.GH_JAVA_OPTS }}
          JVM_OPTS: ${{ env.GH_JAVA_OPTS }}
          SBT_OPTS: ${{ env.GH_JAVA_OPTS }}
        run: |
          echo "Run] sbt ci-release"
          export SOURCE_DATE_EPOCH=$(date +%s)
          echo "SOURCE_DATE_EPOCH=$SOURCE_DATE_EPOCH"
          echo "JAVA_OPTS=${JAVA_OPTS}"
          echo " JVM_OPTS=${JVM_OPTS}"
          echo " SBT_OPTS=${SBT_OPTS}"
          echo 'sbt -v clean +packagedArtifacts ci-release'
          sbt \
            -v \
            clean \
            +packagedArtifacts \
            ci-release


  publish-snapshot:
    needs: build
    if: startsWith(github.ref, 'refs/heads/')

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v5
        with:
          java-version: ${{ env.GH_JAVA_VERSION }}
          distribution: ${{ env.GH_JAVA_DISTRIBUTION }}
          cache: sbt
      - uses: sbt/setup-sbt@v1

      - uses: olafurpg/setup-gpg@v3

      - name: "sbt ci-release (no tag) - ${{ github.run_number }}"
        if: startsWith(github.ref, 'refs/heads/')
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          JAVA_OPTS: ${{ env.GH_JAVA_OPTS }}
          JVM_OPTS: ${{ env.GH_JAVA_OPTS }}
          SBT_OPTS: ${{ env.GH_JAVA_OPTS }}
        run: |
          echo "Run] sbt ci-release"
          export SOURCE_DATE_EPOCH=$(date +%s)
          echo "SOURCE_DATE_EPOCH=$SOURCE_DATE_EPOCH"
          echo "JAVA_OPTS=${JAVA_OPTS}"
          echo " JVM_OPTS=${JVM_OPTS}"
          echo " SBT_OPTS=${SBT_OPTS}"
          echo 'sbt -v clean +packagedArtifacts ci-release'
          sbt \
            -v \
            clean \
            +packagedArtifacts \
            ci-release
